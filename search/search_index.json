{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"AIToolkit Base \u6587\u6863","text":""},{"location":"#_1","title":"\u9879\u76ee\u7b80\u4ecb","text":"<p>AIToolkit Base \u662f\u4e00\u4e2a\u9762\u5411\u4e2d\u5b66\u751f\u7684\u7b80\u5355AI\u5de5\u5177\u5305\uff0c\u57fa\u4e8eMediaPipe\u5c01\u88c5\uff0c\u63d0\u4f9b\u7b80\u5355\u6613\u7528\u7684\u4eba\u8138\u68c0\u6d4b\u3001\u4eba\u8138\u5173\u952e\u70b9\u68c0\u6d4b\u3001\u624b\u90e8\u5173\u952e\u70b9\u68c0\u6d4b\u3001\u4eba\u4f53\u59ff\u6001\u68c0\u6d4b\u3001\u624b\u52bf\u8bc6\u522b\u548c\u7269\u4f53\u68c0\u6d4b\u529f\u80fd\u3002</p> <p>\u8be5\u5de5\u5177\u5305\u8bbe\u8ba1\u4ee5\u7b80\u5355\u3001\u6613\u7528\u548c\u6559\u80b2\u4e3a\u76ee\u6807\uff0c\u9002\u5408\u5728\u4e2d\u5b66AI\u6559\u80b2\u4e2d\u4f7f\u7528\uff0c\u5e2e\u52a9\u5b66\u751f\u5feb\u901f\u7406\u89e3\u548c\u5e94\u7528\u4eba\u5de5\u667a\u80fd\u6280\u672f\u3002</p>"},{"location":"#_2","title":"\u4e3b\u8981\u7279\u6027","text":"<ul> <li>\u7b80\u5355\u6613\u7528\u7684API\u8bbe\u8ba1\uff1a\u7edf\u4e00\u7684\u63a5\u53e3\u98ce\u683c\uff0c\u6613\u4e8e\u4e0a\u624b</li> <li>\u667a\u80fd\u8f93\u5165\u6e90\u8bc6\u522b\uff1a\u81ea\u52a8\u533a\u5206\u56fe\u7247/\u89c6\u9891\u6d41\u8f93\u5165</li> <li>\u7edf\u4e00\u7684\u63a5\u53e3\u8bbe\u8ba1\uff1a\u6240\u6709\u68c0\u6d4b\u5668\u91c7\u7528\u4e00\u81f4\u7684\u521d\u59cb\u5316\u53c2\u6570\u548c\u65b9\u6cd5</li> <li>\u4e2d\u6587\u6ce8\u91ca\u548c\u6587\u6863\uff1a\u63d0\u4f9b\u5168\u9762\u7684\u4e2d\u6587\u6587\u6863\u548c\u6ce8\u91ca</li> <li>\u81ea\u52a8\u7684\u53ef\u89c6\u5316\u529f\u80fd\uff1a\u5185\u7f6e\u7ed8\u5236\u529f\u80fd\uff0c\u8f7b\u677e\u53ef\u89c6\u5316\u68c0\u6d4b\u7ed3\u679c</li> <li>\u5b9e\u65f6\u5904\u7406\u652f\u6301\uff1a\u652f\u6301\u6444\u50cf\u5934\u5b9e\u65f6\u5904\u7406\u548c\u5f02\u6b65\u68c0\u6d4b</li> <li>\u8d44\u6e90\u81ea\u52a8\u7ba1\u7406\uff1a\u5185\u7f6e\u8d44\u6e90\u7ba1\u7406\u673a\u5236\uff0c\u907f\u514d\u8d44\u6e90\u6cc4\u9732</li> <li>\u591a\u79cd\u663e\u793a\u65b9\u5f0f\uff1a\u652f\u6301OpenCV\u7a97\u53e3\u3001Jupyter\u5185\u8054\u663e\u793a\u548c\u7f51\u9875\u663e\u793a</li> </ul>"},{"location":"#_3","title":"\u529f\u80fd\u6a21\u5757","text":""},{"location":"#_4","title":"\u667a\u80fd\u68c0\u6d4b\u6a21\u5757","text":"\u6a21\u5757\u540d\u79f0 \u529f\u80fd\u63cf\u8ff0 \u8f93\u5165\u6a21\u5f0f\u652f\u6301 \u8d44\u6e90\u7ba1\u7406 FaceLandmarker \u4eba\u8138468\u5173\u952e\u70b9\u68c0\u6d4b \u2705 \u56fe\u7247/\u89c6\u9891\u6d41 \u2705 \u81ea\u52a8\u91ca\u653e HandLandmarker \u53cc\u624b21\u5173\u952e\u70b9\u68c0\u6d4b \u2705 \u56fe\u7247/\u89c6\u9891\u6d41 \u2705 \u81ea\u52a8\u91ca\u653e PoseLandmarker \u5168\u8eab33\u5173\u952e\u70b9\u68c0\u6d4b \u2705 \u56fe\u7247/\u89c6\u9891\u6d41 \u2705 \u81ea\u52a8\u91ca\u653e GestureRecognizer 20+\u79cd\u624b\u52bf\u8bc6\u522b \u2705 \u56fe\u7247/\u89c6\u9891\u6d41 \u2705 \u81ea\u52a8\u91ca\u653e FaceDetector \u4eba\u8138\u68c0\u6d4b\u4e0e\u8ddf\u8e2a \u2705 \u56fe\u7247/\u89c6\u9891\u6d41 \u2705 \u81ea\u52a8\u91ca\u653e ObjectDetector \u76ee\u6807\u68c0\u6d4b\u4e0e\u8ddf\u8e2a \u2705 \u56fe\u7247/\u89c6\u9891\u6d41 \u2705 \u81ea\u52a8\u91ca\u653e"},{"location":"#_5","title":"\u8f85\u52a9\u5de5\u5177\u6a21\u5757","text":"<ul> <li>Camera\uff1a\u589e\u5f3a\u7684\u6444\u50cf\u5934\u5de5\u5177\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u5e27\u6355\u83b7\u3001\u81ea\u52a8\u91cd\u8fde\u7b49\u529f\u80fd</li> <li>ImageUtils\uff1a\u56fe\u50cf\u5904\u7406\u5de5\u5177\u7c7b\uff0c\u63d0\u4f9b\u8c03\u6574\u5927\u5c0f\u3001\u683c\u5f0f\u8f6c\u6362\u7b49\u529f\u80fd</li> <li>ModelManager\uff1a\u6a21\u578b\u7ba1\u7406\u5de5\u5177\uff0c\u8d1f\u8d23\u6a21\u578b\u6587\u4ef6\u7684\u67e5\u627e\u548c\u7ba1\u7406</li> </ul>"},{"location":"#_6","title":"\u5b89\u88c5\u6307\u5357","text":""},{"location":"#_7","title":"\u7cfb\u7edf\u8981\u6c42","text":"<ul> <li>Python 3.8+</li> <li>Windows/Linux/macOS</li> </ul>"},{"location":"#_8","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<pre><code>pip install mediapipe&gt;=0.10.0 opencv-python&gt;=4.8.0 numpy&gt;=1.24.0\n</code></pre>"},{"location":"#windows","title":"Windows\u7cfb\u7edf\u5b89\u88c5","text":"<ol> <li>\u4e0b\u8f7d\u6216\u514b\u9686\u672c\u4ed3\u5e93</li> <li>\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff1a<code>cd aitoolkit_base</code></li> <li>\u8fd0\u884c\u5b89\u88c5\u811a\u672c\uff1a<code>build_wheel.bat</code></li> </ol>"},{"location":"#linuxmac","title":"Linux/Mac\u7cfb\u7edf\u5b89\u88c5","text":"<ol> <li>\u4e0b\u8f7d\u6216\u514b\u9686\u672c\u4ed3\u5e93</li> <li>\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff1a<code>cd aitoolkit_base</code></li> <li>\u6dfb\u52a0\u6267\u884c\u6743\u9650\uff1a<code>chmod +x build_wheel.sh</code></li> <li>\u8fd0\u884c\u5b89\u88c5\u811a\u672c\uff1a<code>./build_wheel.sh</code></li> </ol>"},{"location":"#_9","title":"\u624b\u52a8\u5b89\u88c5","text":"<p>\u5982\u679c\u5b89\u88c5\u811a\u672c\u4e0d\u8d77\u4f5c\u7528\uff0c\u53ef\u4ee5\u624b\u52a8\u5b89\u88c5\uff1a</p> <ol> <li> <p>\u521b\u5efa\u6a21\u578b\u76ee\u5f55\uff1a <pre><code>mkdir -p aitoolkit_base/models\n</code></pre></p> </li> <li> <p>\u590d\u5236\u6a21\u578b\u6587\u4ef6\u5230 <code>aitoolkit_base/models/</code>\u76ee\u5f55</p> </li> <li> <p>\u5b89\u88c5\u4f9d\u8d56\uff1a <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>\u5b89\u88c5\u5305\uff1a <pre><code>pip install -e .\n</code></pre></p> </li> </ol>"},{"location":"#_10","title":"\u5feb\u901f\u5165\u95e8","text":"<p>\u8bf7\u53c2\u9605\u5feb\u901f\u5165\u95e8\u6307\u5357\u4e86\u89e3\u5982\u4f55\u5f00\u59cb\u4f7f\u7528AIToolkit Base\u3002 </p>"},{"location":"advanced_usage/","title":"\u8fdb\u9636\u4f7f\u7528\u6280\u5de7","text":"<p>\u672c\u6587\u6863\u63d0\u4f9b\u4e86AIToolkit Base\u7684\u8fdb\u9636\u4f7f\u7528\u6280\u5de7\uff0c\u5e2e\u52a9\u60a8\u66f4\u9ad8\u6548\u5730\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u5305\u3002</p>"},{"location":"advanced_usage/#_2","title":"\u591a\u68c0\u6d4b\u5668\u534f\u540c\u5de5\u4f5c","text":"<p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u68c0\u6d4b\u5668\u534f\u540c\u5de5\u4f5c\uff0c\u4f8b\u5982\u540c\u65f6\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b\u548c\u624b\u52bf\u8bc6\u522b\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector, GestureRecognizer\nimport cv2\n\n# \u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u68c0\u6d4b\u5668\nwith Camera(0) as camera, FaceDetector() as face_detector, GestureRecognizer() as gesture_detector:\n    for frame in camera:\n        # \u8fd0\u884c\u4eba\u8138\u68c0\u6d4b\n        faces = face_detector.run(frame)\n\n        # \u8fd0\u884c\u624b\u52bf\u8bc6\u522b\n        gestures = gesture_detector.run(frame)\n\n        # \u7ed8\u5236\u4eba\u8138\u68c0\u6d4b\u7ed3\u679c\n        result = face_detector.draw(frame, faces)\n\n        # \u5728\u540c\u4e00\u4e2a\u56fe\u50cf\u4e0a\u53e0\u52a0\u624b\u52bf\u8bc6\u522b\u7ed3\u679c\n        result = gesture_detector.draw(result, gestures)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u591a\u68c0\u6d4b\u5668\u7ed3\u679c\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"advanced_usage/#_3","title":"\u6027\u80fd\u4f18\u5316\u6280\u5de7","text":""},{"location":"advanced_usage/#_4","title":"\u964d\u4f4e\u5206\u8fa8\u7387","text":"<p>\u5904\u7406\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u4f1a\u964d\u4f4e\u68c0\u6d4b\u901f\u5ea6\uff0c\u53ef\u4ee5\u8003\u8651\u964d\u4f4e\u8f93\u5165\u56fe\u50cf\u7684\u5206\u8fa8\u7387\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector, ImageUtils\nimport cv2\n\nwith Camera(0) as camera, FaceDetector() as detector:\n    for frame in camera:\n        # \u964d\u4f4e\u5206\u8fa8\u7387\u4ee5\u63d0\u9ad8\u901f\u5ea6\n        small_frame = ImageUtils.resize_image(frame, width=640)\n\n        # \u8fd0\u884c\u68c0\u6d4b\n        faces = detector.run(small_frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = detector.draw(small_frame, faces)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u4f4e\u5206\u8fa8\u7387\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"advanced_usage/#_5","title":"\u51cf\u5c11\u68c0\u6d4b\u9891\u7387","text":"<p>\u5bf9\u4e8e\u5b9e\u65f6\u89c6\u9891\u6d41\uff0c\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u68c0\u6d4b\u9891\u7387\u6765\u63d0\u9ad8\u6027\u80fd\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\nwith Camera(0) as camera, FaceDetector() as detector:\n    frame_count = 0\n    last_faces = None\n\n    for frame in camera:\n        # \u6bcf3\u5e27\u68c0\u6d4b\u4e00\u6b21\n        if frame_count % 3 == 0:\n            faces = detector.run(frame)\n            last_faces = faces\n        else:\n            faces = last_faces\n\n        # \u7ed8\u5236\u7ed3\u679c\n        if faces:\n            result = detector.draw(frame, faces)\n        else:\n            result = frame\n\n        # \u663e\u793a\u7ed3\u679c    \n        cv2.imshow(\"\u51cf\u5c11\u68c0\u6d4b\u9891\u7387\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n\n        frame_count += 1\n</code></pre>"},{"location":"advanced_usage/#_6","title":"\u8c03\u6574\u68c0\u6d4b\u53c2\u6570","text":"<p>\u9002\u5f53\u8c03\u6574\u68c0\u6d4b\u53c2\u6570\u4e5f\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\n# \u901a\u8fc7\u964d\u4f4e\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\u9608\u503c\u548c\u6700\u5927\u68c0\u6d4b\u6570\u91cf\u6765\u63d0\u9ad8\u6027\u80fd\nwith Camera(0) as camera, FaceDetector(min_detection_confidence=0.3, max_num_faces=1) as detector:\n    for frame in camera:\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n        cv2.imshow(\"\u4f18\u5316\u53c2\u6570\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"advanced_usage/#_7","title":"\u9519\u8bef\u5904\u7406\u4e0e\u5f02\u5e38\u6062\u590d","text":"<p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u826f\u597d\u7684\u9519\u8bef\u5904\u7406\u975e\u5e38\u91cd\u8981\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\nimport time\n\n# \u542f\u52a8\u6444\u50cf\u5934\u548c\u68c0\u6d4b\u5668\ntry:\n    camera = Camera(0, auto_reconnect=True)\n    detector = FaceDetector()\n\n    while True:\n        try:\n            # \u8bfb\u53d6\u5e27\n            ret, frame = camera.read()\n            if not ret:\n                print(\"\u65e0\u6cd5\u8bfb\u53d6\u5e27\uff0c\u7b49\u5f85...\")\n                time.sleep(0.5)\n                continue\n\n            # \u8fd0\u884c\u68c0\u6d4b\n            try:\n                faces = detector.run(frame)\n                result = detector.draw(frame, faces)\n            except Exception as e:\n                print(f\"\u68c0\u6d4b\u5931\u8d25: {str(e)}\")\n                result = frame\n\n            # \u663e\u793a\u7ed3\u679c\n            cv2.imshow(\"\u9519\u8bef\u5904\u7406\", result)\n            if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n                break\n\n        except Exception as e:\n            print(f\"\u5904\u7406\u5f02\u5e38: {str(e)}\")\n            time.sleep(1)  # \u51fa\u9519\u65f6\u6682\u505c\u4e00\u79d2\u518d\u7ee7\u7eed\n\nexcept Exception as e:\n    print(f\"\u4e25\u91cd\u9519\u8bef: {str(e)}\")\nfinally:\n    # \u786e\u4fdd\u8d44\u6e90\u88ab\u91ca\u653e\n    if 'camera' in locals():\n        camera.release()\n    if 'detector' in locals():\n        detector.close()\n    cv2.destroyAllWindows()\n</code></pre>"},{"location":"advanced_usage/#_8","title":"\u81ea\u5b9a\u4e49\u68c0\u6d4b\u7ed3\u679c\u5904\u7406","text":"<p>\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5982\u4f55\u5904\u7406\u68c0\u6d4b\u7ed3\u679c\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\nimport time\n\n# \u81ea\u5b9a\u4e49\u4eba\u8138\u4fe1\u606f\u5904\u7406\ndef process_face_info(faces):\n    if not faces:\n        return \"\u672a\u68c0\u6d4b\u5230\u4eba\u8138\"\n\n    result = []\n    for i, face in enumerate(faces):\n        confidence = face[\"score\"] * 100\n        box = face[\"bounding_box\"]\n        size = box[\"width\"] * box[\"height\"]\n\n        result.append(f\"\u4eba\u8138{i+1}: \u7f6e\u4fe1\u5ea6={confidence:.1f}%, \u5927\u5c0f={size}\u50cf\u7d20\")\n\n    return \"\\n\".join(result)\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u5904\u7406\nwith Camera(0) as camera, FaceDetector() as detector:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        faces = detector.run(frame)\n\n        # \u7ed8\u5236\u57fa\u672c\u7ed3\u679c\n        result = detector.draw(frame, faces)\n\n        # \u5904\u7406\u5e76\u663e\u793a\u81ea\u5b9a\u4e49\u4fe1\u606f\n        info = process_face_info(faces)\n        y_offset = 30\n        for line in info.split(\"\\n\"):\n            cv2.putText(result, line, (10, y_offset), \n                        cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)\n            y_offset += 30\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u81ea\u5b9a\u4e49\u5904\u7406\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"advanced_usage/#_9","title":"\u5f55\u5236\u89c6\u9891","text":"<p>\u5c06\u68c0\u6d4b\u7ed3\u679c\u4fdd\u5b58\u4e3a\u89c6\u9891\u6587\u4ef6\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\n# \u8bbe\u7f6e\u89c6\u9891\u5f55\u5236\u53c2\u6570\ncamera = Camera(0, width=1280, height=720)\ndetector = FaceDetector()\n\n# \u521b\u5efa\u89c6\u9891\u5199\u5165\u5668\nfourcc = cv2.VideoWriter_fourcc(*'XVID')\nout = cv2.VideoWriter('output.avi', fourcc, 20.0, (1280, 720))\n\ntry:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u5f55\u5236\u4e2d\", result)\n\n        # \u5199\u5165\u89c6\u9891\n        out.write(result)\n\n        # \u6309q\u9000\u51fa\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\nfinally:\n    # \u91ca\u653e\u8d44\u6e90\n    camera.release()\n    detector.close()\n    out.release()\n    cv2.destroyAllWindows()\n</code></pre>"},{"location":"advanced_usage/#_10","title":"\u4f7f\u7528\u5f02\u6b65\u6a21\u5f0f","text":"<p>\u5f02\u6b65\u6a21\u5f0f\u53ef\u4ee5\u63d0\u9ad8\u5904\u7406\u6548\u7387\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\nimport threading\nimport queue\nimport time\n\n# \u521b\u5efa\u961f\u5217\u7528\u4e8e\u5b58\u50a8\u5904\u7406\u7ed3\u679c\nresult_queue = queue.Queue(maxsize=5)\n\n# \u5f02\u6b65\u5904\u7406\u7ebf\u7a0b\ndef process_frames(camera, detector, result_queue):\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n\n        # \u5c06\u7ed3\u679c\u653e\u5165\u961f\u5217\uff0c\u5982\u679c\u961f\u5217\u6ee1\u5219\u7b49\u5f85\n        try:\n            result_queue.put((result, time.time()), block=False)\n        except queue.Full:\n            # \u961f\u5217\u6ee1\uff0c\u4e22\u5f03\u5f53\u524d\u5e27\n            pass\n\n# \u4e3b\u7a0b\u5e8f\nwith Camera(0) as camera, FaceDetector() as detector:\n    # \u542f\u52a8\u5904\u7406\u7ebf\u7a0b\n    processing_thread = threading.Thread(\n        target=process_frames, \n        args=(camera, detector, result_queue)\n    )\n    processing_thread.daemon = True\n    processing_thread.start()\n\n    # \u4e3b\u7ebf\u7a0b\u8d1f\u8d23\u663e\u793a\n    while True:\n        try:\n            # \u83b7\u53d6\u5904\u7406\u7ed3\u679c\uff0c\u8d85\u65f61\u79d2\n            result, timestamp = result_queue.get(timeout=1)\n\n            # \u8ba1\u7b97\u5ef6\u8fdf\n            delay = time.time() - timestamp\n\n            # \u663e\u793a\u7ed3\u679c\u548c\u5ef6\u8fdf\n            cv2.putText(result, f\"Delay: {delay*1000:.1f}ms\", (10, 30), \n                        cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n            cv2.imshow(\"\u5f02\u6b65\u5904\u7406\", result)\n\n            if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n                break\n\n        except queue.Empty:\n            continue\n</code></pre>"},{"location":"advanced_usage/#_11","title":"\u7ec4\u5408\u591a\u79cd\u673a\u5668\u89c6\u89c9\u529f\u80fd","text":"<p>\u5c06\u4e0d\u540c\u7684\u673a\u5668\u89c6\u89c9\u529f\u80fd\u7ec4\u5408\u4f7f\u7528\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector, HandLandmarker\nimport cv2\nimport numpy as np\n\n# \u5728\u540c\u4e00\u5e27\u4e0a\u7ec4\u5408\u591a\u79cd\u89c6\u89c9\u529f\u80fd\nwith Camera(0) as camera, FaceDetector() as face_detector, HandLandmarker() as hand_detector:\n    for frame in camera:\n        # \u521b\u5efa\u4e00\u4e2a\u539f\u59cb\u5e27\u7684\u526f\u672c\n        display = frame.copy()\n\n        # \u6dfb\u52a0\u4eba\u8138\u68c0\u6d4b\n        faces = face_detector.run(frame)\n        if faces:\n            display = face_detector.draw(display, faces)\n\n        # \u6dfb\u52a0\u624b\u90e8\u5173\u952e\u70b9\u68c0\u6d4b\n        hands = hand_detector.run(frame)\n        if hands:\n            display = hand_detector.draw(display, hands)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u89c6\u89c9\u529f\u80fd\u7ec4\u5408\", display)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre> <p>\u4ee5\u4e0a\u5c31\u662fAIToolkit Base\u7684\u4e00\u4e9b\u8fdb\u9636\u4f7f\u7528\u6280\u5de7\uff0c\u901a\u8fc7\u8fd9\u4e9b\u6280\u5de7\uff0c\u60a8\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u5305\u6765\u5b9e\u73b0\u590d\u6742\u7684\u5e94\u7528\u3002 </p>"},{"location":"conclusion/","title":"\u6587\u6863\u603b\u7ed3","text":"<p>AIToolkit Base \u662f\u4e00\u4e2a\u4e13\u4e3a\u4e2d\u5b66\u751f\u8bbe\u8ba1\u7684\u7b80\u5355AI\u5de5\u5177\u5305\uff0c\u5b83\u57fa\u4e8eMediaPipe\u5c01\u88c5\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6613\u4e8e\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u529f\u80fd\u3002\u8fd9\u4e2a\u6587\u6863\u6982\u8ff0\u4e86\u8be5\u5de5\u5177\u5305\u7684\u4e3b\u8981\u529f\u80fd\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e0c\u671b\u5bf9\u60a8\u7684\u5b66\u4e60\u548c\u5f00\u53d1\u6709\u6240\u5e2e\u52a9\u3002</p>"},{"location":"conclusion/#_2","title":"\u6838\u5fc3\u529f\u80fd\u56de\u987e","text":"<p>AIToolkit Base \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u6838\u5fc3\u529f\u80fd\u6a21\u5757\uff1a</p>"},{"location":"conclusion/#_3","title":"\u4eba\u8138\u5206\u6790","text":"<ul> <li>FaceDetector\uff1a\u68c0\u6d4b\u56fe\u50cf\u6216\u89c6\u9891\u4e2d\u7684\u4eba\u8138\u4f4d\u7f6e</li> <li>FaceLandmarker\uff1a\u68c0\u6d4b\u4eba\u8138\u7684468\u4e2a\u5173\u952e\u70b9</li> </ul>"},{"location":"conclusion/#_4","title":"\u4eba\u4f53\u5206\u6790","text":"<ul> <li>HandLandmarker\uff1a\u68c0\u6d4b\u624b\u90e8\u768421\u4e2a\u5173\u952e\u70b9</li> <li>PoseLandmarker\uff1a\u68c0\u6d4b\u5168\u8eab33\u4e2a\u5173\u952e\u70b9</li> <li>GestureRecognizer\uff1a\u8bc6\u522b\u591a\u79cd\u624b\u52bf\u7c7b\u578b</li> </ul>"},{"location":"conclusion/#_5","title":"\u56fe\u50cf\u5206\u6790","text":"<ul> <li>ObjectDetector\uff1a\u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u7269\u4f53</li> </ul>"},{"location":"conclusion/#_6","title":"\u8f85\u52a9\u5de5\u5177","text":"<ul> <li>Camera\uff1a\u589e\u5f3a\u578b\u6444\u50cf\u5934\u5de5\u5177\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u3001\u81ea\u52a8\u91cd\u8fde\u3001\u8fed\u4ee3\u5668\u7b49\u529f\u80fd</li> <li>ImageUtils\uff1a\u56fe\u50cf\u5904\u7406\u5de5\u5177\u7c7b</li> <li>ModelManager\uff1a\u6a21\u578b\u7ba1\u7406\u5de5\u5177</li> </ul>"},{"location":"conclusion/#_7","title":"\u8bbe\u8ba1\u7406\u5ff5","text":"<p>AIToolkit Base \u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\uff1a</p> <ol> <li>\u7b80\u5355\u6613\u7528\uff1a\u7edf\u4e00\u7684API\u8bbe\u8ba1\uff0c\u964d\u4f4e\u5b66\u4e60\u95e8\u69db</li> <li>\u529f\u80fd\u5f3a\u5927\uff1a\u63d0\u4f9b\u4e30\u5bcc\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u529f\u80fd</li> <li>\u8d44\u6e90\u5b89\u5168\uff1a\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90\uff0c\u907f\u514d\u8d44\u6e90\u6cc4\u9732</li> <li>\u6559\u80b2\u5bfc\u5411\uff1a\u63d0\u4f9b\u4e2d\u6587\u6587\u6863\u548c\u6ce8\u91ca\uff0c\u9002\u5408\u6559\u80b2\u573a\u666f</li> </ol>"},{"location":"conclusion/#_8","title":"\u4f7f\u7528\u5efa\u8bae","text":"<ol> <li>\u719f\u6089\u57fa\u672c\u6982\u5ff5\uff1a\u5728\u5f00\u59cb\u4f7f\u7528\u524d\uff0c\u5148\u4e86\u89e3\u56fe\u7247\u6a21\u5f0f\u548c\u89c6\u9891\u6d41\u6a21\u5f0f\u7684\u533a\u522b</li> <li>\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff1a\u63a8\u8350\u4f7f\u7528<code>with</code>\u8bed\u53e5\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90</li> <li>\u6027\u80fd\u4f18\u5316\uff1a\u6839\u636e\u5b9e\u9645\u9700\u8981\u8c03\u6574\u5206\u8fa8\u7387\u3001\u68c0\u6d4b\u9891\u7387\u548c\u68c0\u6d4b\u53c2\u6570</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u52a0\u5165\u5b8c\u5584\u7684\u9519\u8bef\u5904\u7406\u673a\u5236</li> <li>\u7ec4\u5408\u4f7f\u7528\uff1a\u5c1d\u8bd5\u7ec4\u5408\u591a\u79cd\u68c0\u6d4b\u5668\uff0c\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u529f\u80fd</li> </ol>"},{"location":"conclusion/#_9","title":"\u53d1\u5c55\u65b9\u5411","text":"<p>AIToolkit Base \u8ba1\u5212\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\u6dfb\u52a0\u6216\u589e\u5f3a\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ol> <li>\u66f4\u591a\u7c7b\u578b\u7684\u89c6\u89c9\u5206\u6790\u529f\u80fd</li> <li>\u66f4\u9ad8\u7684\u68c0\u6d4b\u7cbe\u5ea6\u548c\u901f\u5ea6</li> <li>\u66f4\u4e30\u5bcc\u7684\u793a\u4f8b\u548c\u6559\u7a0b</li> <li>\u66f4\u6df1\u5165\u7684\u6027\u80fd\u4f18\u5316</li> </ol>"},{"location":"conclusion/#_10","title":"\u53c2\u4e0e\u8d21\u732e","text":"<p>\u6b22\u8fce\u5bf9AIToolkit Base\u8fdb\u884c\u8d21\u732e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u53c2\u4e0e\uff1a</p> <ol> <li>\u62a5\u544abug\u548c\u63d0\u4ea4\u529f\u80fd\u8bf7\u6c42</li> <li>\u63d0\u4ea4\u4ee3\u7801\u6539\u8fdb\u548c\u65b0\u529f\u80fd</li> <li>\u5b8c\u5584\u6587\u6863\u548c\u793a\u4f8b</li> <li>\u5206\u4eab\u60a8\u4f7f\u7528AIToolkit Base\u5f00\u53d1\u7684\u5e94\u7528</li> </ol>"},{"location":"conclusion/#_11","title":"\u6280\u672f\u652f\u6301","text":"<p>\u5982\u679c\u60a8\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u4efb\u4f55\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u83b7\u53d6\u5e2e\u52a9\uff1a</p> <ol> <li>\u67e5\u9605\u8be6\u7ec6\u7684API\u6587\u6863</li> <li>\u53c2\u8003\u793a\u4f8b\u4ee3\u7801</li> <li>\u8054\u7cfb\u5f00\u53d1\u56e2\u961f\u83b7\u53d6\u6280\u672f\u652f\u6301</li> </ol>"},{"location":"conclusion/#_12","title":"\u7ed3\u8bed","text":"<p>AIToolkit Base\u7684\u76ee\u6807\u662f\u8ba9\u8ba1\u7b97\u673a\u89c6\u89c9\u6280\u672f\u53d8\u5f97\u7b80\u5355\u6613\u7528\uff0c\u5e0c\u671b\u5b83\u80fd\u591f\u5e2e\u52a9\u66f4\u591a\u7684\u5b66\u751f\u548c\u6559\u80b2\u5de5\u4f5c\u8005\u63a2\u7d22AI\u7684\u5947\u5999\u4e16\u754c\u3002\u671f\u5f85\u60a8\u80fd\u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u5305\u521b\u9020\u51fa\u7cbe\u5f69\u7684\u5e94\u7528\uff01 </p>"},{"location":"quick_start/","title":"\u5feb\u901f\u5165\u95e8\u6307\u5357","text":"<p>\u672c\u6587\u6863\u5c06\u5e2e\u52a9\u60a8\u8fc5\u901f\u4e0a\u624bAIToolkit Base\uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u5404\u79cd\u68c0\u6d4b\u5668\u548c\u6444\u50cf\u5934\u5de5\u5177\u3002</p>"},{"location":"quick_start/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>AIToolkit Base\u7684\u6240\u6709\u68c0\u6d4b\u5668\u90fd\u9075\u5faa\u76f8\u540c\u7684\u4f7f\u7528\u6a21\u5f0f\uff1a</p> <ol> <li>\u521b\u5efa\u68c0\u6d4b\u5668\uff1a\u4f7f\u7528\u9002\u5f53\u7684\u53c2\u6570\u521d\u59cb\u5316\u68c0\u6d4b\u5668</li> <li>\u8fd0\u884c\u68c0\u6d4b\uff1a\u8c03\u7528<code>run()</code>\u65b9\u6cd5\u8fdb\u884c\u68c0\u6d4b</li> <li>\u53ef\u89c6\u5316\u7ed3\u679c\uff1a\u4f7f\u7528<code>draw()</code>\u65b9\u6cd5\u5c06\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u50cf\u4e0a</li> <li>\u91ca\u653e\u8d44\u6e90\uff1a\u4f7f\u7528<code>close()</code>\u65b9\u6cd5\u6216\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u91ca\u653e\u8d44\u6e90</li> </ol>"},{"location":"quick_start/#_3","title":"\u8fd0\u884c\u6a21\u5f0f","text":"<p>\u6240\u6709\u68c0\u6d4b\u5668\u652f\u6301\u4e24\u79cd\u8fd0\u884c\u6a21\u5f0f\uff1a</p> <ol> <li>\u56fe\u7247\u6a21\u5f0f\uff1a\u5904\u7406\u5355\u5f20\u56fe\u7247\uff0c\u901a\u8fc7\u521d\u59cb\u5316\u53c2\u6570\u6307\u5b9a</li> <li>\u89c6\u9891\u6d41\u6a21\u5f0f\uff1a\u5904\u7406\u5b9e\u65f6\u89c6\u9891\u6d41\uff0c\u9700\u8981\u5728\u6bcf\u6b21\u8c03\u7528<code>run()</code>\u65f6\u63d0\u4f9b\u65b0\u7684\u5e27</li> </ol>"},{"location":"quick_start/#_4","title":"\u68c0\u6d4b\u5668\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"quick_start/#1","title":"1. \u4eba\u8138\u68c0\u6d4b","text":"<pre><code>from aitoolkit_base import FaceDetector\nimport cv2\n\n# \u65b9\u6cd51\uff1a\u56fe\u7247\u6a21\u5f0f - \u4f7f\u7528\u56fe\u7247\u8def\u5f84\ndetector = FaceDetector(input_source=\"person.jpg\")  \nfaces = detector.run()  # \u4e0d\u9700\u8981\u4f20\u5165frame\nresult = detector.draw(cv2.imread(\"person.jpg\"), faces)\ncv2.imwrite(\"result.jpg\", result)\ndetector.close()\n\n# \u65b9\u6cd52\uff1a\u56fe\u7247\u6a21\u5f0f - \u4f7f\u7528\u56fe\u7247\u6570\u636e\nimage = cv2.imread(\"person.jpg\")\ndetector = FaceDetector(input_source=image)\nfaces = detector.run()\nresult = detector.draw(image, faces)\ndetector.close()\n\n# \u65b9\u6cd53\uff1a\u89c6\u9891\u6d41\u6a21\u5f0f - \u666e\u901a\u4f7f\u7528\ndetector = FaceDetector()  # \u4e0d\u6307\u5b9ainput_source\u8868\u793a\u89c6\u9891\u6d41\u6a21\u5f0f\ncamera = cv2.VideoCapture(0)\nwhile True:\n    ret, frame = camera.read()\n    if not ret:\n        break\n    faces = detector.run(frame)  # \u89c6\u9891\u6a21\u5f0f\u9700\u8981\u4f20\u5165frame\n    result = detector.draw(frame, faces)\n    cv2.imshow(\"\u4eba\u8138\u68c0\u6d4b\", result)\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n        break\ncamera.release()\ndetector.close()\n\n# \u65b9\u6cd54\uff1a\u89c6\u9891\u6d41\u6a21\u5f0f - \u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08\u63a8\u8350\uff09\nwith FaceDetector() as detector:\n    camera = cv2.VideoCapture(0)\n    while True:\n        ret, frame = camera.read()\n        if not ret:\n            break\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n        cv2.imshow(\"\u4eba\u8138\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n    camera.release()\n</code></pre>"},{"location":"quick_start/#2","title":"2. \u4eba\u8138\u5173\u952e\u70b9\u68c0\u6d4b","text":"<pre><code>from aitoolkit_base import FaceLandmarker\nimport cv2\n\n# \u56fe\u7247\u6a21\u5f0f - \u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nwith FaceLandmarker(input_source=\"person.jpg\") as landmarker:\n    landmarks = landmarker.run()\n    image = cv2.imread(\"person.jpg\")\n    result = landmarker.draw(image, landmarks)\n    cv2.imwrite(\"face_landmarks.jpg\", result)\n\n# \u89c6\u9891\u6d41\u6a21\u5f0f - \u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nwith FaceLandmarker() as landmarker:\n    camera = cv2.VideoCapture(0)\n    while True:\n        ret, frame = camera.read()\n        if not ret:\n            break\n        landmarks = landmarker.run(frame)\n        result = landmarker.draw(frame, landmarks)\n        cv2.imshow(\"\u4eba\u8138\u5173\u952e\u70b9\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n    camera.release()\n</code></pre>"},{"location":"quick_start/#3","title":"3. \u624b\u52bf\u8bc6\u522b","text":"<pre><code>from aitoolkit_base import GestureRecognizer\nimport cv2\n\n# \u56fe\u7247\u6a21\u5f0f\nwith GestureRecognizer(input_source=\"gesture.jpg\") as recognizer:\n    gestures = recognizer.run()\n    image = cv2.imread(\"gesture.jpg\")\n    result = recognizer.draw(image, gestures)\n    cv2.imwrite(\"gesture_result.jpg\", result)\n\n# \u89c6\u9891\u6d41\u6a21\u5f0f\nwith GestureRecognizer() as recognizer:\n    camera = cv2.VideoCapture(0)\n    while True:\n        ret, frame = camera.read()\n        if not ret:\n            break\n        gestures = recognizer.run(frame)\n        result = recognizer.draw(frame, gestures)\n        cv2.imshow(\"\u624b\u52bf\u8bc6\u522b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n    camera.release()\n</code></pre>"},{"location":"quick_start/#_5","title":"\u4f7f\u7528\u6444\u50cf\u5934\u5de5\u5177","text":"<p>AIToolkit Base\u63d0\u4f9b\u4e86\u589e\u5f3a\u7684\u6444\u50cf\u5934\u5de5\u5177<code>Camera</code>\uff0c\u5177\u6709\u591a\u7ebf\u7a0b\u5e27\u6355\u83b7\u3001\u81ea\u52a8\u91cd\u8fde\u7b49\u529f\u80fd\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector, cv_imshow\nimport cv2\n\n# \u65b9\u6cd51\uff1a\u4f7f\u7528Camera\u7c7b\u66ff\u4ee3cv2.VideoCapture\ncamera = Camera(0)  # 0\u8868\u793a\u7b2c\u4e00\u4e2a\u6444\u50cf\u5934\ndetector = FaceDetector()\n\ntry:\n    while True:\n        ret, frame = camera.read()  # \u4e0ecv2.VideoCapture\u63a5\u53e3\u76f8\u540c\n        if not ret:\n            continue\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n        cv2.imshow(\"\u4eba\u8138\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\nfinally:\n    camera.release()\n    detector.close()\n\n# \u65b9\u6cd52\uff1a\u4f7f\u7528\u8fed\u4ee3\u5668\u8bed\u6cd5\uff08\u66f4\u7b80\u6d01\uff09\nwith Camera(0) as camera, FaceDetector() as detector:\n    for frame in camera:  # \u8fed\u4ee3\u5668\u81ea\u52a8\u8bfb\u53d6\u6bcf\u4e00\u5e27\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n        cv2.imshow(\"\u4eba\u8138\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break  # \u6216\u4f7f\u7528 camera.stop_iteration() \u505c\u6b62\u8fed\u4ee3\n\n# \u65b9\u6cd53\uff1a\u4f7f\u7528\u589e\u5f3a\u7684\u663e\u793a\u51fd\u6570\nwith Camera(0) as camera, FaceDetector() as detector:\n    for frame in camera:\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n        # \u53ef\u9009\u663e\u793a\u65b9\u5f0f\uff1a'cv2'\u3001'inline'\uff08Jupyter\uff09\u3001'web'\n        cv_imshow(result, show_method=\"cv2\", window_name=\"\u4eba\u8138\u68c0\u6d4b\")\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"quick_start/#_6","title":"\u5f02\u6b65\u5904\u7406\uff08\u56de\u8c03\u51fd\u6570\uff09","text":"<p>\u6240\u6709\u68c0\u6d4b\u5668\u90fd\u652f\u6301\u5f02\u6b65\u5904\u7406\u6a21\u5f0f\uff0c\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u5904\u7406\u7ed3\u679c\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\n# \u5b9a\u4e49\u56de\u8c03\u51fd\u6570\ndef process_result(result, image, timestamp_ms):\n    if result:\n        processed = detector.draw(image, result)\n        cv2.imshow(\"\u5f02\u6b65\u5904\u7406\", processed)\n\n# \u4f7f\u7528\u56de\u8c03\u51fd\u6570\u7684\u5f02\u6b65\u5904\u7406\nwith Camera(0) as camera, FaceDetector(result_callback=process_result) as detector:\n    for frame in camera:\n        detector.run(frame)  # \u7ed3\u679c\u4f1a\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u5904\u7406\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"quick_start/#_7","title":"\u7ee7\u7eed\u5b66\u4e60","text":"<ul> <li>API\u53c2\u8003\u6587\u6863 - \u8be6\u7ec6\u7684API\u53c2\u8003</li> <li>Camera\u7c7b\u8be6\u89e3 - \u4e86\u89e3\u6444\u50cf\u5934\u5de5\u5177\u7684\u5168\u90e8\u529f\u80fd</li> <li>\u8d44\u6e90\u7ba1\u7406\u673a\u5236 - \u4e86\u89e3\u8d44\u6e90\u7ba1\u7406\u7684\u5de5\u4f5c\u539f\u7406</li> <li>\u68c0\u6d4b\u5668\u8fdb\u9636\u7528\u6cd5 - \u5b66\u4e60\u66f4\u9ad8\u7ea7\u7684\u4f7f\u7528\u6280\u5de7 </li> </ul>"},{"location":"resource_management/","title":"aitoolkit_base \u8d44\u6e90\u7ba1\u7406\u673a\u5236","text":"<p><code>aitoolkit_base</code> \u63d0\u4f9b\u4e86\u81ea\u52a8\u7684\u8d44\u6e90\u7ba1\u7406\u673a\u5236\uff0c\u786e\u4fdd\u6240\u6709\u8d44\u6e90\uff08\u4f8b\u5982\u6444\u50cf\u5934\u3001\u68c0\u6d4b\u5668\u7b49\uff09\u5728\u7a0b\u5e8f\u9000\u51fa\u6216Jupyter\u5185\u6838\u505c\u6b62\u65f6\u88ab\u6b63\u786e\u91ca\u653e\u3002</p>"},{"location":"resource_management/#_1","title":"\u4e3b\u8981\u7279\u6027","text":"<ul> <li>\u81ea\u52a8\u8d44\u6e90\u7ba1\u7406\uff1a\u521b\u5efa\u7684\u8d44\u6e90\u4f1a\u81ea\u52a8\u6ce8\u518c\uff0c\u5728\u7a0b\u5e8f\u9000\u51fa\u65f6\u81ea\u52a8\u91ca\u653e</li> <li>\u4e0eJupyter\u96c6\u6210\uff1a\u7279\u522b\u5904\u7406Jupyter\u73af\u5883\uff0c\u786e\u4fdd\u5728\u5185\u6838\u505c\u6b62\u65f6\u91ca\u653e\u8d44\u6e90</li> <li>\u591a\u79cd\u91ca\u653e\u65b9\u5f0f\uff1a\u652f\u6301\u624b\u52a8\u91ca\u653e\u3001with\u8bed\u53e5\u548c\u81ea\u52a8\u91ca\u653e</li> </ul>"},{"location":"resource_management/#_2","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"resource_management/#_3","title":"\u81ea\u52a8\u8d44\u6e90\u7ba1\u7406","text":"<p>\u6700\u7b80\u5355\u7684\u4f7f\u7528\u65b9\u5f0f\u662f\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u8d44\u6e90\u4f1a\u5728\u7a0b\u5e8f\u9000\u51fa\u65f6\u81ea\u52a8\u91ca\u653e\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector, cv_imshow\nimport cv2\n\n# \u521b\u5efa\u8d44\u6e90\ncamera = Camera(0)\ndetector = FaceDetector(min_detection_confidence=0.5)\n\n# \u4f7f\u7528\u8d44\u6e90\nwhile cv2.waitKey(1) != 27:  # \u6309ESC\u9000\u51fa\n    ret, frame = camera.read()\n    if ret:\n        faces = detector.run(frame)\n        cv_imshow(detector.draw(frame, faces), \"cv2\")\n\n# \u7a0b\u5e8f\u9000\u51fa\u65f6\uff0c\u8d44\u6e90\u4f1a\u81ea\u52a8\u91ca\u653e\uff0c\u5373\u4f7f\u6ca1\u6709\u660e\u786e\u8c03\u7528release/close\n</code></pre>"},{"location":"resource_management/#_4","title":"\u663e\u5f0f\u91ca\u653e\u8d44\u6e90","text":"<p>\u63a8\u8350\u7684\u505a\u6cd5\u662f\u663e\u5f0f\u91ca\u653e\u8d44\u6e90\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\n\n# \u521b\u5efa\u8d44\u6e90\ncamera = Camera(0)\ndetector = FaceDetector()\n\ntry:\n    # \u4f7f\u7528\u8d44\u6e90\n    # ...\nfinally:\n    # \u663e\u5f0f\u91ca\u653e\u8d44\u6e90\n    detector.close()\n    camera.release()\n</code></pre>"},{"location":"resource_management/#with","title":"\u4f7f\u7528with\u8bed\u53e5","text":"<p>\u6700\u5b89\u5168\u548c\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u4f7f\u7528with\u8bed\u53e5\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector, cv_imshow\nimport cv2\n\n# \u4f7f\u7528with\u8bed\u53e5\u521b\u5efa\u548c\u7ba1\u7406\u8d44\u6e90\nwith Camera(0) as camera, FaceDetector() as detector:\n    for _ in range(100):  # \u5904\u7406100\u5e27\n        ret, frame = camera.read()\n        if ret:\n            faces = detector.run(frame)\n            cv_imshow(detector.draw(frame, faces), \"cv2\")\n            cv2.waitKey(1)\n# \u9000\u51fawith\u5757\u65f6\uff0c\u8d44\u6e90\u4f1a\u81ea\u52a8\u91ca\u653e\n</code></pre>"},{"location":"resource_management/#jupyter","title":"\u5728Jupyter\u4e2d\u4f7f\u7528","text":"<p>\u5728Jupyter\u7b14\u8bb0\u672c\u4e2d\uff0c\u5f53\u5185\u6838\u505c\u6b62\u65f6\uff0c\u6240\u6709\u8d44\u6e90\u4f1a\u81ea\u52a8\u91ca\u653e\uff0c\u65e0\u9700\u7279\u6b8a\u5904\u7406\u3002\u4f46\u4f9d\u7136\u63a8\u8350\u4f7f\u7528\u4ee5\u4e0a\u65b9\u6cd5\u663e\u5f0f\u7ba1\u7406\u8d44\u6e90\u3002</p>"},{"location":"resource_management/#_5","title":"\u9ad8\u7ea7\u529f\u80fd","text":""},{"location":"resource_management/#_6","title":"\u624b\u52a8\u6ce8\u518c\u548c\u6ce8\u9500\u8d44\u6e90","text":"<p>\u5982\u679c\u9700\u8981\u624b\u52a8\u7ba1\u7406\u81ea\u5b9a\u4e49\u8d44\u6e90\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a</p> <pre><code>from aitoolkit_base import register_resource, unregister_resource\n\n# \u81ea\u5b9a\u4e49\u8d44\u6e90\u7c7b\nclass MyResource:\n    def __init__(self):\n        # \u521d\u59cb\u5316\u8d44\u6e90\n        self.something = \"valuable\"\n        # \u6ce8\u518c\u8d44\u6e90\n        register_resource(self)\n\n    def close(self):\n        # \u91ca\u653e\u8d44\u6e90\n        self.something = None\n        # \u6ce8\u9500\u8d44\u6e90\n        unregister_resource(self)\n\n# \u521b\u5efa\u8d44\u6e90\nresource = MyResource()\n\n# \u4f7f\u7528\u8d44\u6e90\n# ...\n\n# \u624b\u52a8\u91ca\u653e\uff08\u53ef\u9009\uff09\nresource.close()\n</code></pre>"},{"location":"resource_management/#_7","title":"\u67e5\u770b\u5f53\u524d\u6ce8\u518c\u7684\u8d44\u6e90","text":"<p>\u53ef\u4ee5\u968f\u65f6\u67e5\u770b\u5f53\u524d\u6ce8\u518c\u7684\u8d44\u6e90\uff1a</p> <pre><code>from aitoolkit_base import get_registered_resources\n\n# \u521b\u5efa\u4e00\u4e9b\u8d44\u6e90\n# ...\n\n# \u67e5\u770b\u5f53\u524d\u6ce8\u518c\u7684\u8d44\u6e90\nresources = get_registered_resources()\nprint(f\"\u5f53\u524d\u6709 {len(resources)} \u4e2a\u8d44\u6e90\u5df2\u6ce8\u518c\")\n</code></pre>"},{"location":"resource_management/#_8","title":"\u5b9e\u73b0\u7ec6\u8282","text":"<p>\u8d44\u6e90\u7ba1\u7406\u673a\u5236\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5de5\u4f5c\uff1a</p> <ol> <li>\u4f7f\u7528\u5168\u5c40\u5217\u8868\u8ddf\u8e2a\u6240\u6709\u6ce8\u518c\u7684\u8d44\u6e90</li> <li>\u5728Python\u9000\u51fa\u65f6\u4f7f\u7528<code>atexit</code>\u673a\u5236\u81ea\u52a8\u8c03\u7528\u6e05\u7406\u51fd\u6570</li> <li>\u5728Jupyter\u73af\u5883\u4e2d\uff0c\u6ce8\u518c<code>pre_shutdown</code>\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f</li> </ol> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8d44\u6e90\uff1a - \u68c0\u6d4b\u5668\u7c7b\u8c03\u7528<code>close()</code>\u65b9\u6cd5\u91ca\u653e - \u6444\u50cf\u5934\u7c7b\u8c03\u7528<code>release()</code>\u65b9\u6cd5\u91ca\u653e - \u5bf9\u4e8eOpenCV\u7a97\u53e3\uff0c\u8c03\u7528<code>cv2.destroyWindow()</code>\u6216<code>cv2.destroyAllWindows()</code></p>"},{"location":"resource_management/#_9","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u8d44\u6e90\u7c7b\u7684<code>release()</code>\u548c<code>close()</code>\u65b9\u6cd5\u5e94\u5f53\u662f\u5e42\u7b49\u7684\uff08\u53ef\u4ee5\u5b89\u5168\u5730\u591a\u6b21\u8c03\u7528\uff09</li> <li>\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u8d44\u6e90\u7ba1\u7406\u4fdd\u8bc1\u4e86\u57fa\u7840\u7684\u7ebf\u7a0b\u5b89\u5168\u6027</li> <li>\u867d\u7136\u6709\u81ea\u52a8\u6e05\u7406\u673a\u5236\uff0c\u4f46\u4ecd\u7136\u5efa\u8bae\u5728\u4ee3\u7801\u4e2d\u663e\u5f0f\u7ba1\u7406\u8d44\u6e90\u751f\u547d\u5468\u671f </li> </ul>"},{"location":"api/","title":"AI\u89c6\u89c9\u5de5\u5177\u5305\u4f7f\u7528\u6307\u5357","text":"<p>\u672c\u6307\u5357\u5c06\u5e2e\u52a9\u8001\u5e08\u548c\u540c\u5b66\u4eec\u4e86\u89e3AI\u89c6\u89c9\u5de5\u5177\u5305\u4e2d\u5404\u4e2a\u7ec4\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8ba9AI\u6280\u672f\u5728\u8bfe\u5802\u4e0a\u53d8\u5f97\u7b80\u5355\u6709\u8da3\uff01</p>"},{"location":"api/#_1","title":"\u89c6\u89c9\u8bc6\u522b\u5de5\u5177","text":"<p>\u8fd9\u4e9b\u662fAI\u89c6\u89c9\u5de5\u5177\u5305\u63d0\u4f9b\u7684\u5404\u79cd\u8bc6\u522b\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5b9e\u73b0\u4e30\u5bcc\u591a\u5f69\u7684\u4e92\u52a8\u6559\u5b66\u6d3b\u52a8\uff1a</p> <ul> <li>\u4eba\u8138\u68c0\u6d4b\u5668 - \u68c0\u6d4b\u4eba\u8138\u4f4d\u7f6e\uff0c\u53ef\u7528\u4e8e\u70b9\u540d\u3001\u4e92\u52a8\u6e38\u620f\u7b49</li> <li>\u4eba\u8138\u7279\u5f81\u5206\u6790 - \u5206\u6790\u4eba\u8138\u7279\u5f81\u70b9\uff0c\u53ef\u7528\u4e8e\u8868\u60c5\u8bc6\u522b\u3001\u4e13\u6ce8\u5ea6\u8ddf\u8e2a\u7b49</li> <li>\u624b\u90e8\u59ff\u6001\u8bc6\u522b - \u8bc6\u522b\u624b\u90e8\u52a8\u4f5c\uff0c\u53ef\u7528\u4e8e\u624b\u8bed\u6559\u5b66\u3001\u4e92\u52a8\u63a7\u5236\u7b49</li> <li>\u4eba\u4f53\u59ff\u6001\u8bc6\u522b - \u5206\u6790\u4eba\u4f53\u59ff\u6001\uff0c\u53ef\u7528\u4e8e\u4f53\u80b2\u52a8\u4f5c\u6307\u5bfc\u3001\u821e\u8e48\u6559\u5b66\u7b49</li> <li>\u624b\u52bf\u8bc6\u522b\u5668 - \u8bc6\u522b\u5e38\u89c1\u624b\u52bf\uff0c\u53ef\u7528\u4e8e\u8bfe\u5802\u4e92\u52a8\u3001\u65e0\u63a5\u89e6\u63a7\u5236\u7b49</li> <li>\u7269\u4f53\u8bc6\u522b\u5668 - \u8bc6\u522b\u7269\u4f53\u79cd\u7c7b\uff0c\u53ef\u7528\u4e8e\u79d1\u5b66\u63a2\u7d22\u3001\u81ea\u7136\u89c2\u5bdf\u7b49</li> </ul>"},{"location":"api/#_2","title":"\u8f85\u52a9\u5de5\u5177","text":"<p>\u8fd9\u4e9b\u662fAI\u89c6\u89c9\u5de5\u5177\u5305\u63d0\u4f9b\u7684\u5b9e\u7528\u8f85\u52a9\u5de5\u5177\uff0c\u5e2e\u52a9\u8001\u5e08\u66f4\u8f7b\u677e\u5730\u8bbe\u8ba1\u4e92\u52a8\u8bfe\u7a0b\uff1a</p> <ul> <li>\u76f8\u673a\u5de5\u5177 - \u589e\u5f3a\u7684\u6444\u50cf\u5934\u529f\u80fd\uff0c\u62cd\u6444\u66f4\u7a33\u5b9a\u3001\u66f4\u6e05\u6670</li> <li>\u56fe\u50cf\u5904\u7406 - \u56fe\u50cf\u5904\u7406\u5de5\u5177\uff0c\u8ba9\u6559\u5b66\u7d20\u6750\u5904\u7406\u66f4\u7b80\u5355</li> <li>\u8d44\u6e90\u7ba1\u7406 - \u81ea\u52a8\u7ba1\u7406\u7cfb\u7edf\u8d44\u6e90\uff0c\u4e0d\u7528\u62c5\u5fc3\u7a0b\u5e8f\u5361\u987f</li> <li>\u6a21\u578b\u7ba1\u7406 - \u667a\u80fd\u7ba1\u7406\u8bc6\u522b\u6a21\u578b\uff0c\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u66f4\u6d41\u7545</li> </ul>"},{"location":"api/#_3","title":"\u901a\u7528\u53c2\u6570","text":"<p>\u6240\u6709\u8bc6\u522b\u5de5\u5177\u90fd\u652f\u6301\u7684\u57fa\u672c\u8bbe\u7f6e\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>input_source</code> \u65e0/\u56fe\u7247\u8def\u5f84/\u89c6\u9891\u8def\u5f84/\u56fe\u50cf\u6570\u636e \u65e0 \u8f93\u5165\u6e90\uff0c\u53ef\u4ee5\u662f\u62cd\u6444\u753b\u9762\u3001\u56fe\u7247\u6216\u89c6\u9891 <code>min_detection_confidence</code> \u6570\u503c 0.5 \u8bc6\u522b\u53ef\u4fe1\u5ea6\u9608\u503c\uff0c\u503c\u8d8a\u9ad8\u8981\u6c42\u8d8a\u4e25\u683c <code>min_tracking_confidence</code> \u6570\u503c 0.5 \u8ddf\u8e2a\u53ef\u4fe1\u5ea6\u9608\u503c\uff0c\u503c\u8d8a\u9ad8\u8ddf\u8e2a\u8d8a\u7cbe\u786e <code>enable_gpu</code> \u662f/\u5426 \u5426 \u662f\u5426\u542f\u7528\u56fe\u5f62\u52a0\u901f\uff0c\u9002\u7528\u4e8e\u6027\u80fd\u8f83\u597d\u7684\u7535\u8111 <code>result_callback</code> \u56de\u8c03\u51fd\u6570 \u65e0 \u7ed3\u679c\u5904\u7406\u51fd\u6570\uff0c\u9002\u7528\u4e8e\u9ad8\u7ea7\u7528\u6237"},{"location":"api/#_4","title":"\u901a\u7528\u65b9\u6cd5","text":"<p>\u6240\u6709\u8bc6\u522b\u5de5\u5177\u90fd\u652f\u6301\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> \u65b9\u6cd5\u540d \u63cf\u8ff0 <code>run(frame=None)</code> \u6267\u884c\u8bc6\u522b\u5e76\u8fd4\u56de\u7ed3\u679c <code>draw(image, results=None)</code> \u5728\u56fe\u50cf\u4e0a\u6807\u8bb0\u8bc6\u522b\u7ed3\u679c <code>get_fps()</code> \u67e5\u770b\u5f53\u524d\u5904\u7406\u901f\u5ea6 <code>close()</code> \u5173\u95ed\u8bc6\u522b\u5668\u5e76\u91ca\u653e\u8d44\u6e90"},{"location":"api/#_5","title":"\u6559\u5b66\u5e94\u7528\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u51e0\u4e2a\u7b80\u5355\u7684\u6559\u5b66\u5e94\u7528\u793a\u4f8b\uff0c\u5e2e\u52a9\u4f60\u5feb\u901f\u5f00\u59cb\uff1a</p>"},{"location":"api/#_6","title":"\u8bfe\u5802\u70b9\u540d\u52a9\u624b","text":"<pre><code>from aitoolkit_base import FaceDetector\nimport cv2\n\n# \u521b\u5efa\u4eba\u8138\u68c0\u6d4b\u5668\ndetector = FaceDetector()\n\n# \u6253\u5f00\u6444\u50cf\u5934\u62cd\u6444\u5168\u73ed\u540c\u5b66\nimage = cv2.imread(\"\u5168\u73ed\u5408\u5f71.jpg\")\n\n# \u6267\u884c\u4eba\u8138\u68c0\u6d4b\nfaces = detector.run(image)\n\n# \u5728\u56fe\u50cf\u4e0a\u6807\u8bb0\u6bcf\u4e2a\u540c\u5b66\nresult_image = detector.draw(image, faces)\n\n# \u663e\u793a\u6807\u8bb0\u540e\u7684\u7ed3\u679c\ncv2.imshow(\"\u8bfe\u5802\u70b9\u540d\u52a9\u624b\", result_image)\ncv2.waitKey(0)\n\n# \u5b8c\u6210\u540e\u91ca\u653e\u8d44\u6e90\ndetector.close()\ncv2.destroyAllWindows()\n</code></pre>"},{"location":"api/#_7","title":"\u4e92\u52a8\u8bfe\u5802\u5c0f\u6e38\u620f","text":"<pre><code>from aitoolkit_base import FaceDetector, Camera\nimport cv2\n\n# \u4f7f\u7528\u7b80\u6d01\u7684\u65b9\u5f0f\u542f\u52a8\nwith Camera(0) as camera, FaceDetector() as detector:\n    while True:\n        # \u83b7\u53d6\u6444\u50cf\u5934\u753b\u9762\n        ret, frame = camera.read()\n        if not ret:\n            break\n\n        # \u68c0\u6d4b\u4eba\u8138\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n\n        # \u663e\u793a\u5f53\u524d\u8bc6\u522b\u5230\u7684\u540c\u5b66\u6570\u91cf\n        cv2.putText(result, f\"\u8bc6\u522b\u5230{len(faces)}\u4f4d\u540c\u5b66\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u4e92\u52a8\u8bfe\u5802\", result)\n        if cv2.waitKey(1) == 27:  # \u6309ESC\u952e\u9000\u51fa\n            break\n</code></pre>"},{"location":"api/#_8","title":"\u591a\u529f\u80fd\u6559\u5b66\u52a9\u624b","text":"<pre><code>from aitoolkit_base import FaceDetector, HandLandmarker, Camera\nimport cv2\n\n# \u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u8bc6\u522b\u5de5\u5177\nwith Camera(0) as camera, \\\n     FaceDetector() as face_detector, \\\n     HandLandmarker() as hand_detector:\n\n    while True:\n        # \u83b7\u53d6\u6444\u50cf\u5934\u753b\u9762\n        ret, frame = camera.read()\n        if not ret:\n            break\n\n        # \u540c\u65f6\u5206\u6790\u4eba\u8138\u548c\u624b\u90e8\n        faces = face_detector.run(frame)\n        frame = face_detector.draw(frame, faces)\n\n        hands = hand_detector.run(frame)\n        frame = hand_detector.draw(frame, hands)\n\n        # \u5728\u753b\u9762\u4e0a\u663e\u793a\u68c0\u6d4b\u5230\u7684\u4eba\u8138\u548c\u624b\u7684\u6570\u91cf\n        cv2.putText(frame, f\"\u53d1\u73b0{len(faces)}\u4e2a\u4eba\u8138, {len(hands)}\u53ea\u624b\", \n                   (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 0), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u591a\u529f\u80fd\u6559\u5b66\u52a9\u624b\", frame)\n        if cv2.waitKey(1) == 27:\n            break\n</code></pre>"},{"location":"api/base_detector/","title":"\u8bc6\u522b\u5de5\u5177\u57fa\u7840\u77e5\u8bc6","text":"<p>\u672c\u9875\u4ecb\u7ecdAI\u89c6\u89c9\u5de5\u5177\u5305\u4e2d\u5404\u79cd\u8bc6\u522b\u5de5\u5177\u7684\u5171\u540c\u7279\u70b9\u548c\u57fa\u7840\u77e5\u8bc6\uff0c\u5e2e\u52a9\u8001\u5e08\u548c\u540c\u5b66\u4eec\u66f4\u597d\u5730\u7406\u89e3\u5982\u4f55\u5728\u8bfe\u5802\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u6709\u8da3\u7684\u5de5\u5177\u3002</p>"},{"location":"api/base_detector/#_2","title":"\u6211\u4eec\u80fd\u7528\u4ec0\u4e48\u8bc6\u522b\u5de5\u5177\uff1f","text":"<p>AI\u89c6\u89c9\u5de5\u5177\u5305\u63d0\u4f9b\u4e86\u591a\u79cd\u8bc6\u522b\u5de5\u5177\uff0c\u6bcf\u79cd\u5de5\u5177\u90fd\u6709\u7279\u5b9a\u7684\u7528\u9014\uff1a</p> <ul> <li>\u4eba\u8138\u68c0\u6d4b\u5668\uff1a\u627e\u51fa\u56fe\u50cf\u4e2d\u4eba\u8138\u7684\u4f4d\u7f6e\uff0c\u9002\u7528\u4e8e\u70b9\u540d\u3001\u8bfe\u5802\u4e92\u52a8\u7b49</li> <li>\u4eba\u8138\u7279\u5f81\u5206\u6790\uff1a\u8bc6\u522b\u4eba\u8138\u4e0a\u7684468\u4e2a\u5173\u952e\u70b9\uff0c\u53ef\u5206\u6790\u8868\u60c5\u3001\u4e13\u6ce8\u5ea6\u7b49</li> <li>\u624b\u90e8\u59ff\u6001\u8bc6\u522b\uff1a\u6355\u6349\u624b\u90e8\u768421\u4e2a\u5173\u952e\u70b9\uff0c\u9002\u7528\u4e8e\u624b\u8bed\u6559\u5b66\u3001\u4e92\u52a8\u63a7\u5236\u7b49</li> <li>\u4eba\u4f53\u59ff\u6001\u8bc6\u522b\uff1a\u6355\u6349\u5168\u8eab33\u4e2a\u5173\u952e\u70b9\uff0c\u9002\u7528\u4e8e\u4f53\u80b2\u6307\u5bfc\u3001\u821e\u8e48\u6559\u5b66\u7b49</li> <li>\u624b\u52bf\u8bc6\u522b\u5668\uff1a\u8bc6\u522b\u5e38\u89c1\u624b\u52bf\uff0c\u9002\u7528\u4e8e\u65e0\u63a5\u89e6\u63a7\u5236\u3001\u4e92\u52a8\u6e38\u620f\u7b49</li> <li>\u7269\u4f53\u8bc6\u522b\u5668\uff1a\u8bc6\u522b\u5e38\u89c1\u7269\u4f53\uff0c\u9002\u7528\u4e8e\u79d1\u5b66\u63a2\u7d22\u3001\u81ea\u7136\u89c2\u5bdf\u7b49</li> </ul>"},{"location":"api/base_detector/#_3","title":"\u8bc6\u522b\u5de5\u5177\u7684\u5171\u540c\u7279\u70b9","text":"<p>\u867d\u7136\u6bcf\u79cd\u8bc6\u522b\u5de5\u5177\u529f\u80fd\u4e0d\u540c\uff0c\u4f46\u5b83\u4eec\u90fd\u9075\u5faa\u76f8\u4f3c\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u8ba9\u4f60\u53ef\u4ee5\u8f7b\u677e\u5207\u6362\u4e0d\u540c\u5de5\u5177\uff1a</p>"},{"location":"api/base_detector/#1","title":"1. \u521b\u5efa\u8bc6\u522b\u5de5\u5177","text":"<p>\u6240\u6709\u8bc6\u522b\u5de5\u5177\u90fd\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u521b\u5efa\uff1a</p> <pre><code>from aitoolkit_base import FaceDetector  # \u5bfc\u5165\u4f60\u9700\u8981\u7684\u8bc6\u522b\u5de5\u5177\n\n# \u521b\u5efa\u8bc6\u522b\u5de5\u5177\ndetector = FaceDetector(\n    input_source=None,               # \u53ef\u4ee5\u662fNone\u3001\u56fe\u7247\u8def\u5f84\u6216\u89c6\u9891\n    min_detection_confidence=0.5,    # \u8bc6\u522b\u53ef\u4fe1\u5ea6\n    min_tracking_confidence=0.5,     # \u8ddf\u8e2a\u53ef\u4fe1\u5ea6\n    enable_gpu=False                 # \u662f\u5426\u4f7f\u7528\u56fe\u5f62\u52a0\u901f\n)\n</code></pre>"},{"location":"api/base_detector/#2","title":"2. \u6267\u884c\u8bc6\u522b","text":"<p>\u6240\u6709\u8bc6\u522b\u5de5\u5177\u90fd\u4f7f\u7528<code>run()</code>\u65b9\u6cd5\u6267\u884c\u8bc6\u522b\uff1a</p> <pre><code># \u7ed9\u8bc6\u522b\u5de5\u5177\u63d0\u4f9b\u4e00\u5f20\u56fe\u7247\nresults = detector.run(image)\n</code></pre>"},{"location":"api/base_detector/#3","title":"3. \u663e\u793a\u7ed3\u679c","text":"<p>\u6240\u6709\u8bc6\u522b\u5de5\u5177\u90fd\u4f7f\u7528<code>draw()</code>\u65b9\u6cd5\u663e\u793a\u7ed3\u679c\uff1a</p> <pre><code># \u5728\u56fe\u7247\u4e0a\u6807\u8bb0\u8bc6\u522b\u7ed3\u679c\nmarked_image = detector.draw(image, results)\n</code></pre>"},{"location":"api/base_detector/#4","title":"4. \u91ca\u653e\u8d44\u6e90","text":"<p>\u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u8bb0\u5f97\u91ca\u653e\u8d44\u6e90\uff1a</p> <pre><code># \u91ca\u653e\u8bc6\u522b\u5de5\u5177\u5360\u7528\u7684\u8d44\u6e90\ndetector.close()\n</code></pre>"},{"location":"api/base_detector/#with","title":"\u4f7f\u7528\"with\"\u8bed\u53e5\u7b80\u5316\u64cd\u4f5c","text":"<p>\u63a8\u8350\u4f7f\u7528\"with\"\u8bed\u53e5\u521b\u5efa\u8bc6\u522b\u5de5\u5177\uff0c\u8fd9\u6837\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\uff1a</p> <pre><code>from aitoolkit_base import FaceDetector\nimport cv2\n\n# \u4f7f\u7528with\u8bed\u53e5\u521b\u5efa\u8bc6\u522b\u5de5\u5177\nwith FaceDetector() as detector:\n    # \u8bfb\u53d6\u56fe\u7247\n    image = cv2.imread(\"\u5b66\u751f\u7167\u7247.jpg\")\n\n    # \u8bc6\u522b\u4eba\u8138\n    faces = detector.run(image)\n\n    # \u6807\u8bb0\u7ed3\u679c\n    result = detector.draw(image, faces)\n\n    # \u663e\u793a\u7ed3\u679c\n    cv2.imshow(\"\u8bc6\u522b\u7ed3\u679c\", result)\n    cv2.waitKey(0)\n# \u79bb\u5f00with\u5757\u65f6\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\n</code></pre>"},{"location":"api/base_detector/#_4","title":"\u8bc6\u522b\u5de5\u5177\u7684\u5de5\u4f5c\u6a21\u5f0f","text":"<p>\u8bc6\u522b\u5de5\u5177\u6709\u4e09\u79cd\u4e3b\u8981\u5de5\u4f5c\u6a21\u5f0f\uff1a</p>"},{"location":"api/base_detector/#1_1","title":"1. \u56fe\u7247\u6a21\u5f0f","text":"<p>\u9002\u7528\u4e8e\u5bf9\u5355\u5f20\u56fe\u7247\u8fdb\u884c\u5206\u6790\uff0c\u4f8b\u5982\u73ed\u7ea7\u5408\u5f71\u4eba\u8138\u7edf\u8ba1\uff1a</p> <pre><code>with FaceDetector() as detector:\n    # \u5206\u6790\u73ed\u7ea7\u5408\u5f71\n    image = cv2.imread(\"\u73ed\u7ea7\u5408\u5f71.jpg\")\n    faces = detector.run(image)\n    result = detector.draw(image, faces)\n    cv2.imwrite(\"\u6807\u8bb0\u540e\u7684\u5408\u5f71.jpg\", result)\n</code></pre>"},{"location":"api/base_detector/#2_1","title":"2. \u89c6\u9891\u6a21\u5f0f","text":"<p>\u9002\u7528\u4e8e\u5b9e\u65f6\u4e92\u52a8\uff0c\u4f8b\u5982\u8bfe\u5802\u4e92\u52a8\u6e38\u620f\uff1a</p> <pre><code>with Camera(0) as camera, FaceDetector() as detector:\n    while True:\n        # \u83b7\u53d6\u6444\u50cf\u5934\u753b\u9762\n        ret, frame = camera.read()\n        if not ret:\n            break\n\n        # \u8bc6\u522b\u4eba\u8138\n        faces = detector.run(frame)\n\n        # \u6807\u8bb0\u7ed3\u679c\n        result = detector.draw(frame, faces)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u8bfe\u5802\u4e92\u52a8\", result)\n        if cv2.waitKey(1) == 27:  # \u6309ESC\u952e\u9000\u51fa\n            break\n</code></pre>"},{"location":"api/base_detector/#3_1","title":"3. \u56fe\u7247\u6587\u4ef6\u5939\u6a21\u5f0f","text":"<p>\u9002\u7528\u4e8e\u5904\u7406\u591a\u5f20\u56fe\u7247\uff0c\u4f8b\u5982\u5b66\u751f\u4f5c\u54c1\u5206\u6790\uff1a</p> <pre><code>import os\nfrom aitoolkit_base import ObjectDetector\nimport cv2\n\n# \u521b\u5efa\u8bc6\u522b\u5de5\u5177\nwith ObjectDetector() as detector:\n    # \u5904\u7406\u6587\u4ef6\u5939\u4e2d\u7684\u6240\u6709\u56fe\u7247\n    folder = \"\u5b66\u751f\u4f5c\u54c1\"\n    for filename in os.listdir(folder):\n        if filename.endswith((\".jpg\", \".png\")):\n            # \u8bfb\u53d6\u56fe\u7247\n            image_path = os.path.join(folder, filename)\n            image = cv2.imread(image_path)\n\n            # \u8bc6\u522b\u7269\u4f53\n            objects = detector.run(image)\n\n            # \u6807\u8bb0\u7ed3\u679c\n            result = detector.draw(image, objects)\n\n            # \u4fdd\u5b58\u7ed3\u679c\n            output_path = os.path.join(\"\u5206\u6790\u7ed3\u679c\", filename)\n            cv2.imwrite(output_path, result)\n</code></pre>"},{"location":"api/base_detector/#_5","title":"\u591a\u8bc6\u522b\u5de5\u5177\u7ec4\u5408\u4f7f\u7528","text":"<p>\u53ef\u4ee5\u7ec4\u5408\u591a\u79cd\u8bc6\u522b\u5de5\u5177\u521b\u5efa\u66f4\u4e30\u5bcc\u7684\u6559\u5b66\u6d3b\u52a8\uff1a</p> <pre><code>with Camera(0) as camera, \\\n     FaceDetector() as face_detector, \\\n     HandLandmarker() as hand_detector:\n\n    while True:\n        # \u83b7\u53d6\u6444\u50cf\u5934\u753b\u9762\n        ret, frame = camera.read()\n        if not ret:\n            break\n\n        # \u540c\u65f6\u8bc6\u522b\u4eba\u8138\u548c\u624b\u90e8\n        faces = face_detector.run(frame)\n        frame = face_detector.draw(frame, faces)\n\n        hands = hand_detector.run(frame)\n        frame = hand_detector.draw(frame, hands)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u591a\u529f\u80fd\u8bc6\u522b\", frame)\n        if cv2.waitKey(1) == 27:  # \u6309ESC\u9000\u51fa\n            break\n</code></pre>"},{"location":"api/base_detector/#_6","title":"\u6559\u5b66\u5c0f\u8d34\u58eb","text":"<ol> <li>\u51c6\u5907\u5de5\u4f5c\uff1a\u786e\u4fdd\u6559\u5ba4\u5149\u7ebf\u5145\u8db3\uff0c\u6444\u50cf\u5934\u4f4d\u7f6e\u5408\u9002</li> <li>\u53c2\u6570\u8c03\u6574\uff1a\u6839\u636e\u5b9e\u9645\u9700\u8981\u8c03\u6574\u8bc6\u522b\u53ef\u4fe1\u5ea6\uff0c\u503c\u8d8a\u9ad8\u8d8a\u4e25\u683c</li> <li>\u8d44\u6e90\u7ba1\u7406\uff1a\u4f7f\u7528<code>with</code>\u8bed\u53e5\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90\uff0c\u907f\u514d\u7a0b\u5e8f\u5361\u987f</li> <li>\u5148\u6d4b\u8bd5\uff1a\u6b63\u5f0f\u8bfe\u5802\u524d\u5148\u6d4b\u8bd5\u8bc6\u522b\u6548\u679c\uff0c\u786e\u4fdd\u6d41\u7545</li> <li>\u7b80\u5355\u5f00\u59cb\uff1a\u5148\u4ece\u5355\u4e00\u8bc6\u522b\u5de5\u5177\u5f00\u59cb\uff0c\u719f\u6089\u540e\u518d\u5c1d\u8bd5\u7ec4\u5408\u4f7f\u7528</li> <li>\u521b\u610f\u601d\u8003\uff1a\u9f13\u52b1\u5b66\u751f\u601d\u8003AI\u8bc6\u522b\u5de5\u5177\u5728\u5404\u5b66\u79d1\u4e2d\u7684\u521b\u65b0\u5e94\u7528</li> <li>\u5b89\u5168\u7b2c\u4e00\uff1a\u6ce8\u610f\u4fdd\u62a4\u5b66\u751f\u9690\u79c1\uff0c\u4e0d\u8981\u5b58\u50a8\u6216\u5206\u4eab\u4e2a\u4eba\u8bc6\u522b\u6570\u636e </li> </ol>"},{"location":"api/camera/","title":"Camera","text":"<p><code>Camera</code> \u7c7b\u662fAIToolkit Base\u63d0\u4f9b\u7684\u4e00\u4e2a\u589e\u5f3a\u578b\u6444\u50cf\u5934\u5de5\u5177\uff0c\u76f8\u6bd4OpenCV\u7684VideoCapture\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u52a0\u5065\u58ee\u548c\u5f3a\u5927\u7684\u529f\u80fd\u3002</p>"},{"location":"api/camera/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import Camera, cv_imshow, inline_show, web_show\n</code></pre>"},{"location":"api/camera/#_2","title":"\u521d\u59cb\u5316\u53c2\u6570","text":"<p>\u521b\u5efa <code>Camera</code> \u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>Camera(\n    camera_id=0,                  # \u6444\u50cf\u5934ID\uff0c\u9ed8\u8ba4\u4e3a0\uff08\u7b2c\u4e00\u4e2a\u6444\u50cf\u5934\uff09\n    width=None,                   # \u671f\u671b\u7684\u753b\u9762\u5bbd\u5ea6\n    height=None,                  # \u671f\u671b\u7684\u753b\u9762\u9ad8\u5ea6\n    fps=None,                     # \u671f\u671b\u7684\u5e27\u7387\n    auto_reconnect=True,          # \u662f\u5426\u81ea\u52a8\u91cd\u8fde\n    reconnect_attempts=3,         # \u91cd\u8fde\u5c1d\u8bd5\u6b21\u6570\n    frame_buffer_size=3,          # \u5e27\u7f13\u51b2\u533a\u5927\u5c0f\n    high_performance=True         # \u662f\u5426\u542f\u7528\u9ad8\u6027\u80fd\u6a21\u5f0f\uff08\u51cf\u5c11\u590d\u5236\u548c\u65e5\u5fd7\uff09\n)\n</code></pre> \u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u63cf\u8ff0 camera_id int 0 \u6444\u50cf\u5934ID\uff0c0\u8868\u793a\u7b2c\u4e00\u4e2a\u6444\u50cf\u5934 width int None \u671f\u671b\u7684\u753b\u9762\u5bbd\u5ea6\uff0cNone\u8868\u793a\u4f7f\u7528\u6444\u50cf\u5934\u9ed8\u8ba4\u503c height int None \u671f\u671b\u7684\u753b\u9762\u9ad8\u5ea6\uff0cNone\u8868\u793a\u4f7f\u7528\u6444\u50cf\u5934\u9ed8\u8ba4\u503c fps int None \u671f\u671b\u7684\u5e27\u7387\uff0cNone\u8868\u793a\u4f7f\u7528\u6444\u50cf\u5934\u9ed8\u8ba4\u503c auto_reconnect bool True \u662f\u5426\u5728\u8fde\u63a5\u65ad\u5f00\u65f6\u81ea\u52a8\u91cd\u8fde reconnect_attempts int 3 \u81ea\u52a8\u91cd\u8fde\u7684\u5c1d\u8bd5\u6b21\u6570 frame_buffer_size int 3 \u5e27\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u7528\u4e8e\u591a\u7ebf\u7a0b\u65f6\u5b58\u50a8\u6700\u8fd1\u7684\u5e27 high_performance bool True \u662f\u5426\u542f\u7528\u9ad8\u6027\u80fd\u6a21\u5f0f\uff0c\u51cf\u5c11\u5185\u90e8\u590d\u5236\u548c\u65e5\u5fd7\u8f93\u51fa"},{"location":"api/camera/#_3","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"api/camera/#start","title":"start","text":"<p>\u542f\u52a8\u540e\u53f0\u7ebf\u7a0b\u8fde\u7eed\u6355\u83b7\u89c6\u9891\u5e27\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u663e\u5f0f\u8c03\u7528\uff0c\u5b9e\u4f8b\u5316\u540e\u4f1a\u81ea\u52a8\u8c03\u7528\u3002</p> <pre><code>camera.start()\n</code></pre>"},{"location":"api/camera/#read","title":"read","text":"<p>\u8bfb\u53d6\u5f53\u524d\u5e27\uff0c\u4e0eOpenCV\u7684VideoCapture.read()\u63a5\u53e3\u517c\u5bb9\u3002</p> <pre><code>ret, frame = camera.read()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>ret</code> (bool): \u662f\u5426\u6210\u529f\u8bfb\u53d6\u5230\u5e27 - <code>frame</code> (np.ndarray): \u8bfb\u53d6\u5230\u7684\u56fe\u50cf\u5e27\uff0c\u5982\u679c\u8bfb\u53d6\u5931\u8d25\u5219\u4e3aNone</p>"},{"location":"api/camera/#get_fps","title":"get_fps","text":"<p>\u83b7\u53d6\u5b9e\u9645\u5e27\u7387\u3002</p> <pre><code>fps = camera.get_fps()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>float</code>: \u5f53\u524d\u7684FPS</p>"},{"location":"api/camera/#stop","title":"stop","text":"<p>\u505c\u6b62\u540e\u53f0\u6355\u83b7\u7ebf\u7a0b\u3002\u4e00\u822c\u4e0d\u9700\u8981\u663e\u5f0f\u8c03\u7528\uff0crelease\u4f1a\u81ea\u52a8\u8c03\u7528\u3002</p> <pre><code>camera.stop()\n</code></pre>"},{"location":"api/camera/#release","title":"release","text":"<p>\u91ca\u653e\u6444\u50cf\u5934\u8d44\u6e90\u3002\u4f7f\u7528\u5b8c\u6444\u50cf\u5934\u540e\u5fc5\u987b\u8c03\u7528\u6b64\u65b9\u6cd5\u91ca\u653e\u8d44\u6e90\u3002</p> <pre><code>camera.release()\n</code></pre>"},{"location":"api/camera/#stop_iteration","title":"stop_iteration","text":"<p>\u624b\u52a8\u505c\u6b62\u8fed\u4ee3\u5faa\u73af\u3002\u5728\u4f7f\u7528\u8fed\u4ee3\u5668\u8bed\u6cd5\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u65b9\u6cd5\u505c\u6b62\u8fed\u4ee3\u3002</p> <pre><code>camera.stop_iteration()\n</code></pre>"},{"location":"api/camera/#__iter__-__next__","title":"__iter__ \u548c __next__","text":"<p>\u652f\u6301\u8fed\u4ee3\u5668\u8bed\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7<code>for frame in camera:</code>\u76f4\u63a5\u904d\u5386\u89c6\u9891\u5e27\u3002</p>"},{"location":"api/camera/#_4","title":"\u8f85\u52a9\u663e\u793a\u51fd\u6570","text":""},{"location":"api/camera/#cv_imshow","title":"cv_imshow","text":"<p>\u7edf\u4e00\u7684\u56fe\u50cf\u663e\u793a\u51fd\u6570\uff0c\u652f\u6301\u591a\u79cd\u663e\u793a\u65b9\u5f0f\u3002</p> <pre><code>cv_imshow(image, show_method=\"cv2\", window_name=\"Image\", url=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u663e\u793a\u7684\u56fe\u50cf - <code>show_method</code> (str): \u663e\u793a\u65b9\u5f0f\uff0c\u53ef\u9009\u503c\u4e3a\"cv2\"\u3001\"inline\"\u3001\"web\" - <code>window_name</code> (str): \u7a97\u53e3\u540d\u79f0\uff0c\u4ec5\u5728show_method\u4e3a\"cv2\"\u65f6\u6709\u6548 - <code>url</code> (str): Web\u663e\u793a\u7684URL\uff0c\u4ec5\u5728show_method\u4e3a\"web\"\u65f6\u6709\u6548</p>"},{"location":"api/camera/#inline_show","title":"inline_show","text":"<p>\u5728Jupyter Notebook\u4e2d\u5185\u8054\u663e\u793a\u56fe\u50cf\u3002</p> <pre><code>inline_show(image)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u663e\u793a\u7684\u56fe\u50cf</p>"},{"location":"api/camera/#web_show","title":"web_show","text":"<p>\u901a\u8fc7Web\u670d\u52a1\u5668\u663e\u793a\u56fe\u50cf\u3002</p> <pre><code>url = web_show(image, url=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u663e\u793a\u7684\u56fe\u50cf - <code>url</code> (str): Web\u670d\u52a1\u5668URL\uff0c\u9ed8\u8ba4\u4e3aDEFAULT_API_URL</p> <p>\u8fd4\u56de\uff1a - <code>str</code>: \u56fe\u50cfURL</p>"},{"location":"api/camera/#_5","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/camera/#_6","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>from aitoolkit_base import Camera\nimport cv2\n\n# \u521d\u59cb\u5316\u76f8\u673a\ncamera = Camera(0, width=1280, height=720)\n\ntry:\n    # \u8bfb\u53d650\u5e27\n    for i in range(50):\n        ret, frame = camera.read()\n        if ret:\n            cv2.imshow(\"\u753b\u9762\", frame)\n            cv2.waitKey(1)\n        else:\n            print(\"\u8bfb\u53d6\u5931\u8d25\")\nfinally:\n    # \u91ca\u653e\u8d44\u6e90\n    camera.release()\n    cv2.destroyAllWindows()\n</code></pre>"},{"location":"api/camera/#_7","title":"\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668","text":"<pre><code>from aitoolkit_base import Camera\nimport cv2\n\n# \u4f7f\u7528with\u8bed\u53e5\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90\nwith Camera(0, width=1280, height=720) as camera:\n    for i in range(50):\n        ret, frame = camera.read()\n        if ret:\n            cv2.imshow(\"\u753b\u9762\", frame)\n            cv2.waitKey(1)\n</code></pre>"},{"location":"api/camera/#_8","title":"\u4f7f\u7528\u8fed\u4ee3\u5668","text":"<pre><code>from aitoolkit_base import Camera\nimport cv2\n\n# \u4f7f\u7528\u8fed\u4ee3\u5668\u8bed\u6cd5\nwith Camera(0) as camera:\n    # \u81ea\u52a8\u8fed\u4ee3\u5e27\n    for frame in camera:\n        cv2.imshow(\"\u753b\u9762\", frame)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/camera/#_9","title":"\u663e\u793a\u65b9\u5f0f","text":"<pre><code>from aitoolkit_base import Camera, cv_imshow, inline_show, web_show\nimport cv2\n\nwith Camera(0) as camera:\n    ret, frame = camera.read()\n    if ret:\n        # \u65b9\u6cd51\uff1aOpenCV\u7a97\u53e3\u663e\u793a\n        cv_imshow(frame, show_method=\"cv2\", window_name=\"OpenCV\")\n\n        # \u65b9\u6cd52\uff1aJupyter\u5185\u8054\u663e\u793a\n        inline_show(frame)\n\n        # \u65b9\u6cd53\uff1aWeb\u663e\u793a\n        url = web_show(frame)\n        print(f\"\u56fe\u50cfURL: {url}\")\n</code></pre>"},{"location":"api/camera/#_10","title":"\u4e0e\u68c0\u6d4b\u5668\u7ed3\u5408\u4f7f\u7528","text":"<pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\nwith Camera(0) as camera, FaceDetector() as detector:\n    for frame in camera:\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n\n        # \u663e\u793aFPS\n        fps = camera.get_fps()\n        cv2.putText(result, f\"FPS: {fps:.1f}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\n\n        cv2.imshow(\"\u4eba\u8138\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/camera/#_11","title":"\u5f02\u5e38\u5904\u7406","text":"<pre><code>from aitoolkit_base import Camera\nimport cv2\nimport time\n\ntry:\n    # \u5c1d\u8bd5\u6253\u5f00\u53ef\u80fd\u4e0d\u5b58\u5728\u7684\u6444\u50cf\u5934\uff0c\u5e76\u8bbe\u7f6e\u81ea\u52a8\u91cd\u8fde\n    camera = Camera(1, auto_reconnect=True, reconnect_attempts=5)\n\n    for i in range(100):\n        try:\n            ret, frame = camera.read()\n            if ret:\n                cv2.imshow(\"\u753b\u9762\", frame)\n                cv2.waitKey(1)\n            else:\n                print(\"\u7b49\u5f85\u6444\u50cf\u5934\u8fde\u63a5...\")\n                time.sleep(0.5)\n        except Exception as e:\n            print(f\"\u8bfb\u53d6\u5f02\u5e38: {str(e)}\")\n            time.sleep(1)\n\nexcept Exception as e:\n    print(f\"\u6444\u50cf\u5934\u9519\u8bef: {str(e)}\")\nfinally:\n    if 'camera' in locals():\n        camera.release()\n    cv2.destroyAllWindows()\n</code></pre>"},{"location":"api/camera/#_12","title":"\u6027\u80fd\u4f18\u5316","text":""},{"location":"api/camera/#_13","title":"\u9ad8\u6027\u80fd\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import Camera\nimport cv2\nimport time\n\n# \u542f\u7528\u9ad8\u6027\u80fd\u6a21\u5f0f\ncamera = Camera(0, high_performance=True)\n\nwith camera:\n    start_time = time.time()\n    frame_count = 0\n\n    for _ in range(1000):\n        ret, frame = camera.read()\n        if ret:\n            frame_count += 1\n\n    elapsed = time.time() - start_time\n    print(f\"\u9ad8\u6027\u80fd\u6a21\u5f0f: {frame_count / elapsed:.1f} FPS\")\n</code></pre>"},{"location":"api/camera/#_14","title":"\u7f13\u51b2\u533a\u8bbe\u7f6e","text":"<pre><code>from aitoolkit_base import Camera\nimport cv2\nimport time\nimport threading\n\n# \u521b\u5efa\u4e00\u4e2a\u6d88\u8d39\u8005\u7ebf\u7a0b\uff0c\u6a21\u62df\u8017\u65f6\u5904\u7406\ndef process_frames(camera):\n    while True:\n        ret, frame = camera.read()\n        if ret:\n            # \u6a21\u62df\u8017\u65f6\u5904\u7406\n            time.sleep(0.1)\n        else:\n            break\n\n# \u589e\u52a0\u5e27\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u63d0\u9ad8\u6027\u80fd\ncamera = Camera(0, frame_buffer_size=10)\n\nwith camera:\n    # \u542f\u52a8\u5904\u7406\u7ebf\u7a0b\n    processor = threading.Thread(target=process_frames, args=(camera,))\n    processor.daemon = True\n    processor.start()\n\n    # \u4e3b\u7ebf\u7a0b\u663e\u793aFPS\n    for _ in range(100):\n        fps = camera.get_fps()\n        print(f\"\u5b9e\u65f6FPS: {fps:.1f}\")\n        time.sleep(0.5)\n</code></pre>"},{"location":"api/camera/#_15","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>Camera\u7c7b\u5728\u521d\u59cb\u5316\u65f6\u4f1a\u81ea\u52a8\u542f\u52a8\u540e\u53f0\u6355\u83b7\u7ebf\u7a0b</li> <li>\u4f7f\u7528\u5b8cCamera\u540e\u5fc5\u987b\u8c03\u7528release\u65b9\u6cd5\u91ca\u653e\u8d44\u6e90\uff0c\u63a8\u8350\u4f7f\u7528with\u8bed\u53e5\u81ea\u52a8\u7ba1\u7406</li> <li>\u8bfb\u53d6\u5931\u8d25\u65f6read\u65b9\u6cd5\u4f1a\u8fd4\u56de(False, None)\uff0c\u9700\u8981\u8fdb\u884c\u9002\u5f53\u7684\u9519\u8bef\u5904\u7406</li> <li>\u9ad8\u6027\u80fd\u6a21\u5f0f\u4f1a\u51cf\u5c11\u5185\u90e8\u590d\u5236\u548c\u65e5\u5fd7\u8f93\u51fa\uff0c\u9002\u5408\u5bf9\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f</li> <li>\u5982\u679c\u6444\u50cf\u5934\u88ab\u5176\u4ed6\u7a0b\u5e8f\u5360\u7528\uff0c\u521d\u59cb\u5316\u53ef\u80fd\u4f1a\u5931\u8d25</li> <li>\u4f7f\u7528\u8fed\u4ee3\u5668\u8bed\u6cd5\u65f6\uff0c\u9700\u8981\u901a\u8fc7cv2.waitKey\u5904\u7406\u6216camera.stop_iteration\u65b9\u6cd5\u505c\u6b62\u8fed\u4ee3</li> <li>\u8f85\u52a9\u663e\u793a\u51fd\u6570\u4e2d\u7684inline_show\u548cweb_show\u4f9d\u8d56\u4e8e\u7279\u5b9a\u73af\u5883\uff0c\u53ef\u80fd\u4e0d\u662f\u6240\u6709\u573a\u666f\u90fd\u53ef\u7528 </li> </ol>"},{"location":"api/face_detector/","title":"\u4eba\u8138\u68c0\u6d4b\u5668","text":"<p>\u4eba\u8138\u68c0\u6d4b\u5668\u80fd\u591f\u5728\u56fe\u50cf\u6216\u89c6\u9891\u4e2d\u627e\u51fa\u4eba\u8138\u7684\u4f4d\u7f6e\uff0c\u662f\u8bb8\u591a\u6709\u8da3\u6559\u5b66\u6d3b\u52a8\u7684\u57fa\u7840\u5de5\u5177\u3002</p>"},{"location":"api/face_detector/#_2","title":"\u5bfc\u5165\u65b9\u6cd5","text":"<pre><code>from aitoolkit_base import FaceDetector\n</code></pre>"},{"location":"api/face_detector/#_3","title":"\u521b\u5efa\u4eba\u8138\u68c0\u6d4b\u5668","text":"<p>\u521b\u5efa\u4eba\u8138\u68c0\u6d4b\u5668\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>detector = FaceDetector(\n    input_source=None,               # \u8f93\u5165\u6e90\uff0c\u53ef\u4ee5\u662f\u56fe\u7247\u6216\u89c6\u9891\n    min_detection_confidence=0.5,    # \u8bc6\u522b\u53ef\u4fe1\u5ea6\uff0c0.0\u52301.0\u4e4b\u95f4\n    min_tracking_confidence=0.5,     # \u8ddf\u8e2a\u53ef\u4fe1\u5ea6\uff0c0.0\u52301.0\u4e4b\u95f4\n    enable_gpu=False,                # \u662f\u5426\u542f\u7528\u56fe\u5f62\u52a0\u901f\n    result_callback=None             # \u7ed3\u679c\u5904\u7406\u51fd\u6570\n)\n</code></pre>"},{"location":"api/face_detector/#_4","title":"\u4e3b\u8981\u529f\u80fd","text":""},{"location":"api/face_detector/#_5","title":"\u68c0\u6d4b\u4eba\u8138","text":"<pre><code>faces = detector.run(frame=None)\n</code></pre> <p>\u8f93\u5165\uff1a - <code>frame</code>\uff1a\u9700\u8981\u5206\u6790\u7684\u56fe\u50cf\uff0c\u5982\u679c\u521b\u5efa\u68c0\u6d4b\u5668\u65f6\u5df2\u63d0\u4f9b\u8f93\u5165\u6e90\uff0c\u5219\u53ef\u4e0d\u586b</p> <p>\u8f93\u51fa\uff1a - \u5305\u542b\u4eba\u8138\u4fe1\u606f\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u4eba\u8138\u5305\u542b\u4f4d\u7f6e\u548c\u7f6e\u4fe1\u5ea6\u4fe1\u606f</p>"},{"location":"api/face_detector/#_6","title":"\u5728\u56fe\u50cf\u4e0a\u6807\u8bb0\u4eba\u8138","text":"<pre><code>result_image = detector.draw(image, faces=None)\n</code></pre> <p>\u8f93\u5165\uff1a - <code>image</code>\uff1a\u8981\u5728\u5176\u4e0a\u6807\u8bb0\u4eba\u8138\u7684\u56fe\u50cf - <code>faces</code>\uff1a\u7531<code>run()</code>\u8fd4\u56de\u7684\u4eba\u8138\u4fe1\u606f\uff0c\u4e0d\u586b\u5219\u4f7f\u7528\u6700\u8fd1\u4e00\u6b21\u7684\u68c0\u6d4b\u7ed3\u679c</p> <p>\u8f93\u51fa\uff1a - \u6807\u8bb0\u4e86\u4eba\u8138\u7684\u56fe\u50cf</p>"},{"location":"api/face_detector/#_7","title":"\u67e5\u770b\u5904\u7406\u901f\u5ea6","text":"<pre><code>fps = detector.get_fps()\n</code></pre> <p>\u8f93\u51fa\uff1a - \u5f53\u524d\u6bcf\u79d2\u5904\u7406\u7684\u5e27\u6570</p>"},{"location":"api/face_detector/#_8","title":"\u91ca\u653e\u8d44\u6e90","text":"<pre><code>detector.close()\n</code></pre> <p>\u91ca\u653e\u68c0\u6d4b\u5668\u5360\u7528\u7684\u8d44\u6e90\uff0c\u4f7f\u7528\u5b8c\u6bd5\u540e\u8bb0\u5f97\u8c03\u7528\u6b64\u65b9\u6cd5\u3002</p>"},{"location":"api/face_detector/#_9","title":"\u6559\u5b66\u5e94\u7528\u793a\u4f8b","text":""},{"location":"api/face_detector/#_10","title":"\u8bfe\u5802\u70b9\u540d\u7cfb\u7edf","text":"<pre><code>from aitoolkit_base import FaceDetector\nimport cv2\n\n# \u521b\u5efa\u4eba\u8138\u68c0\u6d4b\u5668\ndetector = FaceDetector(min_detection_confidence=0.7)  # \u8bbe\u7f6e\u8f83\u9ad8\u7684\u8bc6\u522b\u53ef\u4fe1\u5ea6\n\n# \u8bfb\u53d6\u73ed\u7ea7\u5408\u5f71\nclass_photo = cv2.imread(\"\u73ed\u7ea7\u5408\u5f71.jpg\")\n\n# \u68c0\u6d4b\u7167\u7247\u4e2d\u7684\u6240\u6709\u4eba\u8138\nfaces = detector.run(class_photo)\n\n# \u5728\u7167\u7247\u4e0a\u6807\u8bb0\u6bcf\u4e2a\u4eba\u8138\nresult = detector.draw(class_photo, faces)\n\n# \u663e\u793a\u7ed3\u679c\u548c\u4eba\u6570\u7edf\u8ba1\ncv2.putText(result, f\"\u5171\u53d1\u73b0{len(faces)}\u4f4d\u540c\u5b66\", (10, 30), \n           cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\ncv2.imshow(\"\u73ed\u7ea7\u70b9\u540d\u7cfb\u7edf\", result)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n\n# \u5173\u95ed\u68c0\u6d4b\u5668\ndetector.close()\n</code></pre>"},{"location":"api/face_detector/#_11","title":"\u4e13\u6ce8\u5ea6\u76d1\u6d4b","text":"<pre><code>from aitoolkit_base import FaceDetector, Camera\nimport cv2\nimport time\n\n# \u521b\u5efa\u76f8\u673a\u548c\u4eba\u8138\u68c0\u6d4b\u5668\nwith Camera(0) as camera, FaceDetector() as detector:\n    # \u4e0a\u6b21\u770b\u5230\u5b66\u751f\u8138\u7684\u65f6\u95f4\n    last_face_time = time.time()\n\n    while True:\n        # \u8bfb\u53d6\u6444\u50cf\u5934\u753b\u9762\n        ret, frame = camera.read()\n        if not ret:\n            break\n\n        # \u68c0\u6d4b\u4eba\u8138\n        faces = detector.run(frame)\n\n        # \u5206\u6790\u5b66\u751f\u662f\u5426\u5728\u770b\u5c4f\u5e55\n        current_time = time.time()\n\n        if faces:  # \u68c0\u6d4b\u5230\u4eba\u8138\n            last_face_time = current_time\n            status = \"\u4e13\u6ce8\u5b66\u4e60\u4e2d\"\n            color = (0, 255, 0)  # \u7eff\u8272\n        else:  # \u672a\u68c0\u6d4b\u5230\u4eba\u8138\n            time_away = current_time - last_face_time\n            if time_away &lt; 3:\n                status = \"\u6682\u65f6\u79bb\u5f00\"\n                color = (0, 255, 255)  # \u9ec4\u8272\n            else:\n                status = \"\u6ce8\u610f\u529b\u5206\u6563\"\n                color = (0, 0, 255)  # \u7ea2\u8272\n\n        # \u5728\u753b\u9762\u4e0a\u663e\u793a\u72b6\u6001\n        result = detector.draw(frame, faces)\n        cv2.putText(result, status, (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, color, 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u4e13\u6ce8\u5ea6\u76d1\u6d4b\", result)\n        if cv2.waitKey(1) == 27:  # \u6309ESC\u952e\u9000\u51fa\n            break\n</code></pre>"},{"location":"api/face_detector/#_12","title":"\u8da3\u5473\u4e92\u52a8\u6e38\u620f","text":"<pre><code>from aitoolkit_base import FaceDetector, Camera\nimport cv2\nimport random\nimport time\n\n# \u521b\u5efa\u8da3\u5473\u4e92\u52a8\u6e38\u620f\nwith Camera(0) as camera, FaceDetector(min_detection_confidence=0.6) as detector:\n    # \u6e38\u620f\u72b6\u6001\n    score = 0\n    target_time = time.time() + random.uniform(3, 8)\n    waiting_for_face = True\n    game_over = False\n\n    while not game_over:\n        # \u8bfb\u53d6\u6444\u50cf\u5934\u753b\u9762\n        ret, frame = camera.read()\n        if not ret:\n            break\n\n        # \u68c0\u6d4b\u4eba\u8138\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n\n        current_time = time.time()\n\n        # \u6e38\u620f\u903b\u8f91\n        if waiting_for_face:\n            if current_time &gt; target_time:\n                waiting_for_face = False\n                cv2.putText(result, \"\u73b0\u5728\uff01\u5feb\u505a\u9b3c\u8138\uff01\", (50, 50), \n                           cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n                target_time = current_time + 2  # \u7ed9\u5b66\u751f2\u79d2\u65f6\u95f4\u505a\u9b3c\u8138\n            else:\n                cv2.putText(result, \"\u4fdd\u6301\u5fae\u7b11\uff0c\u7b49\u5f85\u6307\u4ee4...\", (50, 50), \n                           cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\n        else:\n            if current_time &lt; target_time:\n                if not faces:  # \u6ca1\u68c0\u6d4b\u5230\u8138\uff0c\u53ef\u80fd\u662f\u505a\u9b3c\u8138\u4e86\n                    score += 1\n                    waiting_for_face = True\n                    target_time = current_time + random.uniform(3, 8)\n            else:\n                # \u672c\u8f6e\u7ed3\u675f\n                waiting_for_face = True\n                target_time = current_time + random.uniform(3, 8)\n\n        # \u663e\u793a\u5f97\u5206\n        cv2.putText(result, f\"\u5f97\u5206: {score}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 0, 0), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u8da3\u5473\u4e92\u52a8\u6e38\u620f\", result)\n        key = cv2.waitKey(1)\n        if key == 27:  # ESC\u9000\u51fa\n            game_over = True\n        elif key == ord('r'):  # R\u952e\u91cd\u7f6e\n            score = 0\n</code></pre>"},{"location":"api/face_detector/#_13","title":"\u68c0\u6d4b\u7ed3\u679c\u6570\u636e","text":"<p><code>run()</code>\u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>[\n    {\n        \"bbox\": {\n            \"xmin\": 125,    # \u4eba\u8138\u5de6\u8fb9\u754c\u7684X\u5750\u6807\n            \"ymin\": 86,     # \u4eba\u8138\u4e0a\u8fb9\u754c\u7684Y\u5750\u6807\n            \"width\": 175,   # \u4eba\u8138\u5bbd\u5ea6\n            \"height\": 200   # \u4eba\u8138\u9ad8\u5ea6\n        },\n        \"confidence\": 0.92  # \u68c0\u6d4b\u7684\u53ef\u4fe1\u5ea6\uff0c\u503c\u8d8a\u9ad8\u8d8a\u51c6\u786e\n    },\n    # \u53ef\u80fd\u6709\u591a\u4e2a\u4eba\u8138...\n]\n</code></pre>"},{"location":"api/face_detector/#_14","title":"\u4f7f\u7528\u6280\u5de7","text":"<ol> <li>\u68c0\u6d4b\u53ef\u4fe1\u5ea6(<code>min_detection_confidence</code>)\u8bbe\u7f6e\u8d8a\u9ad8\uff0c\u8bef\u68c0\u7387\u8d8a\u4f4e\uff0c\u4f46\u53ef\u80fd\u4f1a\u6f0f\u68c0\u4e00\u4e9b\u96be\u4ee5\u8fa8\u8ba4\u7684\u4eba\u8138</li> <li>\u5bf9\u4e8e\u73ed\u7ea7\u6d3b\u52a8\uff0c\u5efa\u8bae\u8c03\u4f4e\u68c0\u6d4b\u53ef\u4fe1\u5ea6\uff0c\u786e\u4fdd\u80fd\u6355\u6349\u5230\u6240\u6709\u540c\u5b66</li> <li>\u5149\u7ebf\u5145\u8db3\u7684\u73af\u5883\u4e0b\u68c0\u6d4b\u6548\u679c\u66f4\u597d</li> <li>\u63a8\u8350\u4f7f\u7528<code>with</code>\u8bed\u53e5\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90\uff08\u89c1\u6559\u5b66\u5e94\u7528\u793a\u4f8b\uff09</li> <li>\u53ef\u4ee5\u6839\u636e\u8bfe\u7a0b\u9700\u8981\uff0c\u8c03\u6574\u4e0d\u540c\u7684\u53c2\u6570\u6765\u83b7\u5f97\u6700\u4f73\u6548\u679c</li> <li>\u68c0\u6d4b\u7ed3\u679c\u4e2d\u7684\u5750\u6807\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u6807\u8bb0\u6216\u7279\u6548 </li> </ol>"},{"location":"api/face_landmarker/","title":"FaceLandmarker","text":"<p><code>FaceLandmarker</code> \u662f\u7528\u4e8e\u68c0\u6d4b\u548c\u8ddf\u8e2a\u4eba\u8138468\u4e2a\u5173\u952e\u70b9\u7684\u7c7b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7cbe\u786e\u7684\u4eba\u8138\u7279\u5f81\u5b9a\u4f4d\u3002</p>"},{"location":"api/face_landmarker/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import FaceLandmarker\n</code></pre>"},{"location":"api/face_landmarker/#_2","title":"\u521d\u59cb\u5316\u53c2\u6570","text":"<p>\u521b\u5efa <code>FaceLandmarker</code> \u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>FaceLandmarker(\n    input_source=None,               # \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f\n    min_detection_confidence=0.5,    # \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\n    min_tracking_confidence=0.5,     # \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\n    enable_gpu=False,                # \u662f\u5426\u542f\u7528GPU\u52a0\u901f\n    result_callback=None,            # \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\n    output_face_blendshapes=False,   # \u662f\u5426\u8f93\u51fa\u9762\u90e8\u8868\u60c5\u7cfb\u6570\n    output_facial_transformation_matrixes=False, # \u662f\u5426\u8f93\u51fa\u9762\u90e8\u53d8\u6362\u77e9\u9635\n    num_faces=1                      # \u6700\u5927\u68c0\u6d4b\u4eba\u8138\u6570\n)\n</code></pre> \u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u63cf\u8ff0 input_source None/str/Path/np.ndarray None \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f min_detection_confidence float 0.5 \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] min_tracking_confidence float 0.5 \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] enable_gpu bool False \u662f\u5426\u542f\u7528GPU\u52a0\u901f result_callback callable None \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5b9e\u65f6\u6d41\u6a21\u5f0f output_face_blendshapes bool False \u662f\u5426\u8f93\u51fa\u9762\u90e8\u8868\u60c5\u7cfb\u6570 output_facial_transformation_matrixes bool False \u662f\u5426\u8f93\u51fa\u9762\u90e8\u53d8\u6362\u77e9\u9635 num_faces int 1 \u6700\u5927\u68c0\u6d4b\u4eba\u8138\u6570"},{"location":"api/face_landmarker/#_3","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"api/face_landmarker/#run","title":"run","text":"<p>\u8fd0\u884c\u4eba\u8138\u5173\u952e\u70b9\u68c0\u6d4b\uff0c\u8fd4\u56de\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>landmarks = landmarker.run(frame=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>frame</code> (np.ndarray, \u53ef\u9009): \u8981\u5904\u7406\u7684\u56fe\u50cf\u5e27\uff0c\u4ec5\u89c6\u9891\u6d41\u6a21\u5f0f\u9700\u8981\u3002</p> <p>\u8fd4\u56de\uff1a - <code>list</code>: \u5305\u542b\u68c0\u6d4b\u5230\u7684\u4eba\u8138\u5173\u952e\u70b9\u4fe1\u606f\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u4eba\u8138\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u62ec:   - <code>face_landmarks</code> (list): 468\u4e2a\u4eba\u8138\u5173\u952e\u70b9\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5173\u952e\u70b9\u5305\u542bx\u3001y\u3001z\u5750\u6807   - <code>face_blendshapes</code> (list, \u53ef\u9009): \u9762\u90e8\u8868\u60c5\u7cfb\u6570\u5217\u8868   - <code>facial_transformation_matrixes</code> (list, \u53ef\u9009): \u9762\u90e8\u53d8\u6362\u77e9\u9635\u5217\u8868</p>"},{"location":"api/face_landmarker/#draw","title":"draw","text":"<p>\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>result_image = landmarker.draw(image, landmarks=None, connection_drawing_spec=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u7ed8\u5236\u7684\u539f\u59cb\u56fe\u50cf - <code>landmarks</code> (list, \u53ef\u9009): \u7531 <code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u4e3aNone\u5219\u4f7f\u7528\u6700\u8fd1\u4e00\u6b21\u7684\u7ed3\u679c - <code>connection_drawing_spec</code> (dict, \u53ef\u9009): \u8fde\u63a5\u7ebf\u7ed8\u5236\u89c4\u683c\uff0c\u5305\u62ec\u989c\u8272\u3001\u7ebf\u5bbd\u7b49</p> <p>\u8fd4\u56de\uff1a - <code>np.ndarray</code>: \u7ed8\u5236\u4e86\u68c0\u6d4b\u7ed3\u679c\u7684\u56fe\u50cf</p>"},{"location":"api/face_landmarker/#get_fps","title":"get_fps","text":"<p>\u83b7\u53d6\u5f53\u524d\u5904\u7406\u7684\u5e27\u7387\u3002</p> <pre><code>fps = landmarker.get_fps()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>float</code>: \u5f53\u524d\u7684FPS</p>"},{"location":"api/face_landmarker/#close","title":"close","text":"<p>\u91ca\u653e\u8d44\u6e90\u3002</p> <pre><code>landmarker.close()\n</code></pre>"},{"location":"api/face_landmarker/#_4","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/face_landmarker/#_5","title":"\u56fe\u7247\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import FaceLandmarker\nimport cv2\n\n# \u65b9\u6cd51\uff1a\u4f7f\u7528\u56fe\u7247\u8def\u5f84\nwith FaceLandmarker(input_source=\"person.jpg\") as landmarker:\n    landmarks = landmarker.run()\n    image = cv2.imread(\"person.jpg\")\n    result = landmarker.draw(image, landmarks)\n    cv2.imwrite(\"landmarks_result.jpg\", result)\n\n# \u65b9\u6cd52\uff1a\u4f7f\u7528\u56fe\u7247\u6570\u636e\nimage = cv2.imread(\"person.jpg\")\nwith FaceLandmarker(input_source=image) as landmarker:\n    landmarks = landmarker.run()\n    result = landmarker.draw(image, landmarks)\n    cv2.imwrite(\"landmarks_result.jpg\", result)\n</code></pre>"},{"location":"api/face_landmarker/#_6","title":"\u89c6\u9891\u6d41\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import FaceLandmarker, Camera\nimport cv2\n\n# \u5b9e\u65f6\u68c0\u6d4b\nwith Camera(0) as camera, FaceLandmarker() as landmarker:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        landmarks = landmarker.run(frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = landmarker.draw(frame, landmarks)\n\n        # \u663e\u793aFPS\n        fps = landmarker.get_fps()\n        cv2.putText(result, f\"FPS: {fps:.1f}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u4eba\u8138\u5173\u952e\u70b9\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/face_landmarker/#_7","title":"\u83b7\u53d6\u8868\u60c5\u7cfb\u6570","text":"<pre><code>from aitoolkit_base import FaceLandmarker, Camera\nimport cv2\n\n# \u542f\u7528\u8868\u60c5\u7cfb\u6570\u8f93\u51fa\nwith Camera(0) as camera, FaceLandmarker(output_face_blendshapes=True) as landmarker:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        landmarks = landmarker.run(frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = landmarker.draw(frame, landmarks)\n\n        # \u5982\u679c\u68c0\u6d4b\u5230\u4eba\u8138\uff0c\u663e\u793a\u8868\u60c5\u7cfb\u6570\n        if landmarks and len(landmarks) &gt; 0 and 'face_blendshapes' in landmarks[0]:\n            blendshapes = landmarks[0]['face_blendshapes']\n            # \u627e\u5230\u6700\u660e\u663e\u7684\u8868\u60c5\n            max_expression = max(blendshapes.items(), key=lambda x: x[1])\n            expression_name, confidence = max_expression\n            cv2.putText(result, f\"{expression_name}: {confidence:.2f}\", \n                       (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u4eba\u8138\u8868\u60c5\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/face_landmarker/#_8","title":"\u8fd4\u56de\u6570\u636e\u7ed3\u6784","text":"<p><code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>[\n    {\n        \"face_landmarks\": [\n            {\"x\": 0.4, \"y\": 0.3, \"z\": 0.01},  # \u7b2c1\u4e2a\u5173\u952e\u70b9\n            {\"x\": 0.41, \"y\": 0.305, \"z\": 0.011},  # \u7b2c2\u4e2a\u5173\u952e\u70b9\n            # ... \u5171468\u4e2a\u5173\u952e\u70b9\n        ],\n        \"face_blendshapes\": {  # \u5982\u679c\u542f\u7528\u4e86output_face_blendshapes\n            \"neutral\": 0.8,\n            \"smile\": 0.1,\n            \"eye_blink_left\": 0.05,\n            # ... \u5176\u4ed6\u8868\u60c5\u7cfb\u6570\n        },\n        \"facial_transformation_matrixes\": [  # \u5982\u679c\u542f\u7528\u4e86output_facial_transformation_matrixes\n            [1.0, 0.0, 0.0, 0.0],\n            [0.0, 1.0, 0.0, 0.0],\n            [0.0, 0.0, 1.0, 0.0],\n            [0.0, 0.0, 0.0, 1.0]\n        ]\n    },\n    # \u53ef\u80fd\u6709\u591a\u4e2a\u4eba\u8138...\n]\n</code></pre>"},{"location":"api/face_landmarker/#_9","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>FaceLandmarker \u63d0\u4f9b\u4e86\u6bd4 FaceDetector \u66f4\u8be6\u7ec6\u7684\u4eba\u8138\u5206\u6790\u7ed3\u679c</li> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ea\u68c0\u6d4b\u4e00\u4e2a\u4eba\u8138\uff0c\u5982\u9700\u68c0\u6d4b\u591a\u4e2a\u4eba\u8138\uff0c\u8bf7\u8c03\u6574 <code>num_faces</code> \u53c2\u6570</li> <li>\u542f\u7528\u8868\u60c5\u7cfb\u6570\u6216\u53d8\u6362\u77e9\u9635\u4f1a\u589e\u52a0\u8ba1\u7b97\u8d1f\u62c5\uff0c\u53ef\u80fd\u5f71\u54cd\u5b9e\u65f6\u6027\u80fd</li> <li>\u5173\u952e\u70b9\u5750\u6807\u662f\u5f52\u4e00\u5316\u7684\uff0c\u8303\u56f4\u5728[0,1]\u4e4b\u95f4\uff0c\u9700\u8981\u4e58\u4ee5\u56fe\u50cf\u5c3a\u5bf8\u83b7\u53d6\u5b9e\u9645\u50cf\u7d20\u5750\u6807</li> <li>\u63a8\u8350\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08with\u8bed\u53e5\uff09\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90 </li> </ol>"},{"location":"api/gesture_recognizer/","title":"GestureRecognizer","text":"<p><code>GestureRecognizer</code> \u662f\u7528\u4e8e\u8bc6\u522b\u624b\u52bf\u7684\u7c7b\uff0c\u53ef\u4ee5\u68c0\u6d4b\u624b\u90e8\u5e76\u8bc6\u522b\u51fa\u591a\u79cd\u9884\u5b9a\u4e49\u624b\u52bf\u3002</p>"},{"location":"api/gesture_recognizer/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import GestureRecognizer\n</code></pre>"},{"location":"api/gesture_recognizer/#_2","title":"\u521d\u59cb\u5316\u53c2\u6570","text":"<p>\u521b\u5efa <code>GestureRecognizer</code> \u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>GestureRecognizer(\n    input_source=None,               # \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f\n    min_detection_confidence=0.5,    # \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\n    min_tracking_confidence=0.5,     # \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\n    enable_gpu=False,                # \u662f\u5426\u542f\u7528GPU\u52a0\u901f\n    result_callback=None,            # \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\n    num_hands=2,                     # \u6700\u5927\u68c0\u6d4b\u624b\u6570\n    min_gesture_confidence=0.5       # \u6700\u5c0f\u624b\u52bf\u8bc6\u522b\u7f6e\u4fe1\u5ea6\n)\n</code></pre> \u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u63cf\u8ff0 input_source None/str/Path/np.ndarray None \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f min_detection_confidence float 0.5 \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] min_tracking_confidence float 0.5 \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] enable_gpu bool False \u662f\u5426\u542f\u7528GPU\u52a0\u901f result_callback callable None \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5b9e\u65f6\u6d41\u6a21\u5f0f num_hands int 2 \u6700\u5927\u68c0\u6d4b\u624b\u6570 min_gesture_confidence float 0.5 \u6700\u5c0f\u624b\u52bf\u8bc6\u522b\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0]"},{"location":"api/gesture_recognizer/#_3","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"api/gesture_recognizer/#run","title":"run","text":"<p>\u8fd0\u884c\u624b\u52bf\u8bc6\u522b\uff0c\u8fd4\u56de\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>gestures = recognizer.run(frame=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>frame</code> (np.ndarray, \u53ef\u9009): \u8981\u5904\u7406\u7684\u56fe\u50cf\u5e27\uff0c\u4ec5\u89c6\u9891\u6d41\u6a21\u5f0f\u9700\u8981\u3002</p> <p>\u8fd4\u56de\uff1a - <code>list</code>: \u5305\u542b\u68c0\u6d4b\u5230\u7684\u624b\u52bf\u4fe1\u606f\u7684\u5217\u8868\uff0c\u6bcf\u53ea\u624b\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u62ec:   - <code>hand_landmarks</code> (list): 21\u4e2a\u624b\u90e8\u5173\u952e\u70b9\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5173\u952e\u70b9\u5305\u542bx\u3001y\u3001z\u5750\u6807   - <code>handedness</code> (str): \u624b\u7684\u7c7b\u578b\uff0c\"Left\"\u6216\"Right\"   - <code>gestures</code> (list): \u8bc6\u522b\u5230\u7684\u624b\u52bf\u5217\u8868\uff0c\u6bcf\u4e2a\u624b\u52bf\u5305\u542b\u7c7b\u522b\u540d\u79f0\u548c\u7f6e\u4fe1\u5ea6   - <code>gesture_name</code> (str): \u6700\u53ef\u80fd\u7684\u624b\u52bf\u540d\u79f0   - <code>gesture_score</code> (float): \u6700\u53ef\u80fd\u7684\u624b\u52bf\u7f6e\u4fe1\u5ea6</p>"},{"location":"api/gesture_recognizer/#draw","title":"draw","text":"<p>\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>result_image = recognizer.draw(image, gestures=None, connection_drawing_spec=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u7ed8\u5236\u7684\u539f\u59cb\u56fe\u50cf - <code>gestures</code> (list, \u53ef\u9009): \u7531 <code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u4e3aNone\u5219\u4f7f\u7528\u6700\u8fd1\u4e00\u6b21\u7684\u7ed3\u679c - <code>connection_drawing_spec</code> (dict, \u53ef\u9009): \u8fde\u63a5\u7ebf\u7ed8\u5236\u89c4\u683c\uff0c\u5305\u62ec\u989c\u8272\u3001\u7ebf\u5bbd\u7b49</p> <p>\u8fd4\u56de\uff1a - <code>np.ndarray</code>: \u7ed8\u5236\u4e86\u68c0\u6d4b\u7ed3\u679c\u7684\u56fe\u50cf</p>"},{"location":"api/gesture_recognizer/#get_fps","title":"get_fps","text":"<p>\u83b7\u53d6\u5f53\u524d\u5904\u7406\u7684\u5e27\u7387\u3002</p> <pre><code>fps = recognizer.get_fps()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>float</code>: \u5f53\u524d\u7684FPS</p>"},{"location":"api/gesture_recognizer/#close","title":"close","text":"<p>\u91ca\u653e\u8d44\u6e90\u3002</p> <pre><code>recognizer.close()\n</code></pre>"},{"location":"api/gesture_recognizer/#_4","title":"\u652f\u6301\u7684\u624b\u52bf","text":"<p>GestureRecognizer\u652f\u6301\u4ee5\u4e0b\u9884\u5b9a\u4e49\u624b\u52bf\uff1a</p> \u624b\u52bf\u540d\u79f0 \u63cf\u8ff0 Thumb_Up \u7ad6\u8d77\u5927\u62c7\u6307 Thumb_Down \u5927\u62c7\u6307\u5411\u4e0b Open_Palm \u624b\u638c\u6253\u5f00 Victory \u80dc\u5229\u624b\u52bf Pointing_Up \u98df\u6307\u5411\u4e0a\u6307 ILoveYou \"\u6211\u7231\u4f60\"\u624b\u52bf Closed_Fist \u63e1\u62f3 None \u65e0\u6cd5\u8bc6\u522b\u7684\u624b\u52bf"},{"location":"api/gesture_recognizer/#_5","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/gesture_recognizer/#_6","title":"\u56fe\u7247\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import GestureRecognizer\nimport cv2\n\n# \u65b9\u6cd51\uff1a\u4f7f\u7528\u56fe\u7247\u8def\u5f84\nwith GestureRecognizer(input_source=\"gesture.jpg\") as recognizer:\n    gestures = recognizer.run()\n    image = cv2.imread(\"gesture.jpg\")\n    result = recognizer.draw(image, gestures)\n    cv2.imwrite(\"gesture_result.jpg\", result)\n\n# \u65b9\u6cd52\uff1a\u4f7f\u7528\u56fe\u7247\u6570\u636e\nimage = cv2.imread(\"gesture.jpg\")\nwith GestureRecognizer(input_source=image) as recognizer:\n    gestures = recognizer.run()\n    result = recognizer.draw(image, gestures)\n    cv2.imwrite(\"gesture_result.jpg\", result)\n</code></pre>"},{"location":"api/gesture_recognizer/#_7","title":"\u89c6\u9891\u6d41\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import GestureRecognizer, Camera\nimport cv2\n\n# \u5b9e\u65f6\u68c0\u6d4b\nwith Camera(0) as camera, GestureRecognizer() as recognizer:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        gestures = recognizer.run(frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = recognizer.draw(frame, gestures)\n\n        # \u663e\u793aFPS\u548c\u68c0\u6d4b\u5230\u7684\u624b\u52bf\n        fps = recognizer.get_fps()\n        cv2.putText(result, f\"FPS: {fps:.1f}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n\n        # \u663e\u793a\u8bc6\u522b\u5230\u7684\u624b\u52bf\n        if gestures:\n            y_offset = 70\n            for i, hand_gesture in enumerate(gestures):\n                handedness = hand_gesture.get(\"handedness\", \"Unknown\")\n                gesture_name = hand_gesture.get(\"gesture_name\", \"Unknown\")\n                gesture_score = hand_gesture.get(\"gesture_score\", 0)\n\n                text = f\"{handedness} \u624b: {gesture_name} ({gesture_score:.2f})\"\n                cv2.putText(result, text, (10, y_offset), \n                           cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 0), 2)\n                y_offset += 40\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u624b\u52bf\u8bc6\u522b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/gesture_recognizer/#_8","title":"\u624b\u52bf\u63a7\u5236\u793a\u4f8b","text":"<pre><code>from aitoolkit_base import GestureRecognizer, Camera\nimport cv2\nimport time\n\n# \u4f7f\u7528\u624b\u52bf\u63a7\u5236\u5e94\u7528\nwith Camera(0) as camera, GestureRecognizer(min_gesture_confidence=0.7) as recognizer:\n    # \u4e0a\u4e00\u6b21\u8bc6\u522b\u5230\u7684\u624b\u52bf\n    last_gesture = None\n    # \u6700\u540e\u4e00\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u6233\n    last_action_time = 0\n    # \u64cd\u4f5c\u51b7\u5374\u65f6\u95f4\uff08\u79d2\uff09\n    cooldown = 1.0\n\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        gestures = recognizer.run(frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = recognizer.draw(frame, gestures)\n\n        # \u5f53\u524d\u65f6\u95f4\n        current_time = time.time()\n\n        # \u68c0\u67e5\u662f\u5426\u6709\u624b\u52bf\uff0c\u5e76\u4e14\u5df2\u8fc7\u51b7\u5374\u65f6\u95f4\n        if gestures and current_time - last_action_time &gt; cooldown:\n            # \u83b7\u53d6\u7b2c\u4e00\u53ea\u624b\u7684\u624b\u52bf\n            gesture_name = gestures[0].get(\"gesture_name\", \"None\")\n\n            # \u4ec5\u5f53\u624b\u52bf\u53d8\u5316\u65f6\u89e6\u53d1\u64cd\u4f5c\n            if gesture_name != last_gesture and gesture_name != \"None\":\n                last_gesture = gesture_name\n                last_action_time = current_time\n\n                # \u6839\u636e\u624b\u52bf\u6267\u884c\u4e0d\u540c\u64cd\u4f5c\n                if gesture_name == \"Thumb_Up\":\n                    print(\"\u6267\u884c\u70b9\u8d5e\u64cd\u4f5c\")\n                    # \u5728\u8fd9\u91cc\u6dfb\u52a0\u70b9\u8d5e\u64cd\u4f5c\u7684\u4ee3\u7801\n\n                elif gesture_name == \"Victory\":\n                    print(\"\u6267\u884c\u62cd\u7167\u64cd\u4f5c\")\n                    # \u5728\u8fd9\u91cc\u6dfb\u52a0\u62cd\u7167\u64cd\u4f5c\u7684\u4ee3\u7801\n\n                elif gesture_name == \"Open_Palm\":\n                    print(\"\u6267\u884c\u505c\u6b62\u64cd\u4f5c\")\n                    # \u5728\u8fd9\u91cc\u6dfb\u52a0\u505c\u6b62\u64cd\u4f5c\u7684\u4ee3\u7801\n\n                # \u5728\u56fe\u50cf\u4e0a\u663e\u793a\u6267\u884c\u7684\u64cd\u4f5c\n                cv2.putText(result, f\"\u64cd\u4f5c: {gesture_name}\", (50, 50), \n                           cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 255), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u624b\u52bf\u63a7\u5236\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/gesture_recognizer/#_9","title":"\u8fd4\u56de\u6570\u636e\u7ed3\u6784","text":"<p><code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>[\n    {\n        \"hand_landmarks\": [\n            {\"x\": 0.4, \"y\": 0.3, \"z\": 0.01},  # \u7b2c1\u4e2a\u5173\u952e\u70b9\n            {\"x\": 0.41, \"y\": 0.305, \"z\": 0.011},  # \u7b2c2\u4e2a\u5173\u952e\u70b9\n            # ... \u517121\u4e2a\u5173\u952e\u70b9\n        ],\n        \"handedness\": \"Right\",  # \u6216 \"Left\"\n        \"gestures\": [  # \u6240\u6709\u53ef\u80fd\u7684\u624b\u52bf\u53ca\u5176\u7f6e\u4fe1\u5ea6\n            {\"category_name\": \"Thumb_Up\", \"score\": 0.92},\n            {\"category_name\": \"Victory\", \"score\": 0.03},\n            # ... \u5176\u4ed6\u624b\u52bf\n        ],\n        \"gesture_name\": \"Thumb_Up\",  # \u6700\u53ef\u80fd\u7684\u624b\u52bf\n        \"gesture_score\": 0.92  # \u6700\u53ef\u80fd\u7684\u624b\u52bf\u7f6e\u4fe1\u5ea6\n    },\n    # \u53ef\u80fd\u6709\u7b2c\u4e8c\u53ea\u624b...\n]\n</code></pre>"},{"location":"api/gesture_recognizer/#_10","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>GestureRecognizer \u9ed8\u8ba4\u6700\u591a\u68c0\u6d4b\u4e24\u53ea\u624b\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>num_hands</code> \u53c2\u6570\u8c03\u6574</li> <li>\u624b\u52bf\u8bc6\u522b\u5728\u590d\u6742\u80cc\u666f\u6216\u5149\u7ebf\u4e0d\u8db3\u7684\u73af\u5883\u4e0b\u53ef\u80fd\u4e0d\u591f\u7a33\u5b9a</li> <li>\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574 <code>min_gesture_confidence</code> \u53c2\u6570\u8fc7\u6ee4\u4f4e\u7f6e\u4fe1\u5ea6\u7684\u624b\u52bf\u8bc6\u522b\u7ed3\u679c</li> <li>\u624b\u52bf\u8bc6\u522b\u7b97\u6cd5\u5bf9\u624b\u52bf\u7684\u65b9\u5411\u548c\u89d2\u5ea6\u6709\u4e00\u5b9a\u8981\u6c42\uff0c\u8bf7\u786e\u4fdd\u624b\u52bf\u9762\u5411\u6444\u50cf\u5934</li> <li>\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u624b\u52bf\uff0c\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\uff0c\u5f53\u524d\u7248\u672c\u4e0d\u652f\u6301\u5728\u7ebf\u5b66\u4e60\u65b0\u624b\u52bf</li> <li>\u68c0\u6d4b\u591a\u53ea\u624b\u6216\u5728\u4f4e\u6027\u80fd\u8bbe\u5907\u4e0a\u53ef\u80fd\u4f1a\u5f71\u54cd\u5b9e\u65f6\u6027\u80fd\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574\u53c2\u6570</li> <li>\u63a8\u8350\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08with\u8bed\u53e5\uff09\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90 </li> </ol>"},{"location":"api/hand_landmarker/","title":"HandLandmarker","text":"<p><code>HandLandmarker</code> \u662f\u7528\u4e8e\u68c0\u6d4b\u548c\u8ddf\u8e2a\u624b\u90e821\u4e2a\u5173\u952e\u70b9\u7684\u7c7b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7cbe\u786e\u7684\u624b\u90e8\u59ff\u6001\u5206\u6790\u3002</p>"},{"location":"api/hand_landmarker/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import HandLandmarker\n</code></pre>"},{"location":"api/hand_landmarker/#_2","title":"\u521d\u59cb\u5316\u53c2\u6570","text":"<p>\u521b\u5efa <code>HandLandmarker</code> \u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>HandLandmarker(\n    input_source=None,               # \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f\n    min_detection_confidence=0.5,    # \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\n    min_tracking_confidence=0.5,     # \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\n    enable_gpu=False,                # \u662f\u5426\u542f\u7528GPU\u52a0\u901f\n    result_callback=None,            # \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\n    num_hands=2                      # \u6700\u5927\u68c0\u6d4b\u624b\u6570\n)\n</code></pre> \u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u63cf\u8ff0 input_source None/str/Path/np.ndarray None \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f min_detection_confidence float 0.5 \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] min_tracking_confidence float 0.5 \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] enable_gpu bool False \u662f\u5426\u542f\u7528GPU\u52a0\u901f result_callback callable None \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5b9e\u65f6\u6d41\u6a21\u5f0f num_hands int 2 \u6700\u5927\u68c0\u6d4b\u624b\u6570"},{"location":"api/hand_landmarker/#_3","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"api/hand_landmarker/#run","title":"run","text":"<p>\u8fd0\u884c\u624b\u90e8\u5173\u952e\u70b9\u68c0\u6d4b\uff0c\u8fd4\u56de\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>hands = landmarker.run(frame=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>frame</code> (np.ndarray, \u53ef\u9009): \u8981\u5904\u7406\u7684\u56fe\u50cf\u5e27\uff0c\u4ec5\u89c6\u9891\u6d41\u6a21\u5f0f\u9700\u8981\u3002</p> <p>\u8fd4\u56de\uff1a - <code>list</code>: \u5305\u542b\u68c0\u6d4b\u5230\u7684\u624b\u90e8\u5173\u952e\u70b9\u4fe1\u606f\u7684\u5217\u8868\uff0c\u6bcf\u53ea\u624b\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u62ec:   - <code>hand_landmarks</code> (list): 21\u4e2a\u624b\u90e8\u5173\u952e\u70b9\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5173\u952e\u70b9\u5305\u542bx\u3001y\u3001z\u5750\u6807   - <code>handedness</code> (str): \u624b\u7684\u7c7b\u578b\uff0c\"Left\"\u6216\"Right\"   - <code>score</code> (float): \u68c0\u6d4b\u7f6e\u4fe1\u5ea6</p>"},{"location":"api/hand_landmarker/#draw","title":"draw","text":"<p>\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>result_image = landmarker.draw(image, hands=None, connection_drawing_spec=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u7ed8\u5236\u7684\u539f\u59cb\u56fe\u50cf - <code>hands</code> (list, \u53ef\u9009): \u7531 <code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u4e3aNone\u5219\u4f7f\u7528\u6700\u8fd1\u4e00\u6b21\u7684\u7ed3\u679c - <code>connection_drawing_spec</code> (dict, \u53ef\u9009): \u8fde\u63a5\u7ebf\u7ed8\u5236\u89c4\u683c\uff0c\u5305\u62ec\u989c\u8272\u3001\u7ebf\u5bbd\u7b49</p> <p>\u8fd4\u56de\uff1a - <code>np.ndarray</code>: \u7ed8\u5236\u4e86\u68c0\u6d4b\u7ed3\u679c\u7684\u56fe\u50cf</p>"},{"location":"api/hand_landmarker/#get_fps","title":"get_fps","text":"<p>\u83b7\u53d6\u5f53\u524d\u5904\u7406\u7684\u5e27\u7387\u3002</p> <pre><code>fps = landmarker.get_fps()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>float</code>: \u5f53\u524d\u7684FPS</p>"},{"location":"api/hand_landmarker/#close","title":"close","text":"<p>\u91ca\u653e\u8d44\u6e90\u3002</p> <pre><code>landmarker.close()\n</code></pre>"},{"location":"api/hand_landmarker/#_4","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/hand_landmarker/#_5","title":"\u56fe\u7247\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import HandLandmarker\nimport cv2\n\n# \u65b9\u6cd51\uff1a\u4f7f\u7528\u56fe\u7247\u8def\u5f84\nwith HandLandmarker(input_source=\"hand.jpg\") as landmarker:\n    hands = landmarker.run()\n    image = cv2.imread(\"hand.jpg\")\n    result = landmarker.draw(image, hands)\n    cv2.imwrite(\"hand_landmarks_result.jpg\", result)\n\n# \u65b9\u6cd52\uff1a\u4f7f\u7528\u56fe\u7247\u6570\u636e\nimage = cv2.imread(\"hand.jpg\")\nwith HandLandmarker(input_source=image) as landmarker:\n    hands = landmarker.run()\n    result = landmarker.draw(image, hands)\n    cv2.imwrite(\"hand_landmarks_result.jpg\", result)\n</code></pre>"},{"location":"api/hand_landmarker/#_6","title":"\u89c6\u9891\u6d41\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import HandLandmarker, Camera\nimport cv2\n\n# \u5b9e\u65f6\u68c0\u6d4b\nwith Camera(0) as camera, HandLandmarker() as landmarker:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        hands = landmarker.run(frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = landmarker.draw(frame, hands)\n\n        # \u663e\u793aFPS\u548c\u68c0\u6d4b\u5230\u7684\u624b\u6570\n        fps = landmarker.get_fps()\n        cv2.putText(result, f\"FPS: {fps:.1f}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n        cv2.putText(result, f\"\u624b\u6570: {len(hands) if hands else 0}\", (10, 70), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u624b\u90e8\u5173\u952e\u70b9\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/hand_landmarker/#_7","title":"\u533a\u5206\u5de6\u53f3\u624b","text":"<pre><code>from aitoolkit_base import HandLandmarker, Camera\nimport cv2\n\n# \u533a\u5206\u5de6\u53f3\u624b\u5e76\u4f7f\u7528\u4e0d\u540c\u989c\u8272\u663e\u793a\nwith Camera(0) as camera, HandLandmarker(num_hands=2) as landmarker:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        hands = landmarker.run(frame)\n\n        # \u521b\u5efa\u526f\u672c\u7528\u4e8e\u7ed8\u5236\n        result = frame.copy()\n\n        if hands:\n            for hand in hands:\n                # \u83b7\u53d6\u624b\u7684\u7c7b\u578b\u548c\u5173\u952e\u70b9\n                handedness = hand.get(\"handedness\", \"Unknown\")\n                landmarks = hand.get(\"hand_landmarks\", [])\n\n                # \u4e3a\u5de6\u53f3\u624b\u9009\u62e9\u4e0d\u540c\u989c\u8272\n                color = (0, 0, 255) if handedness == \"Left\" else (0, 255, 0)\n\n                # \u7ed8\u5236\u6bcf\u4e2a\u5173\u952e\u70b9\n                for point in landmarks:\n                    x, y = int(point[\"x\"] * result.shape[1]), int(point[\"y\"] * result.shape[0])\n                    cv2.circle(result, (x, y), 5, color, -1)\n\n                # \u5728\u624b\u4e0a\u6807\u8bb0\u5de6/\u53f3\n                if landmarks:\n                    wrist = landmarks[0]  # \u8155\u5173\u8282\u70b9\n                    x = int(wrist[\"x\"] * result.shape[1])\n                    y = int(wrist[\"y\"] * result.shape[0])\n                    cv2.putText(result, handedness, (x, y), \n                               cv2.FONT_HERSHEY_SIMPLEX, 1, color, 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u5de6\u53f3\u624b\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/hand_landmarker/#_8","title":"\u624b\u90e8\u5173\u952e\u70b9\u7d22\u5f15","text":"<p>\u4ee5\u4e0b\u662f\u624b\u90e821\u4e2a\u5173\u952e\u70b9\u7684\u7d22\u5f15\u548c\u5bf9\u5e94\u7684\u540d\u79f0\uff1a</p> \u7d22\u5f15 \u540d\u79f0 \u63cf\u8ff0 0 WRIST \u624b\u8155 1 THUMB_CMC \u5927\u62c7\u6307\u638c\u8155\u5173\u8282 2 THUMB_MCP \u5927\u62c7\u6307\u638c\u6307\u5173\u8282 3 THUMB_IP \u5927\u62c7\u6307\u6307\u95f4\u5173\u8282 4 THUMB_TIP \u5927\u62c7\u6307\u6307\u5c16 5 INDEX_FINGER_MCP \u98df\u6307\u638c\u6307\u5173\u8282 6 INDEX_FINGER_PIP \u98df\u6307\u8fd1\u7aef\u6307\u95f4\u5173\u8282 7 INDEX_FINGER_DIP \u98df\u6307\u8fdc\u7aef\u6307\u95f4\u5173\u8282 8 INDEX_FINGER_TIP \u98df\u6307\u6307\u5c16 9 MIDDLE_FINGER_MCP \u4e2d\u6307\u638c\u6307\u5173\u8282 10 MIDDLE_FINGER_PIP \u4e2d\u6307\u8fd1\u7aef\u6307\u95f4\u5173\u8282 11 MIDDLE_FINGER_DIP \u4e2d\u6307\u8fdc\u7aef\u6307\u95f4\u5173\u8282 12 MIDDLE_FINGER_TIP \u4e2d\u6307\u6307\u5c16 13 RING_FINGER_MCP \u65e0\u540d\u6307\u638c\u6307\u5173\u8282 14 RING_FINGER_PIP \u65e0\u540d\u6307\u8fd1\u7aef\u6307\u95f4\u5173\u8282 15 RING_FINGER_DIP \u65e0\u540d\u6307\u8fdc\u7aef\u6307\u95f4\u5173\u8282 16 RING_FINGER_TIP \u65e0\u540d\u6307\u6307\u5c16 17 PINKY_MCP \u5c0f\u6307\u638c\u6307\u5173\u8282 18 PINKY_PIP \u5c0f\u6307\u8fd1\u7aef\u6307\u95f4\u5173\u8282 19 PINKY_DIP \u5c0f\u6307\u8fdc\u7aef\u6307\u95f4\u5173\u8282 20 PINKY_TIP \u5c0f\u6307\u6307\u5c16"},{"location":"api/hand_landmarker/#_9","title":"\u8fd4\u56de\u6570\u636e\u7ed3\u6784","text":"<p><code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>[\n    {\n        \"hand_landmarks\": [\n            {\"x\": 0.4, \"y\": 0.3, \"z\": 0.01},  # \u7b2c1\u4e2a\u5173\u952e\u70b9(WRIST)\n            {\"x\": 0.41, \"y\": 0.305, \"z\": 0.011},  # \u7b2c2\u4e2a\u5173\u952e\u70b9(THUMB_CMC)\n            # ... \u517121\u4e2a\u5173\u952e\u70b9\n        ],\n        \"handedness\": \"Right\",  # \u6216 \"Left\"\n        \"score\": 0.98  # \u68c0\u6d4b\u7f6e\u4fe1\u5ea6\n    },\n    # \u53ef\u80fd\u6709\u7b2c\u4e8c\u53ea\u624b...\n]\n</code></pre>"},{"location":"api/hand_landmarker/#_10","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>HandLandmarker \u9ed8\u8ba4\u6700\u591a\u68c0\u6d4b\u4e24\u53ea\u624b\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>num_hands</code> \u53c2\u6570\u8c03\u6574</li> <li>\u624b\u90e8\u5173\u952e\u70b9\u68c0\u6d4b\u5728\u590d\u6742\u80cc\u666f\u6216\u5149\u7ebf\u4e0d\u8db3\u7684\u73af\u5883\u4e0b\u53ef\u80fd\u4e0d\u591f\u7a33\u5b9a</li> <li>\u5173\u952e\u70b9\u5750\u6807\u662f\u5f52\u4e00\u5316\u7684\uff0c\u8303\u56f4\u5728[0,1]\u4e4b\u95f4\uff0c\u9700\u8981\u4e58\u4ee5\u56fe\u50cf\u5c3a\u5bf8\u83b7\u53d6\u5b9e\u9645\u50cf\u7d20\u5750\u6807</li> <li>z\u5750\u6807\u8868\u793a\u6df1\u5ea6\uff0c\u76f8\u5bf9\u4e8e\u8155\u5173\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u5355\u4f4d\u4e0ex\u3001y\u76f8\u540c</li> <li>\u63a8\u8350\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08with\u8bed\u53e5\uff09\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90</li> <li>\u68c0\u6d4b\u591a\u53ea\u624b\u65f6\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5b9e\u65f6\u6027\u80fd\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574\u53c2\u6570 </li> </ol>"},{"location":"api/image_utils/","title":"ImageUtils","text":"<p>\u56fe\u50cf\u5de5\u5177\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7528\u4e8e\u56fe\u50cf\u5904\u7406\u548c\u8f6c\u6362\u7684\u5b9e\u7528\u51fd\u6570\uff0c\u7528\u4e8e\u8f85\u52a9\u89c6\u89c9AI\u5e94\u7528\u7684\u5f00\u53d1\u3002</p>"},{"location":"api/image_utils/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import ImageUtils\n</code></pre>"},{"location":"api/image_utils/#_2","title":"\u4e3b\u8981\u51fd\u6570","text":""},{"location":"api/image_utils/#_3","title":"\u663e\u793a\u76f8\u5173","text":""},{"location":"api/image_utils/#_4","title":"\u56fe\u50cf\u663e\u793a","text":"<pre><code>ImageUtils.show_image(image, title=\"Image\", wait_key=0)\n</code></pre> <p>\u5728\u7a97\u53e3\u4e2d\u663e\u793a\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u663e\u793a\u7684\u56fe\u50cf - <code>title</code> (str): \u7a97\u53e3\u6807\u9898\uff0c\u9ed8\u8ba4\u4e3a\"Image\" - <code>wait_key</code> (int): \u7b49\u5f85\u6309\u952e\u7684\u6beb\u79d2\u6570\uff0c\u9ed8\u8ba4\u4e3a0\uff08\u6c38\u4e45\u7b49\u5f85\u6309\u952e\uff09</p>"},{"location":"api/image_utils/#jupyter","title":"\u5185\u8054\u663e\u793a\uff08Jupyter\uff09","text":"<pre><code>ImageUtils.inline_show(image)\n</code></pre> <p>\u5728Jupyter Notebook\u4e2d\u5185\u8054\u663e\u793a\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u663e\u793a\u7684\u56fe\u50cf</p> <p>\u8fd4\u56de\uff1a - <code>IPython.display.Image</code> \u6216 <code>numpy.ndarray</code>: \u7528\u4e8e\u5185\u8054\u663e\u793a\u7684\u56fe\u50cf\u5bf9\u8c61</p>"},{"location":"api/image_utils/#_5","title":"\u7f51\u9875\u663e\u793a","text":"<pre><code>ImageUtils.web_show(image, port=8000, host=\"localhost\")\n</code></pre> <p>\u901a\u8fc7Web\u670d\u52a1\u5668\u663e\u793a\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u663e\u793a\u7684\u56fe\u50cf - <code>port</code> (int): \u670d\u52a1\u5668\u7aef\u53e3\uff0c\u9ed8\u8ba4\u4e3a8000 - <code>host</code> (str): \u670d\u52a1\u5668\u4e3b\u673a\u540d\uff0c\u9ed8\u8ba4\u4e3a\"localhost\"</p>"},{"location":"api/image_utils/#_6","title":"\u56fe\u50cf\u8f6c\u6362","text":""},{"location":"api/image_utils/#_7","title":"\u8c03\u6574\u5927\u5c0f","text":"<pre><code>resized = ImageUtils.resize(image, width=None, height=None, keep_aspect_ratio=True)\n</code></pre> <p>\u8c03\u6574\u56fe\u50cf\u5927\u5c0f\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf - <code>width</code> (int, optional): \u76ee\u6807\u5bbd\u5ea6 - <code>height</code> (int, optional): \u76ee\u6807\u9ad8\u5ea6 - <code>keep_aspect_ratio</code> (bool): \u662f\u5426\u4fdd\u6301\u7eb5\u6a2a\u6bd4\uff0c\u9ed8\u8ba4\u4e3aTrue</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u8c03\u6574\u5927\u5c0f\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_8","title":"\u88c1\u526a","text":"<pre><code>cropped = ImageUtils.crop(image, x, y, width, height)\n</code></pre> <p>\u88c1\u526a\u56fe\u50cf\u7684\u6307\u5b9a\u533a\u57df\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u88c1\u526a\u7684\u56fe\u50cf - <code>x</code> (int): \u5de6\u4e0a\u89d2x\u5750\u6807 - <code>y</code> (int): \u5de6\u4e0a\u89d2y\u5750\u6807 - <code>width</code> (int): \u88c1\u526a\u533a\u57df\u5bbd\u5ea6 - <code>height</code> (int): \u88c1\u526a\u533a\u57df\u9ad8\u5ea6</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u88c1\u526a\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_9","title":"\u65cb\u8f6c","text":"<pre><code>rotated = ImageUtils.rotate(image, angle, center=None, scale=1.0)\n</code></pre> <p>\u65cb\u8f6c\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u65cb\u8f6c\u7684\u56fe\u50cf - <code>angle</code> (float): \u65cb\u8f6c\u89d2\u5ea6\uff08\u5ea6\uff09 - <code>center</code> (tuple, optional): \u65cb\u8f6c\u4e2d\u5fc3\u70b9\uff0c\u9ed8\u8ba4\u4e3a\u56fe\u50cf\u4e2d\u5fc3 - <code>scale</code> (float): \u7f29\u653e\u56e0\u5b50\uff0c\u9ed8\u8ba4\u4e3a1.0</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u65cb\u8f6c\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_10","title":"\u7ffb\u8f6c","text":"<pre><code>flipped = ImageUtils.flip(image, flip_code)\n</code></pre> <p>\u7ffb\u8f6c\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u7ffb\u8f6c\u7684\u56fe\u50cf - <code>flip_code</code> (int): \u7ffb\u8f6c\u4ee3\u7801\uff080\u5782\u76f4\u7ffb\u8f6c\uff0c1\u6c34\u5e73\u7ffb\u8f6c\uff0c-1\u4e24\u4e2a\u65b9\u5411\u90fd\u7ffb\u8f6c\uff09</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u7ffb\u8f6c\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_11","title":"\u989c\u8272\u8f6c\u6362","text":""},{"location":"api/image_utils/#rgbbgr","title":"RGB\u5230BGR","text":"<pre><code>bgr = ImageUtils.rgb_to_bgr(rgb_image)\n</code></pre> <p>\u5c06RGB\u683c\u5f0f\u56fe\u50cf\u8f6c\u6362\u4e3aBGR\u683c\u5f0f\u3002</p> <p>\u53c2\u6570\uff1a - <code>rgb_image</code> (numpy.ndarray): RGB\u683c\u5f0f\u56fe\u50cf</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: BGR\u683c\u5f0f\u56fe\u50cf</p>"},{"location":"api/image_utils/#bgrrgb","title":"BGR\u5230RGB","text":"<pre><code>rgb = ImageUtils.bgr_to_rgb(bgr_image)\n</code></pre> <p>\u5c06BGR\u683c\u5f0f\u56fe\u50cf\u8f6c\u6362\u4e3aRGB\u683c\u5f0f\u3002</p> <p>\u53c2\u6570\uff1a - <code>bgr_image</code> (numpy.ndarray): BGR\u683c\u5f0f\u56fe\u50cf</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: RGB\u683c\u5f0f\u56fe\u50cf</p>"},{"location":"api/image_utils/#_12","title":"\u7070\u5ea6\u8f6c\u6362","text":"<pre><code>gray = ImageUtils.to_grayscale(image)\n</code></pre> <p>\u5c06\u56fe\u50cf\u8f6c\u6362\u4e3a\u7070\u5ea6\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u5f69\u8272\u56fe\u50cf</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u7070\u5ea6\u56fe\u50cf</p>"},{"location":"api/image_utils/#_13","title":"\u56fe\u50cf\u52a0\u8f7d\u548c\u4fdd\u5b58","text":""},{"location":"api/image_utils/#_14","title":"\u4ece\u6587\u4ef6\u52a0\u8f7d","text":"<pre><code>image = ImageUtils.load_image(image_path)\n</code></pre> <p>\u4ece\u6587\u4ef6\u52a0\u8f7d\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>image_path</code> (str or Path): \u56fe\u50cf\u6587\u4ef6\u8def\u5f84</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u52a0\u8f7d\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_15","title":"\u4fdd\u5b58\u5230\u6587\u4ef6","text":"<pre><code>ImageUtils.save_image(image, output_path)\n</code></pre> <p>\u5c06\u56fe\u50cf\u4fdd\u5b58\u5230\u6587\u4ef6\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u4fdd\u5b58\u7684\u56fe\u50cf - <code>output_path</code> (str or Path): \u8f93\u51fa\u6587\u4ef6\u8def\u5f84</p>"},{"location":"api/image_utils/#url","title":"\u4eceURL\u52a0\u8f7d","text":"<pre><code>image = ImageUtils.load_image_from_url(url)\n</code></pre> <p>\u4eceURL\u52a0\u8f7d\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>url</code> (str): \u56fe\u50cfURL</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u52a0\u8f7d\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#base64","title":"\u4eceBASE64\u52a0\u8f7d","text":"<pre><code>image = ImageUtils.load_image_from_base64(base64_string)\n</code></pre> <p>\u4eceBASE64\u5b57\u7b26\u4e32\u52a0\u8f7d\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>base64_string</code> (str): BASE64\u7f16\u7801\u7684\u56fe\u50cf\u6570\u636e</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u52a0\u8f7d\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#base64_1","title":"\u8f6c\u6362\u4e3aBASE64","text":"<pre><code>base64_string = ImageUtils.to_base64(image, format=\"png\")\n</code></pre> <p>\u5c06\u56fe\u50cf\u8f6c\u6362\u4e3aBASE64\u5b57\u7b26\u4e32\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u8f6c\u6362\u7684\u56fe\u50cf - <code>format</code> (str): \u56fe\u50cf\u683c\u5f0f\uff08\"png\"\u3001\"jpg\"\u7b49\uff09</p> <p>\u8fd4\u56de\uff1a - <code>str</code>: BASE64\u7f16\u7801\u7684\u56fe\u50cf\u6570\u636e</p>"},{"location":"api/image_utils/#_16","title":"\u56fe\u50cf\u589e\u5f3a\u548c\u5904\u7406","text":""},{"location":"api/image_utils/#_17","title":"\u8c03\u6574\u4eae\u5ea6\u548c\u5bf9\u6bd4\u5ea6","text":"<pre><code>adjusted = ImageUtils.adjust_brightness_contrast(image, brightness=0, contrast=0)\n</code></pre> <p>\u8c03\u6574\u56fe\u50cf\u7684\u4eae\u5ea6\u548c\u5bf9\u6bd4\u5ea6\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u5904\u7406\u7684\u56fe\u50cf - <code>brightness</code> (float): \u4eae\u5ea6\u8c03\u6574\u503c\uff0c\u8303\u56f4\u4e3a-100\u81f3100 - <code>contrast</code> (float): \u5bf9\u6bd4\u5ea6\u8c03\u6574\u503c\uff0c\u8303\u56f4\u4e3a-100\u81f3100</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u5904\u7406\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_18","title":"\u9510\u5316","text":"<pre><code>sharpened = ImageUtils.sharpen(image, amount=1.0)\n</code></pre> <p>\u9510\u5316\u56fe\u50cf\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u9510\u5316\u7684\u56fe\u50cf - <code>amount</code> (float): \u9510\u5316\u7a0b\u5ea6\uff0c\u9ed8\u8ba4\u4e3a1.0</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u9510\u5316\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_19","title":"\u6dfb\u52a0\u6587\u672c","text":"<pre><code>with_text = ImageUtils.add_text(image, text, position, font_scale=1.0, color=(255, 255, 255), thickness=1)\n</code></pre> <p>\u5728\u56fe\u50cf\u4e0a\u6dfb\u52a0\u6587\u672c\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u6dfb\u52a0\u6587\u672c\u7684\u56fe\u50cf - <code>text</code> (str): \u8981\u6dfb\u52a0\u7684\u6587\u672c - <code>position</code> (tuple): \u6587\u672c\u4f4d\u7f6e\uff0c\u683c\u5f0f\u4e3a(x, y) - <code>font_scale</code> (float): \u5b57\u4f53\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4e3a1.0 - <code>color</code> (tuple): \u6587\u672c\u989c\u8272\uff0c\u9ed8\u8ba4\u4e3a\u767d\u8272(255, 255, 255) - <code>thickness</code> (int): \u6587\u672c\u7c97\u7ec6\uff0c\u9ed8\u8ba4\u4e3a1</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u6dfb\u52a0\u6587\u672c\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_20","title":"\u6dfb\u52a0\u77e9\u5f62\u6846","text":"<pre><code>with_rectangle = ImageUtils.draw_rectangle(image, top_left, bottom_right, color=(0, 255, 0), thickness=1)\n</code></pre> <p>\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u77e9\u5f62\u3002</p> <p>\u53c2\u6570\uff1a - <code>image</code> (numpy.ndarray): \u8981\u7ed8\u5236\u77e9\u5f62\u7684\u56fe\u50cf - <code>top_left</code> (tuple): \u5de6\u4e0a\u89d2\u5750\u6807\uff0c\u683c\u5f0f\u4e3a(x, y) - <code>bottom_right</code> (tuple): \u53f3\u4e0b\u89d2\u5750\u6807\uff0c\u683c\u5f0f\u4e3a(x, y) - <code>color</code> (tuple): \u77e9\u5f62\u989c\u8272\uff0c\u9ed8\u8ba4\u4e3a\u7eff\u8272(0, 255, 0) - <code>thickness</code> (int): \u7ebf\u6761\u7c97\u7ec6\uff0c\u9ed8\u8ba4\u4e3a1</p> <p>\u8fd4\u56de\uff1a - <code>numpy.ndarray</code>: \u7ed8\u5236\u77e9\u5f62\u540e\u7684\u56fe\u50cf</p>"},{"location":"api/image_utils/#_21","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/image_utils/#_22","title":"\u57fa\u672c\u56fe\u50cf\u5904\u7406","text":"<pre><code>from aitoolkit_base import ImageUtils\nimport cv2\n\n# \u52a0\u8f7d\u56fe\u50cf\nimage = ImageUtils.load_image(\"path/to/image.jpg\")\n\n# \u8c03\u6574\u56fe\u50cf\u5927\u5c0f\nresized = ImageUtils.resize(image, width=640, height=480)\n\n# \u8f6c\u6362\u4e3a\u7070\u5ea6\ngray = ImageUtils.to_grayscale(resized)\n\n# \u4fdd\u5b58\u5904\u7406\u540e\u7684\u56fe\u50cf\nImageUtils.save_image(gray, \"output_gray.jpg\")\n\n# \u663e\u793a\u56fe\u50cf\nImageUtils.show_image(gray, title=\"\u7070\u5ea6\u56fe\u50cf\")\n</code></pre>"},{"location":"api/image_utils/#jupyter_1","title":"\u5728Jupyter\u4e2d\u4f7f\u7528","text":"<pre><code>from aitoolkit_base import ImageUtils\n\n# \u52a0\u8f7d\u56fe\u50cf\nimage = ImageUtils.load_image(\"path/to/image.jpg\")\n\n# \u8c03\u6574\u5927\u5c0f\u5e76\u663e\u793a\nresized = ImageUtils.resize(image, width=320)\nImageUtils.inline_show(resized)\n\n# \u5e94\u7528\u56fe\u50cf\u589e\u5f3a\nenhanced = ImageUtils.adjust_brightness_contrast(resized, brightness=10, contrast=20)\nImageUtils.inline_show(enhanced)\n</code></pre>"},{"location":"api/image_utils/#_23","title":"\u56fe\u50cf\u6807\u6ce8","text":"<pre><code>from aitoolkit_base import ImageUtils, FaceDetector\n\n# \u52a0\u8f7d\u56fe\u50cf\nimage = ImageUtils.load_image(\"path/to/image.jpg\")\n\n# \u4f7f\u7528FaceDetector\u68c0\u6d4b\u4eba\u8138\ndetector = FaceDetector()\nfaces = detector.run(image)\n\n# \u624b\u52a8\u6807\u6ce8\u68c0\u6d4b\u5230\u7684\u4eba\u8138\nannotated_image = image.copy()\nfor face in faces:\n    # \u83b7\u53d6\u8fb9\u754c\u6846\u5750\u6807\n    x1, y1, width, height = face.bbox.xmin, face.bbox.ymin, face.bbox.width, face.bbox.height\n    x2, y2 = x1 + width, y1 + height\n\n    # \u753b\u77e9\u5f62\n    annotated_image = ImageUtils.draw_rectangle(\n        annotated_image, \n        (int(x1), int(y1)), \n        (int(x2), int(y2)), \n        color=(0, 255, 0), \n        thickness=2\n    )\n\n    # \u6dfb\u52a0\u7f6e\u4fe1\u5ea6\u6587\u672c\n    confidence_text = f\"{face.confidence:.2f}\"\n    annotated_image = ImageUtils.add_text(\n        annotated_image,\n        confidence_text,\n        (int(x1), int(y1) - 10),\n        font_scale=0.5,\n        color=(0, 255, 0),\n        thickness=1\n    )\n\n# \u663e\u793a\u6807\u6ce8\u540e\u7684\u56fe\u50cf\nImageUtils.show_image(annotated_image, title=\"\u4eba\u8138\u68c0\u6d4b\u7ed3\u679c\")\n</code></pre>"},{"location":"api/image_utils/#_24","title":"\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362","text":"<pre><code>from aitoolkit_base import ImageUtils\n\n# \u52a0\u8f7d\u56fe\u50cf\nimage = ImageUtils.load_image(\"path/to/image.jpg\")\n\n# \u5c06\u56fe\u50cf\u8f6c\u6362\u4e3aBASE64\u5b57\u7b26\u4e32\nbase64_data = ImageUtils.to_base64(image, format=\"png\")\nprint(f\"BASE64\u6570\u636e: {base64_data[:50]}...\")\n\n# \u4eceBASE64\u5b57\u7b26\u4e32\u52a0\u8f7d\u56fe\u50cf\ndecoded_image = ImageUtils.load_image_from_base64(base64_data)\n\n# \u9a8c\u8bc1\u8f6c\u6362\u662f\u5426\u6210\u529f\nImageUtils.show_image(decoded_image, title=\"\u4eceBASE64\u89e3\u7801\u7684\u56fe\u50cf\")\n</code></pre>"},{"location":"api/image_utils/#_25","title":"\u56fe\u50cf\u589e\u5f3a\u5de5\u4f5c\u6d41","text":"<pre><code>from aitoolkit_base import ImageUtils\n\n# \u52a0\u8f7d\u56fe\u50cf\noriginal = ImageUtils.load_image(\"path/to/image.jpg\")\n\n# \u521b\u5efa\u589e\u5f3a\u5de5\u4f5c\u6d41\ndef enhance_image(image):\n    # \u8c03\u6574\u5927\u5c0f\n    image = ImageUtils.resize(image, width=800)\n\n    # \u63d0\u9ad8\u5bf9\u6bd4\u5ea6\n    image = ImageUtils.adjust_brightness_contrast(image, brightness=0, contrast=20)\n\n    # \u5e94\u7528\u9510\u5316\n    image = ImageUtils.sharpen(image, amount=1.5)\n\n    return image\n\n# \u5e94\u7528\u589e\u5f3a\nenhanced = enhance_image(original)\n\n# \u4fdd\u5b58\u7ed3\u679c\nImageUtils.save_image(enhanced, \"enhanced_image.jpg\")\n\n# \u5e76\u6392\u663e\u793a\u5bf9\u6bd4\nimport numpy as np\ncomparison = np.hstack((\n    ImageUtils.resize(original, height=400), \n    ImageUtils.resize(enhanced, height=400)\n))\nImageUtils.show_image(comparison, title=\"\u539f\u56fe vs \u589e\u5f3a\")\n</code></pre>"},{"location":"api/image_utils/#_26","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u5927\u591a\u6570\u51fd\u6570\u8fd4\u56de\u65b0\u7684\u56fe\u50cf\u5bf9\u8c61\uff0c\u4e0d\u4fee\u6539\u539f\u59cb\u56fe\u50cf</li> <li>OpenCV\u4f7f\u7528BGR\u989c\u8272\u987a\u5e8f\uff0c\u800c\u4e0d\u662fRGB\uff0c\u8bf7\u6ce8\u610f\u4f7f\u7528\u76f8\u5e94\u7684\u8f6c\u6362\u51fd\u6570</li> <li>\u5728Jupyter Notebook\u4e2d\u4f7f\u7528<code>inline_show()</code>\u800c\u4e0d\u662f<code>show_image()</code>\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c</li> <li>\u52a0\u8f7d\u5927\u56fe\u50cf\u6587\u4ef6\u65f6\u8bf7\u6ce8\u610f\u5185\u5b58\u4f7f\u7528</li> <li><code>web_show()</code>\u4f1a\u542f\u52a8\u4e00\u4e2a\u4e34\u65f6Web\u670d\u52a1\u5668\uff0c\u9002\u7528\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u8fd0\u884c\u4f46\u9700\u8981\u67e5\u770b\u56fe\u50cf\u7684\u573a\u666f </li> </ol>"},{"location":"api/model_manager/","title":"ModelManager","text":"<p>\u6a21\u578b\u7ba1\u7406\u5668\u8d1f\u8d23AIToolkit Base\u4e2d\u5404\u79cd\u6a21\u578b\u7684\u4e0b\u8f7d\u548c\u7f13\u5b58\u7ba1\u7406\uff0c\u786e\u4fdd\u6a21\u578b\u6587\u4ef6\u5728\u9700\u8981\u65f6\u80fd\u591f\u81ea\u52a8\u4e0b\u8f7d\uff0c\u5e76\u4e14\u6709\u6548\u5730\u7ba1\u7406\u672c\u5730\u7f13\u5b58\u3002</p>"},{"location":"api/model_manager/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import ModelManager\n</code></pre>"},{"location":"api/model_manager/#_2","title":"\u7c7b\u65b9\u6cd5\u6982\u89c8","text":""},{"location":"api/model_manager/#get_model_path","title":"get_model_path","text":"<p>\u83b7\u53d6\u6307\u5b9a\u6a21\u578b\u7684\u672c\u5730\u8def\u5f84\uff0c\u5982\u679c\u6a21\u578b\u4e0d\u5b58\u5728\u5219\u81ea\u52a8\u4e0b\u8f7d\u3002</p> <pre><code>model_path = ModelManager.get_model_path(model_name)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>model_name</code> (str): \u6a21\u578b\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u9884\u5b9a\u4e49\u6a21\u578b\u540d\u6216URL</p> <p>\u8fd4\u56de\uff1a - <code>Path</code>: \u6307\u5411\u6a21\u578b\u6587\u4ef6\u7684\u672c\u5730\u8def\u5f84</p>"},{"location":"api/model_manager/#download_model","title":"download_model","text":"<p>\u5f3a\u5236\u4e0b\u8f7d\u6307\u5b9a\u7684\u6a21\u578b\u3002</p> <pre><code>model_path = ModelManager.download_model(model_name, force=False)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>model_name</code> (str): \u6a21\u578b\u540d\u79f0\u6216URL - <code>force</code> (bool): \u662f\u5426\u5f3a\u5236\u91cd\u65b0\u4e0b\u8f7d\uff0c\u5373\u4f7f\u6a21\u578b\u5df2\u5b58\u5728</p> <p>\u8fd4\u56de\uff1a - <code>Path</code>: \u6307\u5411\u4e0b\u8f7d\u7684\u6a21\u578b\u6587\u4ef6\u7684\u672c\u5730\u8def\u5f84</p>"},{"location":"api/model_manager/#clear_cache","title":"clear_cache","text":"<p>\u6e05\u9664\u6307\u5b9a\u6a21\u578b\u6216\u6240\u6709\u6a21\u578b\u7684\u7f13\u5b58\u3002</p> <pre><code>ModelManager.clear_cache(model_name=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>model_name</code> (str, optional): \u8981\u6e05\u9664\u7684\u6a21\u578b\u540d\u79f0\uff0c\u5982\u679c\u4e3aNone\u5219\u6e05\u9664\u6240\u6709\u7f13\u5b58</p>"},{"location":"api/model_manager/#set_cache_dir","title":"set_cache_dir","text":"<p>\u8bbe\u7f6e\u6a21\u578b\u7f13\u5b58\u76ee\u5f55\u3002</p> <pre><code>ModelManager.set_cache_dir(cache_dir)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>cache_dir</code> (str or Path): \u65b0\u7684\u7f13\u5b58\u76ee\u5f55\u8def\u5f84</p>"},{"location":"api/model_manager/#get_cache_dir","title":"get_cache_dir","text":"<p>\u83b7\u53d6\u5f53\u524d\u7684\u6a21\u578b\u7f13\u5b58\u76ee\u5f55\u3002</p> <pre><code>cache_dir = ModelManager.get_cache_dir()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>Path</code>: \u5f53\u524d\u7684\u7f13\u5b58\u76ee\u5f55\u8def\u5f84</p>"},{"location":"api/model_manager/#list_models","title":"list_models","text":"<p>\u5217\u51fa\u5f53\u524d\u7f13\u5b58\u7684\u6240\u6709\u6a21\u578b\u3002</p> <pre><code>models = ModelManager.list_models()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>list</code>: \u7f13\u5b58\u4e2d\u6240\u6709\u6a21\u578b\u7684\u5217\u8868</p>"},{"location":"api/model_manager/#get_model_info","title":"get_model_info","text":"<p>\u83b7\u53d6\u6307\u5b9a\u6a21\u578b\u7684\u4fe1\u606f\u3002</p> <pre><code>info = ModelManager.get_model_info(model_name)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>model_name</code> (str): \u6a21\u578b\u540d\u79f0</p> <p>\u8fd4\u56de\uff1a - <code>dict</code>: \u5305\u542b\u6a21\u578b\u4fe1\u606f\u7684\u5b57\u5178\uff08\u6587\u4ef6\u5927\u5c0f\u3001\u4e0b\u8f7d\u65e5\u671f\u7b49\uff09</p>"},{"location":"api/model_manager/#_3","title":"\u652f\u6301\u7684\u9884\u5b9a\u4e49\u6a21\u578b","text":"<p>ModelManager\u652f\u6301\u4ee5\u4e0b\u9884\u5b9a\u4e49\u6a21\u578b\u540d\u79f0\uff1a</p> \u6a21\u578b\u540d\u79f0 \u68c0\u6d4b\u5668\u7c7b \u8bf4\u660e <code>face_detection</code> FaceDetector \u9762\u90e8\u68c0\u6d4b\u6a21\u578b <code>face_landmark</code> FaceLandmarker \u9762\u90e8\u5173\u952e\u70b9\u6a21\u578b <code>hand_landmark</code> HandLandmarker \u624b\u90e8\u5173\u952e\u70b9\u6a21\u578b <code>pose_landmark</code> PoseLandmarker \u4eba\u4f53\u59ff\u6001\u6a21\u578b <code>gesture_recognizer</code> GestureRecognizer \u624b\u52bf\u8bc6\u522b\u6a21\u578b <code>object_detector</code> ObjectDetector \u7269\u4f53\u68c0\u6d4b\u6a21\u578b"},{"location":"api/model_manager/#_4","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/model_manager/#_5","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u83b7\u53d6\u6a21\u578b\u8def\u5f84\u548c\u67e5\u770b\u6a21\u578b\u4fe1\u606f\uff1a</p> <pre><code>from aitoolkit_base import ModelManager\n\n# \u83b7\u53d6\u4eba\u8138\u68c0\u6d4b\u6a21\u578b\u7684\u8def\u5f84\uff08\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u4e0b\u8f7d\uff09\nmodel_path = ModelManager.get_model_path(\"face_detection\")\nprint(f\"\u4eba\u8138\u68c0\u6d4b\u6a21\u578b\u8def\u5f84: {model_path}\")\n\n# \u83b7\u53d6\u6a21\u578b\u4fe1\u606f\nmodel_info = ModelManager.get_model_info(\"face_detection\")\nprint(f\"\u6a21\u578b\u5927\u5c0f: {model_info.get('size', 'unknown')} \u5b57\u8282\")\nprint(f\"\u4e0b\u8f7d\u65f6\u95f4: {model_info.get('download_date', 'unknown')}\")\n\n# \u5217\u51fa\u6240\u6709\u7f13\u5b58\u7684\u6a21\u578b\ncached_models = ModelManager.list_models()\nprint(f\"\u5df2\u7f13\u5b58\u7684\u6a21\u578b: {', '.join(cached_models)}\")\n</code></pre>"},{"location":"api/model_manager/#_6","title":"\u5f3a\u5236\u91cd\u65b0\u4e0b\u8f7d\u6a21\u578b","text":"<p>\u6709\u65f6\u53ef\u80fd\u9700\u8981\u5f3a\u5236\u91cd\u65b0\u4e0b\u8f7d\u6a21\u578b\uff08\u4f8b\u5982\uff0c\u5f53\u6a21\u578b\u6709\u66f4\u65b0\u6216\u672c\u5730\u6587\u4ef6\u53ef\u80fd\u5df2\u635f\u574f\uff09\uff1a</p> <pre><code>from aitoolkit_base import ModelManager\n\n# \u5f3a\u5236\u91cd\u65b0\u4e0b\u8f7d\u4eba\u8138\u68c0\u6d4b\u6a21\u578b\nmodel_path = ModelManager.download_model(\"face_detection\", force=True)\nprint(f\"\u6a21\u578b\u5df2\u91cd\u65b0\u4e0b\u8f7d\u5230: {model_path}\")\n</code></pre>"},{"location":"api/model_manager/#_7","title":"\u81ea\u5b9a\u4e49\u7f13\u5b58\u76ee\u5f55","text":"<p>\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6a21\u578b\u7f13\u5b58\u7684\u4f4d\u7f6e\uff1a</p> <pre><code>from aitoolkit_base import ModelManager\nimport os\n\n# \u83b7\u53d6\u5f53\u524d\u7f13\u5b58\u76ee\u5f55\ncurrent_dir = ModelManager.get_cache_dir()\nprint(f\"\u5f53\u524d\u7f13\u5b58\u76ee\u5f55: {current_dir}\")\n\n# \u8bbe\u7f6e\u65b0\u7684\u7f13\u5b58\u76ee\u5f55\nnew_cache_dir = os.path.join(os.path.expanduser(\"~\"), \"custom_model_cache\")\nModelManager.set_cache_dir(new_cache_dir)\nprint(f\"\u65b0\u7684\u7f13\u5b58\u76ee\u5f55: {ModelManager.get_cache_dir()}\")\n\n# \u4e0b\u8f7d\u6a21\u578b\u5230\u65b0\u7684\u7f13\u5b58\u76ee\u5f55\nmodel_path = ModelManager.get_model_path(\"face_detection\")\nprint(f\"\u6a21\u578b\u4fdd\u5b58\u5230\u65b0\u4f4d\u7f6e: {model_path}\")\n</code></pre>"},{"location":"api/model_manager/#_8","title":"\u6e05\u7406\u7f13\u5b58","text":"<p>\u60a8\u53ef\u4ee5\u6e05\u7406\u7279\u5b9a\u6a21\u578b\u6216\u6240\u6709\u6a21\u578b\u7684\u7f13\u5b58\uff1a</p> <pre><code>from aitoolkit_base import ModelManager\n\n# \u6e05\u7406\u7279\u5b9a\u6a21\u578b\u7684\u7f13\u5b58\nModelManager.clear_cache(\"face_detection\")\nprint(\"\u4eba\u8138\u68c0\u6d4b\u6a21\u578b\u7f13\u5b58\u5df2\u6e05\u7406\")\n\n# \u6e05\u7406\u6240\u6709\u6a21\u578b\u7f13\u5b58\nModelManager.clear_cache()\nprint(\"\u6240\u6709\u6a21\u578b\u7f13\u5b58\u5df2\u6e05\u7406\")\n</code></pre>"},{"location":"api/model_manager/#url","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u578bURL","text":"<p>ModelManager\u8fd8\u652f\u6301\u4ece\u81ea\u5b9a\u4e49URL\u4e0b\u8f7d\u6a21\u578b\uff1a</p> <pre><code>from aitoolkit_base import ModelManager\n\n# \u4ece\u81ea\u5b9a\u4e49URL\u4e0b\u8f7d\u6a21\u578b\ncustom_url = \"https://example.com/path/to/custom_model.tflite\"\nmodel_path = ModelManager.get_model_path(custom_url)\nprint(f\"\u81ea\u5b9a\u4e49\u6a21\u578b\u5df2\u4e0b\u8f7d\u5230: {model_path}\")\n</code></pre>"},{"location":"api/model_manager/#_9","title":"\u9ad8\u7ea7\u4f7f\u7528\uff1a\u4e0e\u68c0\u6d4b\u5668\u4e00\u8d77\u4f7f\u7528","text":"<p>\u901a\u5e38\u4e0d\u9700\u8981\u76f4\u63a5\u4f7f\u7528ModelManager\uff0c\u56e0\u4e3a\u5404\u68c0\u6d4b\u5668\u7c7b\u4f1a\u5728\u521d\u59cb\u5316\u65f6\u81ea\u52a8\u5904\u7406\u6a21\u578b\u4e0b\u8f7d\uff1a</p> <pre><code>from aitoolkit_base import FaceDetector\n\n# \u521b\u5efa\u68c0\u6d4b\u5668\u65f6\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u548c\u52a0\u8f7d\u6240\u9700\u6a21\u578b\ndetector = FaceDetector()\n# \u65e0\u9700\u624b\u52a8\u8c03\u7528ModelManager\n</code></pre>"},{"location":"api/model_manager/#_10","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u6a21\u578b\u9996\u6b21\u4e0b\u8f7d\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u53d6\u51b3\u4e8e\u7f51\u7edc\u901f\u5ea6\u548c\u6a21\u578b\u5927\u5c0f</li> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6a21\u578b\u7f13\u5b58\u5728\u7528\u6237\u76ee\u5f55\u7684<code>.aitoolkit_models</code>\u6587\u4ef6\u5939\u4e2d</li> <li>\u5982\u679c\u4e0b\u8f7d\u5931\u8d25\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5e94\u7528\u7a0b\u5e8f\u5e94\u59a5\u5584\u5904\u7406\u8fd9\u79cd\u60c5\u51b5</li> <li>\u6a21\u578b\u66f4\u65b0\u65f6\uff0c\u4f7f\u7528<code>download_model(force=True)</code>\u53ef\u786e\u4fdd\u83b7\u53d6\u6700\u65b0\u7248\u672c</li> <li>\u5728\u65e0\u7f51\u7edc\u73af\u5883\u4e2d\uff0c\u786e\u4fdd\u9884\u5148\u4e0b\u8f7d\u6240\u6709\u9700\u8981\u7684\u6a21\u578b</li> <li>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e0d\u9700\u8981\u76f4\u63a5\u4e0eModelManager\u4ea4\u4e92\uff0c\u68c0\u6d4b\u5668\u7c7b\u4f1a\u81ea\u52a8\u7ba1\u7406\u6a21\u578b </li> </ol>"},{"location":"api/object_detector/","title":"ObjectDetector","text":"<p><code>ObjectDetector</code> \u662f\u7528\u4e8e\u68c0\u6d4b\u56fe\u50cf\u6216\u89c6\u9891\u4e2d\u7684\u7269\u4f53\u7684\u7c7b\uff0c\u53ef\u4ee5\u8bc6\u522b\u51fa\u591a\u79cd\u5e38\u89c1\u7269\u4f53\u7684\u4f4d\u7f6e\u548c\u7c7b\u522b\u3002</p>"},{"location":"api/object_detector/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import ObjectDetector\n</code></pre>"},{"location":"api/object_detector/#_2","title":"\u521d\u59cb\u5316\u53c2\u6570","text":"<p>\u521b\u5efa <code>ObjectDetector</code> \u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>ObjectDetector(\n    input_source=None,               # \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f\n    min_detection_confidence=0.5,    # \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\n    enable_gpu=False,                # \u662f\u5426\u542f\u7528GPU\u52a0\u901f\n    result_callback=None,            # \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\n    max_results=5                    # \u6700\u5927\u68c0\u6d4b\u7ed3\u679c\u6570\n)\n</code></pre> \u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u63cf\u8ff0 input_source None/str/Path/np.ndarray None \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f min_detection_confidence float 0.5 \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] enable_gpu bool False \u662f\u5426\u542f\u7528GPU\u52a0\u901f result_callback callable None \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5b9e\u65f6\u6d41\u6a21\u5f0f max_results int 5 \u6700\u5927\u68c0\u6d4b\u7ed3\u679c\u6570"},{"location":"api/object_detector/#_3","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"api/object_detector/#run","title":"run","text":"<p>\u8fd0\u884c\u7269\u4f53\u68c0\u6d4b\uff0c\u8fd4\u56de\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>objects = detector.run(frame=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>frame</code> (np.ndarray, \u53ef\u9009): \u8981\u5904\u7406\u7684\u56fe\u50cf\u5e27\uff0c\u4ec5\u89c6\u9891\u6d41\u6a21\u5f0f\u9700\u8981\u3002</p> <p>\u8fd4\u56de\uff1a - <code>list</code>: \u5305\u542b\u68c0\u6d4b\u5230\u7684\u7269\u4f53\u4fe1\u606f\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u7269\u4f53\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u62ec:   - <code>bounding_box</code> (dict): \u8fb9\u754c\u6846\uff0c\u5305\u542b <code>x_min</code>, <code>y_min</code>, <code>width</code>, <code>height</code>   - <code>categories</code> (list): \u7c7b\u522b\u4fe1\u606f\u5217\u8868\uff0c\u6bcf\u4e2a\u7c7b\u522b\u5305\u542b <code>index</code>, <code>score</code>, <code>category_name</code>   - <code>category_name</code> (str): \u6700\u53ef\u80fd\u7684\u7c7b\u522b\u540d\u79f0   - <code>score</code> (float): \u6700\u53ef\u80fd\u7684\u7c7b\u522b\u7f6e\u4fe1\u5ea6</p>"},{"location":"api/object_detector/#draw","title":"draw","text":"<p>\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>result_image = detector.draw(image, objects=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u7ed8\u5236\u7684\u539f\u59cb\u56fe\u50cf - <code>objects</code> (list, \u53ef\u9009): \u7531 <code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u4e3aNone\u5219\u4f7f\u7528\u6700\u8fd1\u4e00\u6b21\u7684\u7ed3\u679c</p> <p>\u8fd4\u56de\uff1a - <code>np.ndarray</code>: \u7ed8\u5236\u4e86\u68c0\u6d4b\u7ed3\u679c\u7684\u56fe\u50cf</p>"},{"location":"api/object_detector/#get_fps","title":"get_fps","text":"<p>\u83b7\u53d6\u5f53\u524d\u5904\u7406\u7684\u5e27\u7387\u3002</p> <pre><code>fps = detector.get_fps()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>float</code>: \u5f53\u524d\u7684FPS</p>"},{"location":"api/object_detector/#close","title":"close","text":"<p>\u91ca\u653e\u8d44\u6e90\u3002</p> <pre><code>detector.close()\n</code></pre>"},{"location":"api/object_detector/#_4","title":"\u652f\u6301\u7684\u7269\u4f53\u7c7b\u522b","text":"<p>ObjectDetector\u652f\u6301\u68c0\u6d4b\u591a\u79cd\u5e38\u89c1\u7269\u4f53\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a</p> <ul> <li>\u4eba\uff08person\uff09</li> <li>\u81ea\u884c\u8f66\uff08bicycle\uff09</li> <li>\u6c7d\u8f66\uff08car\uff09</li> <li>\u6469\u6258\u8f66\uff08motorcycle\uff09</li> <li>\u98de\u673a\uff08airplane\uff09</li> <li>\u516c\u4ea4\u8f66\uff08bus\uff09</li> <li>\u706b\u8f66\uff08train\uff09</li> <li>\u5361\u8f66\uff08truck\uff09</li> <li>\u8239\uff08boat\uff09</li> <li>\u7ea2\u7eff\u706f\uff08traffic light\uff09</li> <li>\u6d88\u9632\u6813\uff08fire hydrant\uff09</li> <li>\u6905\u5b50\uff08chair\uff09</li> <li>\u6c99\u53d1\uff08sofa\uff09</li> <li>\u684c\u5b50\uff08table\uff09</li> <li>\u624b\u673a\uff08cell phone\uff09</li> <li>\u4e66\uff08book\uff09</li> <li>\u7b14\u8bb0\u672c\u7535\u8111\uff08laptop\uff09</li> <li>\u7b49\u591a\u79cd\u5e38\u89c1\u7269\u4f53</li> </ul>"},{"location":"api/object_detector/#_5","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/object_detector/#_6","title":"\u56fe\u7247\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import ObjectDetector\nimport cv2\n\n# \u65b9\u6cd51\uff1a\u4f7f\u7528\u56fe\u7247\u8def\u5f84\nwith ObjectDetector(input_source=\"image.jpg\", min_detection_confidence=0.6) as detector:\n    objects = detector.run()\n    image = cv2.imread(\"image.jpg\")\n    result = detector.draw(image, objects)\n    cv2.imwrite(\"objects_result.jpg\", result)\n\n# \u65b9\u6cd52\uff1a\u4f7f\u7528\u56fe\u7247\u6570\u636e\nimage = cv2.imread(\"image.jpg\")\nwith ObjectDetector(input_source=image) as detector:\n    objects = detector.run()\n    result = detector.draw(image, objects)\n    cv2.imwrite(\"objects_result.jpg\", result)\n</code></pre>"},{"location":"api/object_detector/#_7","title":"\u89c6\u9891\u6d41\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import ObjectDetector, Camera\nimport cv2\n\n# \u5b9e\u65f6\u68c0\u6d4b\nwith Camera(0) as camera, ObjectDetector(max_results=10) as detector:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        objects = detector.run(frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = detector.draw(frame, objects)\n\n        # \u663e\u793aFPS\u548c\u68c0\u6d4b\u5230\u7684\u7269\u4f53\u6570\u91cf\n        fps = detector.get_fps()\n        cv2.putText(result, f\"FPS: {fps:.1f}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n        cv2.putText(result, f\"\u7269\u4f53\u6570: {len(objects) if objects else 0}\", (10, 70), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u7269\u4f53\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/object_detector/#_8","title":"\u7279\u5b9a\u7269\u4f53\u8fc7\u6ee4","text":"<pre><code>from aitoolkit_base import ObjectDetector, Camera\nimport cv2\n\n# \u53ea\u5173\u6ce8\u7279\u5b9a\u7c7b\u522b\u7684\u7269\u4f53\ninterested_categories = [\"person\", \"car\", \"bicycle\", \"cell phone\"]\n\nwith Camera(0) as camera, ObjectDetector(max_results=20) as detector:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        objects = detector.run(frame)\n\n        # \u8fc7\u6ee4\u611f\u5174\u8da3\u7684\u7269\u4f53\n        if objects:\n            filtered_objects = [obj for obj in objects if obj.get(\"category_name\") in interested_categories]\n        else:\n            filtered_objects = []\n\n        # \u521b\u5efa\u526f\u672c\u7528\u4e8e\u7ed8\u5236\n        result = frame.copy()\n\n        # \u7ed8\u5236\u8fc7\u6ee4\u540e\u7684\u7269\u4f53\n        for obj in filtered_objects:\n            # \u83b7\u53d6\u8fb9\u754c\u6846\u548c\u7c7b\u522b\n            box = obj[\"bounding_box\"]\n            category = obj[\"category_name\"]\n            score = obj[\"score\"]\n\n            # \u8ba1\u7b97\u50cf\u7d20\u5750\u6807\n            x_min = int(box[\"x_min\"])\n            y_min = int(box[\"y_min\"])\n            width = int(box[\"width\"])\n            height = int(box[\"height\"])\n\n            # \u7ed8\u5236\u8fb9\u754c\u6846\n            cv2.rectangle(result, (x_min, y_min), (x_min + width, y_min + height), (0, 255, 0), 2)\n\n            # \u663e\u793a\u7c7b\u522b\u548c\u7f6e\u4fe1\u5ea6\n            label = f\"{category}: {score:.2f}\"\n            cv2.putText(result, label, (x_min, y_min - 10), \n                       cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)\n\n        # \u663e\u793a\u7ed3\u679c\u548c\u8fc7\u6ee4\u540e\u7684\u7269\u4f53\u6570\u91cf\n        cv2.putText(result, f\"\u8fc7\u6ee4\u540e\u7269\u4f53\u6570: {len(filtered_objects)}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n        cv2.imshow(\"\u7279\u5b9a\u7269\u4f53\u68c0\u6d4b\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/object_detector/#_9","title":"\u7269\u4f53\u8ba1\u6570\u7edf\u8ba1","text":"<pre><code>from aitoolkit_base import ObjectDetector, Camera\nimport cv2\nfrom collections import Counter\n\n# \u7269\u4f53\u8ba1\u6570\u7edf\u8ba1\nwith Camera(0) as camera, ObjectDetector() as detector:\n    # \u7528\u4e8e\u5b58\u50a8\u68c0\u6d4b\u5230\u7684\u7269\u4f53\u7c7b\u522b\u8ba1\u6570\n    category_counter = Counter()\n\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        objects = detector.run(frame)\n\n        # \u66f4\u65b0\u8ba1\u6570\u5668\n        if objects:\n            # \u91cd\u7f6e\u8ba1\u6570\u5668\n            category_counter.clear()\n            # \u7edf\u8ba1\u5f53\u524d\u5e27\u4e2d\u7684\u7269\u4f53\u7c7b\u522b\n            for obj in objects:\n                category = obj.get(\"category_name\", \"unknown\")\n                category_counter[category] += 1\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = detector.draw(frame, objects)\n\n        # \u663e\u793a\u7269\u4f53\u8ba1\u6570\u7edf\u8ba1\n        y_offset = 30\n        cv2.putText(result, \"\u7269\u4f53\u7edf\u8ba1:\", (10, y_offset), \n                   cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 255), 2)\n        y_offset += 30\n\n        for category, count in category_counter.most_common():\n            cv2.putText(result, f\"{category}: {count}\", (30, y_offset), \n                       cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 255), 2)\n            y_offset += 25\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u7269\u4f53\u8ba1\u6570\u7edf\u8ba1\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/object_detector/#_10","title":"\u8fd4\u56de\u6570\u636e\u7ed3\u6784","text":"<p><code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>[\n    {\n        \"bounding_box\": {\n            \"x_min\": 125,\n            \"y_min\": 86,\n            \"width\": 175,\n            \"height\": 200\n        },\n        \"categories\": [\n            {\"index\": 0, \"score\": 0.92, \"category_name\": \"person\"},\n            {\"index\": 1, \"score\": 0.03, \"category_name\": \"bicycle\"}\n            # \u53ef\u80fd\u6709\u5176\u4ed6\u5019\u9009\u7c7b\u522b...\n        ],\n        \"category_name\": \"person\",  # \u6700\u53ef\u80fd\u7684\u7c7b\u522b\n        \"score\": 0.92  # \u6700\u53ef\u80fd\u7684\u7c7b\u522b\u7f6e\u4fe1\u5ea6\n    },\n    # \u53ef\u80fd\u6709\u591a\u4e2a\u7269\u4f53...\n]\n</code></pre>"},{"location":"api/object_detector/#_11","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>ObjectDetector \u9ed8\u8ba4\u6700\u591a\u8fd4\u56de5\u4e2a\u68c0\u6d4b\u7ed3\u679c\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>max_results</code> \u53c2\u6570\u8c03\u6574</li> <li>\u68c0\u6d4b\u7ed3\u679c\u4f1a\u6309\u7167\u7f6e\u4fe1\u5ea6\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f</li> <li>\u7269\u4f53\u68c0\u6d4b\u5728\u590d\u6742\u80cc\u666f\u6216\u5149\u7ebf\u4e0d\u8db3\u7684\u73af\u5883\u4e0b\u53ef\u80fd\u4e0d\u591f\u7a33\u5b9a</li> <li>\u68c0\u6d4b\u901f\u5ea6\u4e0e\u56fe\u50cf\u5927\u5c0f\u3001\u786c\u4ef6\u6027\u80fd\u548c\u68c0\u6d4b\u7269\u4f53\u6570\u91cf\u76f8\u5173</li> <li>\u8fb9\u754c\u6846\u5750\u6807\u662f\u5b9e\u9645\u50cf\u7d20\u503c\uff0c\u4e0d\u9700\u8981\u989d\u5916\u8f6c\u6362</li> <li>\u68c0\u6d4b\u7ed3\u679c\u662f\u5f53\u524d\u5e27\u7684\u7ed3\u679c\uff0c\u4e0d\u5305\u542b\u8ddf\u8e2a\u529f\u80fd</li> <li>\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574 <code>min_detection_confidence</code> \u53c2\u6570\u8fc7\u6ee4\u4f4e\u7f6e\u4fe1\u5ea6\u7684\u68c0\u6d4b\u7ed3\u679c</li> <li>\u63a8\u8350\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08with\u8bed\u53e5\uff09\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90 </li> </ol>"},{"location":"api/pose_landmarker/","title":"PoseLandmarker","text":"<p><code>PoseLandmarker</code> \u662f\u7528\u4e8e\u68c0\u6d4b\u548c\u8ddf\u8e2a\u4eba\u4f5333\u4e2a\u5173\u952e\u70b9\u7684\u7c7b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7cbe\u786e\u7684\u4eba\u4f53\u59ff\u6001\u5206\u6790\u3002</p>"},{"location":"api/pose_landmarker/#_1","title":"\u5bfc\u5165","text":"<pre><code>from aitoolkit_base import PoseLandmarker\n</code></pre>"},{"location":"api/pose_landmarker/#_2","title":"\u521d\u59cb\u5316\u53c2\u6570","text":"<p>\u521b\u5efa <code>PoseLandmarker</code> \u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>PoseLandmarker(\n    input_source=None,               # \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f\n    min_detection_confidence=0.5,    # \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\n    min_tracking_confidence=0.5,     # \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\n    enable_gpu=False,                # \u662f\u5426\u542f\u7528GPU\u52a0\u901f\n    result_callback=None,            # \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\n    num_poses=1,                     # \u6700\u5927\u68c0\u6d4b\u4eba\u6570\n    output_segmentation_masks=False  # \u662f\u5426\u8f93\u51fa\u5206\u5272\u8499\u7248\n)\n</code></pre> \u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4\u503c \u63cf\u8ff0 input_source None/str/Path/np.ndarray None \u8f93\u5165\u6e90\uff0c\u51b3\u5b9a\u8fd0\u884c\u6a21\u5f0f min_detection_confidence float 0.5 \u6700\u5c0f\u68c0\u6d4b\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] min_tracking_confidence float 0.5 \u6700\u5c0f\u8ddf\u8e2a\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4[0.0, 1.0] enable_gpu bool False \u662f\u5426\u542f\u7528GPU\u52a0\u901f result_callback callable None \u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5b9e\u65f6\u6d41\u6a21\u5f0f num_poses int 1 \u6700\u5927\u68c0\u6d4b\u4eba\u6570 output_segmentation_masks bool False \u662f\u5426\u8f93\u51fa\u5206\u5272\u8499\u7248"},{"location":"api/pose_landmarker/#_3","title":"\u4e3b\u8981\u65b9\u6cd5","text":""},{"location":"api/pose_landmarker/#run","title":"run","text":"<p>\u8fd0\u884c\u4eba\u4f53\u59ff\u6001\u68c0\u6d4b\uff0c\u8fd4\u56de\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>poses = landmarker.run(frame=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>frame</code> (np.ndarray, \u53ef\u9009): \u8981\u5904\u7406\u7684\u56fe\u50cf\u5e27\uff0c\u4ec5\u89c6\u9891\u6d41\u6a21\u5f0f\u9700\u8981\u3002</p> <p>\u8fd4\u56de\uff1a - <code>list</code>: \u5305\u542b\u68c0\u6d4b\u5230\u7684\u4eba\u4f53\u59ff\u6001\u4fe1\u606f\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u4eba\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u62ec:   - <code>pose_landmarks</code> (list): 33\u4e2a\u4eba\u4f53\u5173\u952e\u70b9\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5173\u952e\u70b9\u5305\u542bx\u3001y\u3001z\u5750\u6807\u548c\u53ef\u89c1\u6027   - <code>pose_world_landmarks</code> (list, \u53ef\u9009): 3D\u7a7a\u95f4\u4e2d\u7684\u5173\u952e\u70b9\u5750\u6807\uff0c\u5355\u4f4d\u4e3a\u7c73   - <code>segmentation_mask</code> (np.ndarray, \u53ef\u9009): \u4eba\u4f53\u5206\u5272\u8499\u7248\uff0c\u5982\u679c\u542f\u7528\u4e86output_segmentation_masks</p>"},{"location":"api/pose_landmarker/#draw","title":"draw","text":"<p>\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u68c0\u6d4b\u7ed3\u679c\u3002</p> <pre><code>result_image = landmarker.draw(image, poses=None, connection_drawing_spec=None)\n</code></pre> <p>\u53c2\u6570\uff1a - <code>image</code> (np.ndarray): \u8981\u7ed8\u5236\u7684\u539f\u59cb\u56fe\u50cf - <code>poses</code> (list, \u53ef\u9009): \u7531 <code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u4e3aNone\u5219\u4f7f\u7528\u6700\u8fd1\u4e00\u6b21\u7684\u7ed3\u679c - <code>connection_drawing_spec</code> (dict, \u53ef\u9009): \u8fde\u63a5\u7ebf\u7ed8\u5236\u89c4\u683c\uff0c\u5305\u62ec\u989c\u8272\u3001\u7ebf\u5bbd\u7b49</p> <p>\u8fd4\u56de\uff1a - <code>np.ndarray</code>: \u7ed8\u5236\u4e86\u68c0\u6d4b\u7ed3\u679c\u7684\u56fe\u50cf</p>"},{"location":"api/pose_landmarker/#get_fps","title":"get_fps","text":"<p>\u83b7\u53d6\u5f53\u524d\u5904\u7406\u7684\u5e27\u7387\u3002</p> <pre><code>fps = landmarker.get_fps()\n</code></pre> <p>\u8fd4\u56de\uff1a - <code>float</code>: \u5f53\u524d\u7684FPS</p>"},{"location":"api/pose_landmarker/#close","title":"close","text":"<p>\u91ca\u653e\u8d44\u6e90\u3002</p> <pre><code>landmarker.close()\n</code></pre>"},{"location":"api/pose_landmarker/#_4","title":"\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"api/pose_landmarker/#_5","title":"\u56fe\u7247\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import PoseLandmarker\nimport cv2\n\n# \u65b9\u6cd51\uff1a\u4f7f\u7528\u56fe\u7247\u8def\u5f84\nwith PoseLandmarker(input_source=\"person.jpg\") as landmarker:\n    poses = landmarker.run()\n    image = cv2.imread(\"person.jpg\")\n    result = landmarker.draw(image, poses)\n    cv2.imwrite(\"pose_result.jpg\", result)\n\n# \u65b9\u6cd52\uff1a\u4f7f\u7528\u56fe\u7247\u6570\u636e\nimage = cv2.imread(\"person.jpg\")\nwith PoseLandmarker(input_source=image) as landmarker:\n    poses = landmarker.run()\n    result = landmarker.draw(image, poses)\n    cv2.imwrite(\"pose_result.jpg\", result)\n</code></pre>"},{"location":"api/pose_landmarker/#_6","title":"\u89c6\u9891\u6d41\u6a21\u5f0f","text":"<pre><code>from aitoolkit_base import PoseLandmarker, Camera\nimport cv2\n\n# \u5b9e\u65f6\u68c0\u6d4b\nwith Camera(0) as camera, PoseLandmarker() as landmarker:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        poses = landmarker.run(frame)\n\n        # \u7ed8\u5236\u7ed3\u679c\n        result = landmarker.draw(frame, poses)\n\n        # \u663e\u793aFPS\u548c\u68c0\u6d4b\u5230\u7684\u4eba\u6570\n        fps = landmarker.get_fps()\n        cv2.putText(result, f\"FPS: {fps:.1f}\", (10, 30), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n        cv2.putText(result, f\"\u4eba\u6570: {len(poses) if poses else 0}\", (10, 70), \n                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u4eba\u4f53\u59ff\u6001\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/pose_landmarker/#_7","title":"\u4f7f\u7528\u5206\u5272\u8499\u7248","text":"<pre><code>from aitoolkit_base import PoseLandmarker, Camera\nimport cv2\nimport numpy as np\n\n# \u542f\u7528\u5206\u5272\u8499\u7248\u8f93\u51fa\nwith Camera(0) as camera, PoseLandmarker(output_segmentation_masks=True) as landmarker:\n    for frame in camera:\n        # \u8fd0\u884c\u68c0\u6d4b\n        poses = landmarker.run(frame)\n\n        if poses and 'segmentation_mask' in poses[0]:\n            # \u83b7\u53d6\u5206\u5272\u8499\u7248\n            mask = poses[0]['segmentation_mask']\n\n            # \u5e94\u7528\u8499\u7248\u5230\u539f\u59cb\u56fe\u50cf\n            background = np.zeros_like(frame)\n            background[:] = (0, 0, 128)  # \u84dd\u8272\u80cc\u666f\n\n            # \u6269\u5c55\u8499\u7248\u52303\u901a\u9053\n            mask_3d = np.stack((mask,) * 3, axis=-1)\n\n            # \u5408\u6210\u524d\u666f\u548c\u80cc\u666f\n            result = frame * mask_3d + background * (1 - mask_3d)\n            result = result.astype(np.uint8)\n\n            # \u5728\u5408\u6210\u7ed3\u679c\u4e0a\u7ed8\u5236\u5173\u952e\u70b9\n            result = landmarker.draw(result, poses)\n        else:\n            # \u5982\u679c\u6ca1\u6709\u68c0\u6d4b\u5230\u4eba\u4f53\u6216\u6ca1\u6709\u8499\u7248\uff0c\u76f4\u63a5\u7ed8\u5236\u5173\u952e\u70b9\n            result = frame.copy()\n            if poses:\n                result = landmarker.draw(result, poses)\n\n        # \u663e\u793a\u7ed3\u679c\n        cv2.imshow(\"\u4eba\u4f53\u5206\u5272\", result)\n        if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n            break\n</code></pre>"},{"location":"api/pose_landmarker/#_8","title":"\u4eba\u4f53\u5173\u952e\u70b9\u7d22\u5f15","text":"<p>\u4ee5\u4e0b\u662f\u4eba\u4f5333\u4e2a\u5173\u952e\u70b9\u7684\u7d22\u5f15\u548c\u5bf9\u5e94\u7684\u540d\u79f0\uff1a</p> \u7d22\u5f15 \u540d\u79f0 \u63cf\u8ff0 0 NOSE \u9f3b\u5b50 1 LEFT_EYE_INNER \u5de6\u773c\u5185\u4fa7 2 LEFT_EYE \u5de6\u773c\u4e2d\u5fc3 3 LEFT_EYE_OUTER \u5de6\u773c\u5916\u4fa7 4 RIGHT_EYE_INNER \u53f3\u773c\u5185\u4fa7 5 RIGHT_EYE \u53f3\u773c\u4e2d\u5fc3 6 RIGHT_EYE_OUTER \u53f3\u773c\u5916\u4fa7 7 LEFT_EAR \u5de6\u8033 8 RIGHT_EAR \u53f3\u8033 9 MOUTH_LEFT \u5634\u5de6\u4fa7 10 MOUTH_RIGHT \u5634\u53f3\u4fa7 11 LEFT_SHOULDER \u5de6\u80a9 12 RIGHT_SHOULDER \u53f3\u80a9 13 LEFT_ELBOW \u5de6\u8098 14 RIGHT_ELBOW \u53f3\u8098 15 LEFT_WRIST \u5de6\u624b\u8155 16 RIGHT_WRIST \u53f3\u624b\u8155 17 LEFT_PINKY \u5de6\u5c0f\u6307 18 RIGHT_PINKY \u53f3\u5c0f\u6307 19 LEFT_INDEX \u5de6\u98df\u6307 20 RIGHT_INDEX \u53f3\u98df\u6307 21 LEFT_THUMB \u5de6\u62c7\u6307 22 RIGHT_THUMB \u53f3\u62c7\u6307 23 LEFT_HIP \u5de6\u9acb 24 RIGHT_HIP \u53f3\u9acb 25 LEFT_KNEE \u5de6\u819d 26 RIGHT_KNEE \u53f3\u819d 27 LEFT_ANKLE \u5de6\u8e1d 28 RIGHT_ANKLE \u53f3\u8e1d 29 LEFT_HEEL \u5de6\u811a\u8ddf 30 RIGHT_HEEL \u53f3\u811a\u8ddf 31 LEFT_FOOT_INDEX \u5de6\u811a\u5c16 32 RIGHT_FOOT_INDEX \u53f3\u811a\u5c16"},{"location":"api/pose_landmarker/#_9","title":"\u8fd4\u56de\u6570\u636e\u7ed3\u6784","text":"<p><code>run()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>[\n    {\n        \"pose_landmarks\": [\n            {\"x\": 0.4, \"y\": 0.3, \"z\": 0.01, \"visibility\": 0.98},  # \u7b2c1\u4e2a\u5173\u952e\u70b9(NOSE)\n            {\"x\": 0.41, \"y\": 0.305, \"z\": 0.011, \"visibility\": 0.97},  # \u7b2c2\u4e2a\u5173\u952e\u70b9(LEFT_EYE_INNER)\n            # ... \u517133\u4e2a\u5173\u952e\u70b9\n        ],\n        \"pose_world_landmarks\": [  # \u5982\u679c\u53ef\u7528\n            {\"x\": 0.23, \"y\": -0.15, \"z\": -0.5, \"visibility\": 0.98},  # \u7b2c1\u4e2a\u5173\u952e\u70b9(NOSE)\uff0c\u5355\u4f4d\u4e3a\u7c73\n            # ... \u517133\u4e2a\u5173\u952e\u70b9\n        ],\n        \"segmentation_mask\": array(...)  # \u5982\u679c\u542f\u7528\u4e86output_segmentation_masks\uff0c\u503c\u8303\u56f4[0,1]\n    },\n    # \u53ef\u80fd\u6709\u591a\u4e2a\u4eba...\n]\n</code></pre>"},{"location":"api/pose_landmarker/#_10","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>PoseLandmarker \u9ed8\u8ba4\u6700\u591a\u68c0\u6d4b\u4e00\u4e2a\u4eba\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>num_poses</code> \u53c2\u6570\u8c03\u6574</li> <li>\u542f\u7528\u5206\u5272\u8499\u7248\u4f1a\u589e\u52a0\u8ba1\u7b97\u8d1f\u62c5\uff0c\u53ef\u80fd\u5f71\u54cd\u5b9e\u65f6\u6027\u80fd</li> <li>\u5173\u952e\u70b9\u5750\u6807\u662f\u5f52\u4e00\u5316\u7684\uff0c\u8303\u56f4\u5728[0,1]\u4e4b\u95f4\uff0c\u9700\u8981\u4e58\u4ee5\u56fe\u50cf\u5c3a\u5bf8\u83b7\u53d6\u5b9e\u9645\u50cf\u7d20\u5750\u6807</li> <li>\u5173\u952e\u70b9\u5305\u542b\u53ef\u89c1\u6027\u5c5e\u6027\uff0c\u503c\u8d8a\u5927\u8868\u793a\u8be5\u70b9\u88ab\u89c2\u5bdf\u5230\u7684\u53ef\u80fd\u6027\u8d8a\u9ad8</li> <li>world_landmarks \u63d0\u4f9b\u7684\u662f3D\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\uff0c\u5355\u4f4d\u4e3a\u7c73\uff0c\u539f\u70b9\u5728\u4eba\u7684\u81c0\u90e8\u4e2d\u5fc3</li> <li>\u68c0\u6d4b\u591a\u4eba\u65f6\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5b9e\u65f6\u6027\u80fd\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574\u53c2\u6570</li> <li>\u63a8\u8350\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff08with\u8bed\u53e5\uff09\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90 </li> </ol>"},{"location":"api/resource_manager/","title":"\u8d44\u6e90\u7ba1\u7406\u52a9\u624b","text":"<p>\u8d44\u6e90\u7ba1\u7406\u52a9\u624b\u80fd\u591f\u81ea\u52a8\u7ba1\u7406\u7a0b\u5e8f\u4f7f\u7528\u7684\u5404\u79cd\u8d44\u6e90\uff08\u4f8b\u5982\u6444\u50cf\u5934\u3001\u8bc6\u522b\u5de5\u5177\u7b49\uff09\uff0c\u8ba9\u8001\u5e08\u548c\u540c\u5b66\u4eec\u4e0d\u5fc5\u62c5\u5fc3\u8d44\u6e90\u95ee\u9898\uff0c\u4e13\u6ce8\u4e8e\u6709\u8da3\u7684\u8bfe\u5802\u6d3b\u52a8\u3002</p>"},{"location":"api/resource_manager/#_2","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u8d44\u6e90\u7ba1\u7406\u52a9\u624b\uff1f","text":"<p>\u5728\u5f00\u53d1\u6709\u8da3\u7684AI\u6559\u5b66\u6d3b\u52a8\u65f6\uff0c\u6211\u4eec\u4f1a\u7528\u5230\u6444\u50cf\u5934\u3001\u8bc6\u522b\u5de5\u5177\u7b49\u8d44\u6e90\u3002\u5982\u679c\u4e0d\u59a5\u5584\u5173\u95ed\u8fd9\u4e9b\u8d44\u6e90\uff1a - \u6444\u50cf\u5934\u53ef\u80fd\u4f1a\u4e00\u76f4\u5904\u4e8e\u5f00\u542f\u72b6\u6001 - \u7a0b\u5e8f\u53ef\u80fd\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u6162 - \u7535\u8111\u53ef\u80fd\u4f1a\u51fa\u73b0\u5361\u987f - \u4e0b\u6b21\u542f\u52a8\u7a0b\u5e8f\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898</p> <p>\u8d44\u6e90\u7ba1\u7406\u52a9\u624b\u4f1a\u81ea\u52a8\u7167\u987e\u8fd9\u4e9b\u95ee\u9898\uff0c\u5c31\u50cf\u4e00\u4e2a\u7ec6\u5fc3\u7684\u7ba1\u5bb6\uff0c\u786e\u4fdd\u6240\u6709\u8d44\u6e90\u90fd\u80fd\u6b63\u786e\u91ca\u653e\u3002</p>"},{"location":"api/resource_manager/#_3","title":"\u5982\u4f55\u4f7f\u7528","text":"<p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e0d\u9700\u8981\u76f4\u63a5\u4f7f\u7528\u8d44\u6e90\u7ba1\u7406\u52a9\u624b\u3002AI\u89c6\u89c9\u5de5\u5177\u5305\u4e2d\u7684\u5de5\u5177\u5df2\u7ecf\u81ea\u52a8\u6ce8\u518c\u5230\u8d44\u6e90\u7ba1\u7406\u52a9\u624b\uff0c\u4f1a\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u81ea\u52a8\u6e05\u7406\u3002</p>"},{"location":"api/resource_manager/#_4","title":"\u6700\u7b80\u5355\u7684\u4f7f\u7528\u65b9\u5f0f","text":"<pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\n# \u521b\u5efa\u76f8\u673a\u548c\u4eba\u8138\u68c0\u6d4b\u5668\ncamera = Camera(0)\ndetector = FaceDetector()\n\n# \u4f7f\u7528\u8d44\u6e90\u8fdb\u884c\u6559\u5b66\u6d3b\u52a8\nfor i in range(100):  # \u5904\u7406100\u5e27\n    ret, frame = camera.read()\n    if ret:\n        faces = detector.run(frame)\n        result = detector.draw(frame, faces)\n        cv2.imshow(\"\u8bfe\u5802\u4e92\u52a8\", result)\n        cv2.waitKey(1)\n\n# \u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u8d44\u6e90\u4f1a\u81ea\u52a8\u6e05\u7406\uff0c\u4e0d\u7528\u62c5\u5fc3\n</code></pre>"},{"location":"api/resource_manager/#_5","title":"\u63a8\u8350\u7684\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u867d\u7136\u8d44\u6e90\u4f1a\u81ea\u52a8\u6e05\u7406\uff0c\u4f46\u63a8\u8350\u4f7f\u7528<code>with</code>\u8bed\u53e5\uff0c\u8fd9\u6837\u8d44\u6e90\u4f1a\u7acb\u5373\u91ca\u653e\uff0c\u4e0d\u5fc5\u7b49\u5230\u7a0b\u5e8f\u7ed3\u675f\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\n# \u4f7f\u7528with\u8bed\u53e5\u521b\u5efa\u76f8\u673a\u548c\u4eba\u8138\u68c0\u6d4b\u5668\nwith Camera(0) as camera, FaceDetector() as detector:\n    for i in range(100):  # \u5904\u7406100\u5e27\n        ret, frame = camera.read()\n        if ret:\n            faces = detector.run(frame)\n            result = detector.draw(frame, faces)\n            cv2.imshow(\"\u8bfe\u5802\u4e92\u52a8\", result)\n            cv2.waitKey(1)\n# \u79bb\u5f00with\u5757\u65f6\uff0c\u8d44\u6e90\u4f1a\u7acb\u5373\u91ca\u653e\n</code></pre>"},{"location":"api/resource_manager/#_6","title":"\u624b\u52a8\u91ca\u653e\u8d44\u6e90","text":"<p>\u5982\u679c\u9700\u8981\u5728\u7a0b\u5e8f\u7ed3\u675f\u524d\u91ca\u653e\u8d44\u6e90\uff0c\u53ef\u4ee5\u4e3b\u52a8\u8c03\u7528<code>close()</code>\u6216<code>release()</code>\u65b9\u6cd5\uff1a</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\n\n# \u521b\u5efa\u76f8\u673a\u548c\u4eba\u8138\u68c0\u6d4b\u5668\ncamera = Camera(0)\ndetector = FaceDetector()\n\ntry:\n    # \u5f00\u5c55\u8bfe\u5802\u6d3b\u52a8\n    for i in range(100):  # \u5904\u7406100\u5e27\n        ret, frame = camera.read()\n        if ret:\n            faces = detector.run(frame)\n            result = detector.draw(frame, faces)\n            cv2.imshow(\"\u8bfe\u5802\u4e92\u52a8\", result)\n            cv2.waitKey(1)\nfinally:\n    # \u4e3b\u52a8\u91ca\u653e\u8d44\u6e90\n    detector.close()\n    camera.release()\n    cv2.destroyAllWindows()\n</code></pre>"},{"location":"api/resource_manager/#jupyter","title":"\u5728Jupyter\u7b14\u8bb0\u672c\u4e2d\u4f7f\u7528","text":"<p>\u8d44\u6e90\u7ba1\u7406\u52a9\u624b\u5bf9Jupyter\u7b14\u8bb0\u672c\u6709\u7279\u6b8a\u652f\u6301\uff0c\u786e\u4fdd\u5373\u4f7f\u5728\u4e2d\u65ad\u6267\u884c\u65f6\uff0c\u8d44\u6e90\u4e5f\u80fd\u88ab\u6b63\u786e\u91ca\u653e\u3002\u8fd9\u5bf9\u8bfe\u5802\u6559\u5b66\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u8001\u5e08\u53ef\u80fd\u9700\u8981\u968f\u65f6\u6682\u505c\u6216\u91cd\u542f\u4ee3\u7801\u3002</p> <pre><code>from aitoolkit_base import Camera, FaceDetector\nimport cv2\nfrom IPython.display import display, Image\n\n# \u5728Jupyter\u4e2d\u8fdb\u884c\u56fe\u50cf\u5206\u6790\u793a\u8303\ncamera = Camera(0)\ndetector = FaceDetector()\n\n# \u62cd\u7167\u5e76\u5206\u6790\nret, frame = camera.read()\nif ret:\n    faces = detector.run(frame)\n    result = detector.draw(frame, faces)\n    cv2.imwrite(\"\u5206\u6790\u7ed3\u679c.jpg\", result)\n    display(Image(\"\u5206\u6790\u7ed3\u679c.jpg\"))\n\n# \u4e0d\u9700\u8981\u624b\u52a8\u91ca\u653e\uff0c\u8d44\u6e90\u7ba1\u7406\u52a9\u624b\u4f1a\u5904\u7406\u597d\u4e00\u5207\n# \u5373\u4f7f\u4e2d\u65ad\u6267\u884c\uff0c\u8d44\u6e90\u4e5f\u4f1a\u81ea\u52a8\u91ca\u653e\n</code></pre>"},{"location":"api/resource_manager/#_7","title":"\u6559\u5b66\u5c0f\u8d34\u58eb","text":"<ol> <li>\u5728\u590d\u6742\u7684\u8bfe\u5802\u6f14\u793a\u4e2d\uff0c\u4f7f\u7528<code>with</code>\u8bed\u53e5\u662f\u6700\u5b89\u5168\u7684\u9009\u62e9</li> <li>\u5982\u679c\u53d1\u73b0\u6444\u50cf\u5934\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u53ef\u80fd\u662f\u4e0a\u4e00\u4e2a\u7a0b\u5e8f\u6ca1\u6709\u6b63\u786e\u91ca\u653e\u8d44\u6e90\uff0c\u91cd\u542f\u7535\u8111\u901a\u5e38\u80fd\u89e3\u51b3\u95ee\u9898</li> <li>\u8bfe\u7a0b\u7ed3\u675f\u540e\u68c0\u67e5\u4efb\u52a1\u7ba1\u7406\u5668\uff0c\u786e\u4fdd\u6ca1\u6709\u9057\u7559\u7684Python\u8fdb\u7a0b\u4ecd\u5728\u8fd0\u884c</li> <li>\u5bf9\u4e8e\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u9879\u76ee\uff08\u5982\u79d1\u6280\u5c55\u793a\uff09\uff0c\u5efa\u8bae\u5b9a\u671f\u91cd\u542f\u7a0b\u5e8f\uff0c\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f</li> <li>\u5728\u914d\u7f6e\u8f83\u4f4e\u7684\u7535\u8111\u4e0a\uff0c\u53ca\u65f6\u91ca\u653e\u8d44\u6e90\u5c24\u4e3a\u91cd\u8981\uff0c\u53ef\u4ee5\u907f\u514d\u7cfb\u7edf\u53d8\u6162 </li> </ol>"}]}